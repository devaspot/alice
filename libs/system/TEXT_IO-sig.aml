(*
 * Author:
 *   Leif Kornstaedt <kornstae@ps.uni-sb.de>
 *   Andreas Rossberg <rossberg@ps.uni-sb.de>
 *
 * Copyright:
 *   Leif Kornstaedt and Andreas Rossberg, 2002-2005
 *
 * Last change:
 *   $Date: 2005-07-22 17:01:23 $ by $Author: rossberg $
 *   $Revision: 1.9 $
 *)

import structure TextPrimIO     from "TextPrimIO"
import signature TEXT_STREAM_IO from "TEXT_STREAM_IO-sig"

signature TEXT_IO =
    sig
	structure StreamIO: TEXT_STREAM_IO
			    where type reader = TextPrimIO.reader
			      and type writer = TextPrimIO.writer
			      and type pos    = TextPrimIO.pos

	type vector = string
	type elem = char

	type instream
	type outstream

	val openIn: string -> instream
	val input: instream -> string
	val input1: instream -> elem option
	val inputN: instream * int -> string
	val inputLine: instream -> string option
	val inputAll: instream -> string
	val canInput: instream * int -> int option
	val lookahead: instream -> elem option
	val closeIn: instream -> unit
	val endOfStream: instream -> bool
	val mkInstream: StreamIO.instream -> instream
	val getInstream: instream -> StreamIO.instream
	val setInstream: instream * StreamIO.instream -> unit

	val openOut: string -> outstream
	val openAppend: string -> outstream
	val openString: string -> instream
	val output: outstream * string -> unit
	val output1: outstream * elem -> unit
	val outputSubstr: outstream * substring -> unit
	val flushOut: outstream -> unit
	val closeOut: outstream -> unit
	val mkOutstream: StreamIO.outstream -> outstream
	val getOutstream: outstream -> StreamIO.outstream
	val setOutstream: outstream * StreamIO.outstream -> unit
	val getPosOut: outstream -> StreamIO.out_pos
	val setPosOut: outstream * StreamIO.out_pos -> unit

	val stdIn: instream
	val stdOut: outstream
	val stdErr: outstream

	val print: string -> unit

	val scanStream:
	    ((elem, StreamIO.instream) StringCvt.reader ->
	     ('a, StreamIO.instream) StringCvt.reader) ->
	    instream -> 'a option
end
