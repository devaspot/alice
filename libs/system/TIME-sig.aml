(*
 * Authors:
 *   Andreas Rossberg <rossberg@ps.uni-sb.de>
 *
 * Copyright:
 *   Andreas Rossberg, 2001-2004
 *
 * Last change:
 *   $Date: 2004-11-14 17:33:09 $ by $Author: bgrund $
 *   $Revision: 1.1 $
 *)


(*
 *  Items marked with (**) are extensions to the Standard Basis.
 *)
signature TIME =
sig
    eqtype time = Time.time
    type t = time							(**)

    exception Time 

    val zeroTime :		time
    
    val now :			unit -> time

    val fromReal :		LargeReal.real -> time
    val toReal :		time -> LargeReal.real
    val toSeconds :		time -> LargeInt.int
    val toMilliseconds :	time -> LargeInt.int
    val toMicroseconds :	time -> LargeInt.int
    val toNanoseconds :		time -> LargeInt.int
    val fromSeconds :		LargeInt.int -> time
    val fromMilliseconds :	LargeInt.int -> time
    val fromMicroseconds :	LargeInt.int -> time
    val fromNanoseconds :	LargeInt.int -> time

    val op + :			time * time -> time
    val op - :			time * time -> time

    val op < :			time * time -> bool
    val op > :			time * time -> bool
    val op <= :			time * time -> bool
    val op >= :			time * time -> bool
    val equal :			time * time -> bool			(**)
    val compare :		time * time -> order
    val hash :			time  -> int				(**)

    val toString :	time -> string
    val fmt :		int -> time -> string
    val fromString :	string -> time option
    val scan :		(char,'a) StringCvt.reader -> 'a -> (time * 'a) option
end
