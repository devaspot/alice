(*
 * Authors:
 *   Benedikt Grundmann <bgrund@ps.uni-sb.de>
 *
 * Copyright:
 *   Benedikt Grundmann, 2004
 *
 * Last change:
 *   $Date: 2005-01-10 11:20:27 $ by $Author: bgrund $
 *   $Revision: 1.4 $
 *)


(*
 *  Items marked with (**) are extensions to the Standard Basis.
 *)
signature DATE =
sig
    datatype weekday = 
        Sun | Mon | Tue | Wed | Thu | Fri | Sat

    datatype month = 
        Jan | Feb | Mar | Apr | May | Jun | Jul | Aug | Sep | Oct | Nov | Dec 

    type date

    type t = date       (**)

    exception Date
    
    val date : {
                   year : int,
                   month : month,
                   day : int,
                   hour : int,
                   minute : int,
                   second : int,
                   offset : Time.time option
                 } -> date

    val year    : date -> int
    val month   : date -> month
    val day     : date -> int
    val hour    : date -> int
    val minute  : date -> int
    val second  : date -> int
    val weekDay : date -> weekday
    val yearDay : date -> int
    val offset  : date -> Time.time option
    val isDst   : date -> bool option

    val localOffset : unit -> Time.time

    val fromTimeLocal : Time.time -> date
    val fromTimeUniv  : Time.time -> date
    
    val toTime : date -> Time.time
    
    val fmt :       string -> date -> string
    val toString :  date -> string

    val compare : date * date -> order

    val scan       : (char, 'a) StringCvt.reader
                       -> (date, 'a) StringCvt.reader
    val fromString : string -> date option

    val scanISO :   (char, 'a) StringCvt.reader -> (date, 'a) StringCvt.reader

    val fromISO :   string -> date option

    val toISO :     date -> string
end
