signature NATIVE_LIBS_COMPONENT =
sig
    structure NativeLibs :
    sig
        structure NativeGLib :
        sig
        val TimeValnew: { tv_sec : int, tv_usec : int } -> '_object
        val TimeValgetFieldTvUsec: '_object -> int
        val TimeValsetFieldTvUsec: '_object * int -> unit
        val TimeValgetFieldTvSec: '_object -> int
        val TimeValsetFieldTvSec: '_object * int -> unit
        val PtrArraygPtrArrayNew: unit -> '_object
        val PtrArrayindex: '_object * int -> '_object
        val PtrArraygetFieldLen: '_object -> int
        val PtrArraysetFieldLen: '_object * int -> unit
        val ObjectgetProperty: '_object * string -> '_gvalue
        val ObjectsetProperty: '_object * string * '_gvalue -> unit
        end
        structure NativePango :
        sig
        val EllipsizeModeToInt : 'pango_ellipsizemode_t -> int
        val EllipsizeModeFromInt : int -> 'pango_ellipsizemode_t
        val EllipsizeModeGetType : unit -> '_gtype
        val DirectionToInt : 'pango_direction_t -> int
        val DirectionFromInt : int -> 'pango_direction_t
        val DirectionGetType : unit -> '_gtype
        val TabAlignToInt : 'pango_tabalign_t -> int
        val TabAlignFromInt : int -> 'pango_tabalign_t
        val TabAlignGetType : unit -> '_gtype
        val WrapModeToInt : 'pango_wrapmode_t -> int
        val WrapModeFromInt : int -> 'pango_wrapmode_t
        val WrapModeGetType : unit -> '_gtype
        val AlignmentToInt : 'pango_alignment_t -> int
        val AlignmentFromInt : int -> 'pango_alignment_t
        val AlignmentGetType : unit -> '_gtype
        val FontMaskToInt : 'pango_fontmask_t -> int
        val FontMaskFromInt : int -> 'pango_fontmask_t
        val FontMaskGetType : unit -> '_gtype
        val StretchToInt : 'pango_stretch_t -> int
        val StretchFromInt : int -> 'pango_stretch_t
        val StretchGetType : unit -> '_gtype
        val WeightToInt : 'pango_weight_t -> int
        val WeightFromInt : int -> 'pango_weight_t
        val WeightGetType : unit -> '_gtype
        val VariantToInt : 'pango_variant_t -> int
        val VariantFromInt : int -> 'pango_variant_t
        val VariantGetType : unit -> '_gtype
        val StyleToInt : 'pango_style_t -> int
        val StyleFromInt : int -> 'pango_style_t
        val StyleGetType : unit -> '_gtype
        val CoverageLevelToInt : 'pango_coveragelevel_t -> int
        val CoverageLevelFromInt : int -> 'pango_coveragelevel_t
        val CoverageLevelGetType : unit -> '_gtype
        val UnderlineToInt : 'pango_underline_t -> int
        val UnderlineFromInt : int -> 'pango_underline_t
        val UnderlineGetType : unit -> '_gtype
        val AttrTypeToInt : 'pango_attrtype_t -> int
        val AttrTypeFromInt : int -> 'pango_attrtype_t
        val AttrTypeGetType : unit -> '_gtype
        val TabArraynewWithPositions: int * bool * 'pango_tabalign_t * int -> '_object
        val TabArraynew: int * bool -> '_object
        val TabArraygetPositionsInPixels: '_object -> bool
        val TabArraygetTab: '_object * int * 'pango_tabalign_t * int -> 'pango_tabalign_t * int
        val TabArraysetTab: '_object * int * 'pango_tabalign_t * int -> unit
        val TabArrayresize: '_object * int -> unit
        val TabArraygetSize: '_object -> int
        val TabArrayfree: '_object -> unit
        val TabArraycopy: '_object -> '_object
        val TabArraygetType: unit -> '_gtype
        val LayoutItergetBaseline: '_object -> int
        val LayoutItergetLayoutExtents: '_object * '_object * '_object -> unit
        val LayoutItergetLineYrange: '_object * int * int -> int * int
        val LayoutItergetLineExtents: '_object * '_object * '_object -> unit
        val LayoutItergetRunExtents: '_object * '_object * '_object -> unit
        val LayoutItergetClusterExtents: '_object * '_object * '_object -> unit
        val LayoutItergetCharExtents: '_object * '_object -> unit
        val LayoutIternextLine: '_object -> bool
        val LayoutIternextRun: '_object -> bool
        val LayoutIternextCluster: '_object -> bool
        val LayoutIternextChar: '_object -> bool
        val LayoutIteratLastLine: '_object -> bool
        val LayoutItergetIndex: '_object -> int
        val LayoutIterfree: '_object -> unit
        val LayoutItergetType: unit -> '_gtype
        val LanguagefromString: string -> '_object
        val LanguagetoString: '_object -> string
        val Languagematches: '_object * string -> bool
        val GlyphStringnew: unit -> '_object
        val GlyphStringgetLogicalWidths: '_object * string * int * int * int -> int
        val GlyphStringextentsRange: '_object * int * int * '_object * '_object * '_object -> unit
        val GlyphStringextents: '_object * '_object * '_object * '_object -> unit
        val GlyphStringfree: '_object -> unit
        val GlyphStringcopy: '_object -> '_object
        val GlyphStringgetType: unit -> '_gtype
        val GlyphStringsetSize: '_object * int -> unit
        val GlyphStringgetFieldNumGlyphs: '_object -> int
        val GlyphStringsetFieldNumGlyphs: '_object * int -> unit
        val GlyphStringgetFieldLogClusters: '_object -> '_object
        val GlyphStringsetFieldLogClusters: '_object * int -> int
        val GlyphStringgetFieldGlyphs: '_object -> '_object
        val GlyphStringsetFieldGlyphs: '_object * '_object -> unit
        val FontMetricsgetApproximateDigitWidth: '_object -> int
        val FontMetricsgetApproximateCharWidth: '_object -> int
        val FontMetricsgetDescent: '_object -> int
        val FontMetricsgetAscent: '_object -> int
        val FontMetricsunref: '_object -> unit
        val FontMetricsreference: '_object -> '_object
        val FontMetricsgetType: unit -> '_gtype
        val FontDescriptionfromString: string -> '_object
        val FontDescriptionnew: unit -> '_object
        val FontDescriptiontoFilename: '_object -> string
        val FontDescriptiontoString: '_object -> string
        val FontDescriptionbetterMatch: '_object * '_object * '_object -> bool
        val FontDescriptionmergeStatic: '_object * '_object * bool -> unit
        val FontDescriptionmerge: '_object * '_object * bool -> unit
        val FontDescriptionunsetFields: '_object * 'pango_fontmask_t -> unit
        val FontDescriptiongetSetFields: '_object -> 'pango_fontmask_t
        val FontDescriptiongetSize: '_object -> int
        val FontDescriptionsetSize: '_object * int -> unit
        val FontDescriptiongetStretch: '_object -> 'pango_stretch_t
        val FontDescriptionsetStretch: '_object * 'pango_stretch_t -> unit
        val FontDescriptiongetWeight: '_object -> 'pango_weight_t
        val FontDescriptionsetWeight: '_object * 'pango_weight_t -> unit
        val FontDescriptiongetVariant: '_object -> 'pango_variant_t
        val FontDescriptionsetVariant: '_object * 'pango_variant_t -> unit
        val FontDescriptiongetStyle: '_object -> 'pango_style_t
        val FontDescriptionsetStyle: '_object * 'pango_style_t -> unit
        val FontDescriptiongetFamily: '_object -> string
        val FontDescriptionsetFamilyStatic: '_object * string -> unit
        val FontDescriptionsetFamily: '_object * string -> unit
        val FontDescriptionfree: '_object -> unit
        val FontDescriptionequal: '_object * '_object -> bool
        val FontDescriptionhash: '_object -> int
        val FontDescriptioncopyStatic: '_object -> '_object
        val FontDescriptioncopy: '_object -> '_object
        val Colornew: { blue : int, green : int, red : int } -> '_object
        val Colorparse: '_object * string -> bool
        val Colorfree: '_object -> unit
        val Colorcopy: '_object -> '_object
        val ColorgetType: unit -> '_gtype
        val ColorgetFieldRed: '_object -> int
        val ColorsetFieldRed: '_object * int -> unit
        val ColorgetFieldGreen: '_object -> int
        val ColorsetFieldGreen: '_object * int -> unit
        val ColorgetFieldBlue: '_object -> int
        val ColorsetFieldBlue: '_object * int -> unit
        val Attributeequal: '_object * '_object -> bool
        val Attributedestroy: '_object -> unit
        val Attributecopy: '_object -> '_object
        val LayoutLinenew: { is_paragraph_start : int, length : int, resolved_dir : int, runs : '_object list, start_index : int } -> '_object
        val LayoutLinegetPixelExtents: '_object * '_object * '_object -> unit
        val LayoutLinegetExtents: '_object * '_object * '_object -> unit
        val LayoutLineindexToX: '_object * int * bool * int -> int
        val LayoutLinexToIndex: '_object * int * int * int -> bool * int * int
        val LayoutLineunref: '_object -> unit
        val LayoutLinereference: '_object -> unit
        val LayoutLinegetFieldStartIndex: '_object -> int
        val LayoutLinesetFieldStartIndex: '_object * int -> unit
        val LayoutLinegetFieldRuns: '_object -> '_object list
        val LayoutLinesetFieldRuns: '_object * ('_object list) -> unit
        val LayoutLinegetFieldResolvedDir: '_object -> int
        val LayoutLinesetFieldResolvedDir: '_object * int -> unit
        val LayoutLinegetFieldLength: '_object -> int
        val LayoutLinesetFieldLength: '_object * int -> unit
        val LayoutLinegetFieldIsParagraphStart: '_object -> int
        val LayoutLinesetFieldIsParagraphStart: '_object * int -> unit
        val Rectanglenew: { height : int, width : int, x : int, y : int } -> '_object
        val RectanglegetFieldY: '_object -> int
        val RectanglesetFieldY: '_object * int -> unit
        val RectanglegetFieldX: '_object -> int
        val RectanglesetFieldX: '_object * int -> unit
        val RectanglegetFieldWidth: '_object -> int
        val RectanglesetFieldWidth: '_object * int -> unit
        val RectanglegetFieldHeight: '_object -> int
        val RectanglesetFieldHeight: '_object * int -> unit
        val Layoutnew: '_object -> '_object
        val LayoutgetIter: '_object -> '_object
        val LayoutgetLines: '_object -> '_object list
        val LayoutgetLine: '_object * int -> '_object
        val LayoutgetLineCount: '_object -> int
        val LayoutgetPixelSize: '_object * int * int -> int * int
        val LayoutgetSize: '_object * int * int -> int * int
        val LayoutgetPixelExtents: '_object * '_object * '_object -> unit
        val LayoutgetExtents: '_object * '_object * '_object -> unit
        val LayoutxyToIndex: '_object * int * int * int * int -> bool * int * int
        val LayoutmoveCursorVisually: '_object * bool * int * int * int * int * int -> int * int
        val LayoutgetCursorPos: '_object * int * '_object * '_object -> unit
        val LayoutindexToPos: '_object * int * '_object -> unit
        val LayoutcontextChanged: '_object -> unit
        val LayoutgetSingleParagraphMode: '_object -> bool
        val LayoutsetSingleParagraphMode: '_object * bool -> unit
        val LayoutgetTabs: '_object -> '_object
        val LayoutsetTabs: '_object * '_object -> unit
        val LayoutgetAlignment: '_object -> 'pango_alignment_t
        val LayoutsetAlignment: '_object * 'pango_alignment_t -> unit
        val LayoutgetAutoDir: '_object -> bool
        val LayoutsetAutoDir: '_object * bool -> unit
        val LayoutgetJustify: '_object -> bool
        val LayoutsetJustify: '_object * bool -> unit
        val LayoutgetSpacing: '_object -> int
        val LayoutsetSpacing: '_object * int -> unit
        val LayoutgetIndent: '_object -> int
        val LayoutsetIndent: '_object * int -> unit
        val LayoutgetWrap: '_object -> 'pango_wrapmode_t
        val LayoutsetWrap: '_object * 'pango_wrapmode_t -> unit
        val LayoutgetWidth: '_object -> int
        val LayoutsetWidth: '_object * int -> unit
        val LayoutsetFontDescription: '_object * '_object -> unit
        val LayoutsetMarkup: '_object * string * int -> unit
        val LayoutgetText: '_object -> string
        val LayoutsetText: '_object * string * int -> unit
        val LayoutgetContext: '_object -> '_object
        val Layoutcopy: '_object -> '_object
        val LayoutgetType: unit -> '_gtype
        val FontsetgetMetrics: '_object -> '_object
        val FontsetgetFont: '_object * int -> '_object
        val FontMaploadFontset: '_object * '_object * '_object * '_object -> '_object
        val FontMaploadFont: '_object * '_object * '_object -> '_object
        val FontFamilyisMonospace: '_object -> bool
        val FontFamilygetName: '_object -> string
        val FontFamilygetType: unit -> '_gtype
        val FontFacegetFaceName: '_object -> string
        val FontFacedescribe: '_object -> '_object
        val FontFacegetType: unit -> '_gtype
        val FontgetMetrics: '_object * '_object -> '_object
        val Fontdescribe: '_object -> '_object
        val FontgetType: unit -> '_gtype
        val FontdescriptionsFree: ('_object vector) -> unit
        val ContextgetBaseDir: '_object -> 'pango_direction_t
        val ContextsetBaseDir: '_object * 'pango_direction_t -> unit
        val ContextsetLanguage: '_object * '_object -> unit
        val ContextgetLanguage: '_object -> '_object
        val ContextgetFontDescription: '_object -> '_object
        val ContextsetFontDescription: '_object * '_object -> unit
        val ContextgetMetrics: '_object * '_object * '_object -> '_object
        val ContextloadFontset: '_object * '_object * '_object -> '_object
        val ContextloadFont: '_object * '_object -> '_object
        val Parsemarkup: string * int * int * '_object * (string vector) * '_object -> bool
        val AttrlistGetType: unit -> '_gtype
        val AttrfallbackNew: bool -> '_object
        val AttrscaleNew: real -> '_object
        val AttrshapeNew: '_object * '_object -> '_object
        val AttrriseNew: int -> '_object
        val AttrstrikethroughNew: bool -> '_object
        val AttrunderlineNew: 'pango_underline_t -> '_object
        val AttrfontDescNew: '_object -> '_object
        val AttrstretchNew: 'pango_stretch_t -> '_object
        val AttrvariantNew: 'pango_variant_t -> '_object
        val AttrweightNew: 'pango_weight_t -> '_object
        val AttrstyleNew: 'pango_style_t -> '_object
        val AttrsizeNew: int -> '_object
        val AttrbackgroundNew: int * int * int -> '_object
        val AttrforegroundNew: int * int * int -> '_object
        val AttrfamilyNew: string -> '_object
        val AttrlanguageNew: '_object -> '_object
        val FindparagraphBoundary: string * int * int * int -> int * int
        val Reorderitems: ('_object list) -> '_object list
        end
        structure NativeAtk :
        sig
        val CoordTypeToInt : 'atk_coordtype_t -> int
        val CoordTypeFromInt : int -> 'atk_coordtype_t
        val CoordTypeGetType : unit -> '_gtype
        val KeyEventTypeToInt : 'atk_keyeventtype_t -> int
        val KeyEventTypeFromInt : int -> 'atk_keyeventtype_t
        val KeyEventTypeGetType : unit -> '_gtype
        val TextBoundaryToInt : 'atk_textboundary_t -> int
        val TextBoundaryFromInt : int -> 'atk_textboundary_t
        val TextBoundaryGetType : unit -> '_gtype
        val TextAttributeToInt : 'atk_textattribute_t -> int
        val TextAttributeFromInt : int -> 'atk_textattribute_t
        val TextAttributeGetType : unit -> '_gtype
        val StateTypeToInt : 'atk_statetype_t -> int
        val StateTypeFromInt : int -> 'atk_statetype_t
        val StateTypeGetType : unit -> '_gtype
        val RelationTypeToInt : 'atk_relationtype_t -> int
        val RelationTypeFromInt : int -> 'atk_relationtype_t
        val RelationTypeGetType : unit -> '_gtype
        val LayerToInt : 'atk_layer_t -> int
        val LayerFromInt : int -> 'atk_layer_t
        val LayerGetType : unit -> '_gtype
        val RoleToInt : 'atk_role_t -> int
        val RoleFromInt : int -> 'atk_role_t
        val RoleGetType : unit -> '_gtype
        val UtilgetType: unit -> '_gtype
        val StateSetxorSets: '_object * '_object -> '_object
        val StateSetorSets: '_object * '_object -> '_object
        val StateSetandSets: '_object * '_object -> '_object
        val StateSetremoveState: '_object * 'atk_statetype_t -> bool
        val StateSetcontainsStates: '_object * ('atk_statetype_t vector) -> bool
        val StateSetcontainsState: '_object * 'atk_statetype_t -> bool
        val StateSetclearStates: '_object -> unit
        val StateSetaddStates: '_object * ('atk_statetype_t vector) -> unit
        val StateSetaddState: '_object * 'atk_statetype_t -> bool
        val StateSetisEmpty: '_object -> bool
        val StateSetgetType: unit -> '_gtype
        val RelationSetnew: unit -> '_object
        val RelationSetgetRelationByType: '_object * 'atk_relationtype_t -> '_object
        val RelationSetgetRelation: '_object * int -> '_object
        val RelationSetgetNRelations: '_object -> int
        val RelationSetadd: '_object * '_object -> unit
        val RelationSetremove: '_object * '_object -> unit
        val RelationSetcontains: '_object * 'atk_relationtype_t -> bool
        val RelationSetgetType: unit -> '_gtype
        val RelationgetTarget: '_object -> '_object
        val RelationgetRelationType: '_object -> 'atk_relationtype_t
        val RelationgetType: unit -> '_gtype
        val RegistrygetFactory: '_object * '_gtype -> '_object
        val RegistrygetFactoryType: '_object * '_gtype -> '_gtype
        val RegistrysetFactoryType: '_object * '_gtype * '_gtype -> unit
        val RegistrygetType: unit -> '_gtype
        val NoOpObjectFactorynew: unit -> '_object
        val NoOpObjectFactorygetType: unit -> '_gtype
        val ObjectFactoryinvalidate: '_object -> unit
        val ObjectFactorycreateAccessible: '_object * '_object -> '_object
        val ObjectFactorygetType: unit -> '_gtype
        val NoOpObjectnew: '_object -> '_object
        val NoOpObjectgetType: unit -> '_gtype
        val ObjectremovePropertyChangeHandler: '_object * int -> unit
        val ObjectsetRole: '_object * 'atk_role_t -> unit
        val ObjectsetParent: '_object * '_object -> unit
        val ObjectsetDescription: '_object * string -> unit
        val ObjectsetName: '_object * string -> unit
        val ObjectgetIndexInParent: '_object -> int
        val ObjectrefStateSet: '_object -> '_object
        val ObjectgetMdiZorder: '_object -> int
        val ObjectgetLayer: '_object -> 'atk_layer_t
        val ObjectgetRole: '_object -> 'atk_role_t
        val ObjectrefRelationSet: '_object -> '_object
        val ObjectrefAccessibleChild: '_object * int -> '_object
        val ObjectgetNAccessibleChildren: '_object -> int
        val ObjectgetParent: '_object -> '_object
        val ObjectgetDescription: '_object -> string
        val ObjectgetName: '_object -> string
        val ObjectgetType: unit -> '_gtype
        val HyperlinkgetNAnchors: '_object -> int
        val HyperlinkisValid: '_object -> bool
        val HyperlinkgetStartIndex: '_object -> int
        val HyperlinkgetEndIndex: '_object -> int
        val HyperlinkgetObject: '_object * int -> '_object
        val HyperlinkgetUri: '_object * int -> string
        val HyperlinkgetType: unit -> '_gtype
        val ImplementorgetType: unit -> '_gtype
        val TextgetType: unit -> '_gtype
        val StreamablecontentGetType: unit -> '_gtype
        val ImagegetType: unit -> '_gtype
        val FocustrackerNotify: '_object -> unit
        val FocustrackerInit: '_object -> unit
        val AddkeyEventListener: 'core_object * '_object -> int
        val AddglobalEventListener: '_object * string -> int
        val AddfocusTracker: '_object -> int
        val HypertextgetType: unit -> '_gtype
        val EditabletextGetType: unit -> '_gtype
        val DocumentgetType: unit -> '_gtype
        val TablegetType: unit -> '_gtype
        val RemovekeyEventListener: int -> unit
        val RemoveglobalEventListener: int -> unit
        val RemovefocusTracker: int -> unit
        val GettoolkitVersion: unit -> string
        val GettoolkitName: unit -> string
        val Getroot: unit -> '_object
        val GetdefaultRegistry: unit -> '_object
        val SelectiongetType: unit -> '_gtype
        val ComponentgetType: unit -> '_gtype
        val ActiongetType: unit -> '_gtype
        end
        structure NativeGdk :
        sig
        val InterpTypeToInt : 'gdk_interptype_t -> int
        val InterpTypeFromInt : int -> 'gdk_interptype_t
        val InterpTypeGetType : unit -> '_gtype
        val PixbufErrorToInt : 'gdk_pixbuferror_t -> int
        val PixbufErrorFromInt : int -> 'gdk_pixbuferror_t
        val PixbufErrorGetType : unit -> '_gtype
        val ColorspaceToInt : 'gdk_colorspace_t -> int
        val ColorspaceFromInt : int -> 'gdk_colorspace_t
        val ColorspaceGetType : unit -> '_gtype
        val PixbufAlphaModeToInt : 'gdk_pixbufalphamode_t -> int
        val PixbufAlphaModeFromInt : int -> 'gdk_pixbufalphamode_t
        val PixbufAlphaModeGetType : unit -> '_gtype
        val WindowEdgeToInt : 'gdk_windowedge_t -> int
        val WindowEdgeFromInt : int -> 'gdk_windowedge_t
        val WindowEdgeGetType : unit -> '_gtype
        val GravityToInt : 'gdk_gravity_t -> int
        val GravityFromInt : int -> 'gdk_gravity_t
        val GravityGetType : unit -> '_gtype
        val WMFunctionToInt : 'gdk_wmfunction_t -> int
        val WMFunctionFromInt : int -> 'gdk_wmfunction_t
        val WMFunctionGetType : unit -> '_gtype
        val WMDecorationToInt : 'gdk_wmdecoration_t -> int
        val WMDecorationFromInt : int -> 'gdk_wmdecoration_t
        val WMDecorationGetType : unit -> '_gtype
        val WindowTypeHintToInt : 'gdk_windowtypehint_t -> int
        val WindowTypeHintFromInt : int -> 'gdk_windowtypehint_t
        val WindowTypeHintGetType : unit -> '_gtype
        val WindowHintsToInt : 'gdk_windowhints_t -> int
        val WindowHintsFromInt : int -> 'gdk_windowhints_t
        val WindowHintsGetType : unit -> '_gtype
        val WindowAttributesTypeToInt : 'gdk_windowattributestype_t -> int
        val WindowAttributesTypeFromInt : int -> 'gdk_windowattributestype_t
        val WindowAttributesTypeGetType : unit -> '_gtype
        val WindowTypeToInt : 'gdk_windowtype_t -> int
        val WindowTypeFromInt : int -> 'gdk_windowtype_t
        val WindowTypeGetType : unit -> '_gtype
        val WindowClassToInt : 'gdk_windowclass_t -> int
        val WindowClassFromInt : int -> 'gdk_windowclass_t
        val WindowClassGetType : unit -> '_gtype
        val VisualTypeToInt : 'gdk_visualtype_t -> int
        val VisualTypeFromInt : int -> 'gdk_visualtype_t
        val VisualTypeGetType : unit -> '_gtype
        val GrabStatusToInt : 'gdk_grabstatus_t -> int
        val GrabStatusFromInt : int -> 'gdk_grabstatus_t
        val GrabStatusGetType : unit -> '_gtype
        val StatusToInt : 'gdk_status_t -> int
        val StatusFromInt : int -> 'gdk_status_t
        val StatusGetType : unit -> '_gtype
        val InputConditionToInt : 'gdk_inputcondition_t -> int
        val InputConditionFromInt : int -> 'gdk_inputcondition_t
        val InputConditionGetType : unit -> '_gtype
        val ModifierTypeToInt : 'gdk_modifiertype_t -> int
        val ModifierTypeFromInt : int -> 'gdk_modifiertype_t
        val ModifierTypeGetType : unit -> '_gtype
        val ByteOrderToInt : 'gdk_byteorder_t -> int
        val ByteOrderFromInt : int -> 'gdk_byteorder_t
        val ByteOrderGetType : unit -> '_gtype
        val RgbDitherToInt : 'gdk_rgbdither_t -> int
        val RgbDitherFromInt : int -> 'gdk_rgbdither_t
        val RgbDitherGetType : unit -> '_gtype
        val OverlapTypeToInt : 'gdk_overlaptype_t -> int
        val OverlapTypeFromInt : int -> 'gdk_overlaptype_t
        val OverlapTypeGetType : unit -> '_gtype
        val FillRuleToInt : 'gdk_fillrule_t -> int
        val FillRuleFromInt : int -> 'gdk_fillrule_t
        val FillRuleGetType : unit -> '_gtype
        val PropModeToInt : 'gdk_propmode_t -> int
        val PropModeFromInt : int -> 'gdk_propmode_t
        val PropModeGetType : unit -> '_gtype
        val AxisUseToInt : 'gdk_axisuse_t -> int
        val AxisUseFromInt : int -> 'gdk_axisuse_t
        val AxisUseGetType : unit -> '_gtype
        val InputModeToInt : 'gdk_inputmode_t -> int
        val InputModeFromInt : int -> 'gdk_inputmode_t
        val InputModeGetType : unit -> '_gtype
        val InputSourceToInt : 'gdk_inputsource_t -> int
        val InputSourceFromInt : int -> 'gdk_inputsource_t
        val InputSourceGetType : unit -> '_gtype
        val ExtensionModeToInt : 'gdk_extensionmode_t -> int
        val ExtensionModeFromInt : int -> 'gdk_extensionmode_t
        val ExtensionModeGetType : unit -> '_gtype
        val ImageTypeToInt : 'gdk_imagetype_t -> int
        val ImageTypeFromInt : int -> 'gdk_imagetype_t
        val ImageTypeGetType : unit -> '_gtype
        val GCValuesMaskToInt : 'gdk_gcvaluesmask_t -> int
        val GCValuesMaskFromInt : int -> 'gdk_gcvaluesmask_t
        val GCValuesMaskGetType : unit -> '_gtype
        val SubwindowModeToInt : 'gdk_subwindowmode_t -> int
        val SubwindowModeFromInt : int -> 'gdk_subwindowmode_t
        val SubwindowModeGetType : unit -> '_gtype
        val LineStyleToInt : 'gdk_linestyle_t -> int
        val LineStyleFromInt : int -> 'gdk_linestyle_t
        val LineStyleGetType : unit -> '_gtype
        val JoinStyleToInt : 'gdk_joinstyle_t -> int
        val JoinStyleFromInt : int -> 'gdk_joinstyle_t
        val JoinStyleGetType : unit -> '_gtype
        val FunctionToInt : 'gdk_function_t -> int
        val FunctionFromInt : int -> 'gdk_function_t
        val FunctionGetType : unit -> '_gtype
        val FillToInt : 'gdk_fill_t -> int
        val FillFromInt : int -> 'gdk_fill_t
        val FillGetType : unit -> '_gtype
        val CapStyleToInt : 'gdk_capstyle_t -> int
        val CapStyleFromInt : int -> 'gdk_capstyle_t
        val CapStyleGetType : unit -> '_gtype
        val FontTypeToInt : 'gdk_fonttype_t -> int
        val FontTypeFromInt : int -> 'gdk_fonttype_t
        val FontTypeGetType : unit -> '_gtype
        val SettingActionToInt : 'gdk_settingaction_t -> int
        val SettingActionFromInt : int -> 'gdk_settingaction_t
        val SettingActionGetType : unit -> '_gtype
        val WindowStateToInt : 'gdk_windowstate_t -> int
        val WindowStateFromInt : int -> 'gdk_windowstate_t
        val WindowStateGetType : unit -> '_gtype
        val PropertyStateToInt : 'gdk_propertystate_t -> int
        val PropertyStateFromInt : int -> 'gdk_propertystate_t
        val PropertyStateGetType : unit -> '_gtype
        val CrossingModeToInt : 'gdk_crossingmode_t -> int
        val CrossingModeFromInt : int -> 'gdk_crossingmode_t
        val CrossingModeGetType : unit -> '_gtype
        val NotifyTypeToInt : 'gdk_notifytype_t -> int
        val NotifyTypeFromInt : int -> 'gdk_notifytype_t
        val NotifyTypeGetType : unit -> '_gtype
        val ScrollDirectionToInt : 'gdk_scrolldirection_t -> int
        val ScrollDirectionFromInt : int -> 'gdk_scrolldirection_t
        val ScrollDirectionGetType : unit -> '_gtype
        val VisibilityStateToInt : 'gdk_visibilitystate_t -> int
        val VisibilityStateFromInt : int -> 'gdk_visibilitystate_t
        val VisibilityStateGetType : unit -> '_gtype
        val EventMaskToInt : 'gdk_eventmask_t -> int
        val EventMaskFromInt : int -> 'gdk_eventmask_t
        val EventMaskGetType : unit -> '_gtype
        val EventTypeToInt : 'gdk_eventtype_t -> int
        val EventTypeFromInt : int -> 'gdk_eventtype_t
        val EventTypeGetType : unit -> '_gtype
        val FilterReturnToInt : 'gdk_filterreturn_t -> int
        val FilterReturnFromInt : int -> 'gdk_filterreturn_t
        val FilterReturnGetType : unit -> '_gtype
        val DragProtocolToInt : 'gdk_dragprotocol_t -> int
        val DragProtocolFromInt : int -> 'gdk_dragprotocol_t
        val DragProtocolGetType : unit -> '_gtype
        val DragActionToInt : 'gdk_dragaction_t -> int
        val DragActionFromInt : int -> 'gdk_dragaction_t
        val DragActionGetType : unit -> '_gtype
        val CursorTypeToInt : 'gdk_cursortype_t -> int
        val CursorTypeFromInt : int -> 'gdk_cursortype_t
        val CursorTypeGetType : unit -> '_gtype
        val Rectanglenew: { height : int, width : int, x : int, y : int } -> '_object
        val Rectangleunion: '_object * '_object * '_object -> unit
        val Rectangleintersect: '_object * '_object * '_object -> bool
        val RectanglegetFieldY: '_object -> int
        val RectanglesetFieldY: '_object * int -> unit
        val RectanglegetFieldX: '_object -> int
        val RectanglesetFieldX: '_object * int -> unit
        val RectanglegetFieldWidth: '_object -> int
        val RectanglesetFieldWidth: '_object * int -> unit
        val RectanglegetFieldHeight: '_object -> int
        val RectanglesetFieldHeight: '_object * int -> unit
        val CursornewFromPixbuf: '_object * '_object * int * int -> '_object
        val CursornewFromPixmap: '_object * '_object * '_object * '_object * int * int -> '_object
        val CursornewForDisplay: '_object * 'gdk_cursortype_t -> '_object
        val Cursornew: 'gdk_cursortype_t -> '_object
        val CursorgetDisplay: '_object -> '_object
        val CursorgetFieldType: '_object -> 'gdk_cursortype_t
        val CursorsetFieldType: '_object * 'gdk_cursortype_t -> unit
        val Colornew: { blue : int, green : int, red : int } -> '_object
        val Colorparse: string * '_object -> int
        val ColorgetFieldRed: '_object -> int
        val ColorsetFieldRed: '_object * int -> unit
        val ColorgetFieldGreen: '_object -> int
        val ColorsetFieldGreen: '_object * int -> unit
        val ColorgetFieldBlue: '_object -> int
        val ColorsetFieldBlue: '_object * int -> unit
        val Fontload: string -> '_object
        val FontstringExtents: '_object * string * int * int * int * int * int -> int * int * int * int * int
        val Fontextents: '_object * string * int * int * int * int * int * int -> int * int * int * int * int
        val FontcharHeight: '_object * char -> int
        val Fontheight: '_object * string * int -> int
        val FontstringHeight: '_object * string -> int
        val FontcharMeasure: '_object * char -> int
        val Fontmeasure: '_object * string * int -> int
        val FontstringMeasure: '_object * string -> int
        val FontcharWidth: '_object * char -> int
        val Fontwidth: '_object * string * int -> int
        val FontstringWidth: '_object * string -> int
        val FontfromDescription: '_object -> '_object
        val FontfromDescriptionForDisplay: '_object * '_object -> '_object
        val FontloadForDisplay: '_object * string -> '_object
        val Fontid: '_object -> int
        val FontgetFieldType: '_object -> 'gdk_fonttype_t
        val FontsetFieldType: '_object * 'gdk_fonttype_t -> unit
        val FontgetFieldDescent: '_object -> int
        val FontsetFieldDescent: '_object * int -> unit
        val FontgetFieldAscent: '_object -> int
        val FontsetFieldAscent: '_object * int -> unit
        val Eventnew: 'gdk_eventtype_t -> '_object
        val EventgetScreen: '_object -> '_object
        val EventsetScreen: '_object * '_object -> unit
        val EventgetAxis: '_object * 'gdk_axisuse_t * real -> bool * real
        val EventgetRootCoords: '_object * real * real -> bool * real * real
        val EventgetCoords: '_object * real * real -> bool * real * real
        val EventgetState: '_object * 'gdk_modifiertype_t -> bool * 'gdk_modifiertype_t
        val EventgetTime: '_object -> int
        val Eventfree: '_object -> unit
        val Eventcopy: '_object -> '_object
        val Eventput: '_object -> unit
        val EventgetGraphicsExpose: '_object -> '_object
        val Eventpeek: unit -> '_object
        val Eventget: unit -> '_object
        val EventgetType: unit -> '_gtype
        val PixbufFormatisWritable: '_object -> bool
        val PixbufFormatgetExtensions: '_object -> '_object
        val PixbufFormatgetMimeTypes: '_object -> '_object
        val PixbufFormatgetDescription: '_object -> string
        val PixbufFormatgetName: '_object -> string
        val BitmapcreateFromData: '_object * string * int * int -> '_object
        val VisualgetBestWithBoth: int * 'gdk_visualtype_t -> '_object
        val VisualgetScreen: '_object -> '_object
        val VisualgetBestWithType: 'gdk_visualtype_t -> '_object
        val VisualgetBestWithDepth: int -> '_object
        val VisualgetBest: unit -> '_object
        val VisualgetSystem: unit -> '_object
        val VisualgetBestType: unit -> 'gdk_visualtype_t
        val VisualgetBestDepth: unit -> int
        val VisualgetFieldType: '_object -> 'gdk_visualtype_t
        val VisualsetFieldType: '_object * 'gdk_visualtype_t -> unit
        val VisualgetFieldRedShift: '_object -> int
        val VisualsetFieldRedShift: '_object * int -> unit
        val VisualgetFieldRedPrec: '_object -> int
        val VisualsetFieldRedPrec: '_object * int -> unit
        val VisualgetFieldRedMask: '_object -> int
        val VisualsetFieldRedMask: '_object * int -> unit
        val VisualgetFieldGreenShift: '_object -> int
        val VisualsetFieldGreenShift: '_object * int -> unit
        val VisualgetFieldGreenPrec: '_object -> int
        val VisualsetFieldGreenPrec: '_object * int -> unit
        val VisualgetFieldGreenMask: '_object -> int
        val VisualsetFieldGreenMask: '_object * int -> unit
        val VisualgetFieldDepth: '_object -> int
        val VisualsetFieldDepth: '_object * int -> unit
        val VisualgetFieldColormapSize: '_object -> int
        val VisualsetFieldColormapSize: '_object * int -> unit
        val VisualgetFieldByteOrder: '_object -> 'gdk_byteorder_t
        val VisualsetFieldByteOrder: '_object * 'gdk_byteorder_t -> unit
        val VisualgetFieldBlueShift: '_object -> int
        val VisualsetFieldBlueShift: '_object * int -> unit
        val VisualgetFieldBluePrec: '_object -> int
        val VisualsetFieldBluePrec: '_object * int -> unit
        val VisualgetFieldBlueMask: '_object -> int
        val VisualsetFieldBlueMask: '_object * int -> unit
        val VisualgetFieldBitsPerRgb: '_object -> int
        val VisualsetFieldBitsPerRgb: '_object * int -> unit
        val ScreenalternativeDialogButtonOrder: '_object -> bool
        val ScreengetSetting: '_object * string -> bool * '_gvalue
        val ScreengetDefault: unit -> '_object
        val ScreenbroadcastClientMessage: '_object * '_object -> unit
        val ScreengetMonitorAtWindow: '_object * '_object -> int
        val ScreengetMonitorAtPoint: '_object * int * int -> int
        val ScreengetMonitorGeometry: '_object * int * '_object -> unit
        val ScreengetNMonitors: '_object -> int
        val ScreenmakeDisplayName: '_object -> string
        val ScreengetToplevelWindows: '_object -> '_object list
        val ScreenlistVisuals: '_object -> '_object list
        val ScreengetHeightMm: '_object -> int
        val ScreengetWidthMm: '_object -> int
        val ScreengetHeight: '_object -> int
        val ScreengetWidth: '_object -> int
        val ScreengetNumber: '_object -> int
        val ScreengetDisplay: '_object -> '_object
        val ScreengetRootWindow: '_object -> '_object
        val ScreengetRgbVisual: '_object -> '_object
        val ScreengetRgbColormap: '_object -> '_object
        val ScreengetSystemVisual: '_object -> '_object
        val ScreengetSystemColormap: '_object -> '_object
        val ScreensetDefaultColormap: '_object * '_object -> unit
        val ScreengetDefaultColormap: '_object -> '_object
        val ScreengetType: unit -> '_gtype
        val ScreenheightMm: unit -> int
        val ScreenwidthMm: unit -> int
        val Screenheight: unit -> int
        val Screenwidth: unit -> int
        val PixbufLoadernewWithType: string -> '_object
        val PixbufLoadergetFormat: '_object -> '_object
        val PixbufLoadersetSize: '_object * int * int -> unit
        val PixbufLoaderclose: '_object -> bool
        val PixbufLoadergetAnimation: '_object -> '_object
        val PixbufLoadergetPixbuf: '_object -> '_object
        val PixbufLoaderwrite: '_object * string * int -> bool
        val PixbufLoadernewWithMimeType: string -> '_object
        val PixbufLoadernew: unit -> '_object
        val PixbufLoadergetType: unit -> '_gtype
        val PixbufAnimationIteradvance: '_object * '_object -> bool
        val PixbufAnimationIteronCurrentlyLoadingFrame: '_object -> bool
        val PixbufAnimationItergetPixbuf: '_object -> '_object
        val PixbufAnimationItergetDelayTime: '_object -> int
        val PixbufAnimationItergetType: unit -> '_gtype
        val PixbufAnimationnewFromFile: string -> '_object
        val PixbufAnimationgetIter: '_object * '_object -> '_object
        val PixbufAnimationgetStaticImage: '_object -> '_object
        val PixbufAnimationisStaticImage: '_object -> bool
        val PixbufAnimationgetHeight: '_object -> int
        val PixbufAnimationgetWidth: '_object -> int
        val PixbufAnimationgetType: unit -> '_gtype
        val Pixbufnew: 'gdk_colorspace_t * bool * int * int * int -> '_object
        val PixbufgetFileInfo: string * int * int -> '_object * int * int
        val PixbufgetFormats: unit -> '_object list
        val PixbufgetOption: '_object * string -> string
        val PixbufcompositeColorSimple: '_object * int * int * 'gdk_interptype_t * int * int * int * int -> '_object
        val PixbufscaleSimple: '_object * int * int * 'gdk_interptype_t -> '_object
        val PixbufcompositeColor: '_object * '_object * int * int * int * int * real * real * real * real * 'gdk_interptype_t * int * int * int * int * int * int -> unit
        val Pixbufcomposite: '_object * '_object * int * int * int * int * real * real * real * real * 'gdk_interptype_t * int -> unit
        val Pixbufscale: '_object * '_object * int * int * int * int * real * real * real * real * 'gdk_interptype_t -> unit
        val PixbufsaturateAndPixelate: '_object * '_object * real * bool -> unit
        val PixbufcopyArea: '_object * int * int * int * int * '_object * int * int -> unit
        val PixbufaddAlpha: '_object * bool * char * char * char -> '_object
        val Pixbufsavev: '_object * string * string * (string vector) * (string vector) -> bool
        val Pixbufsave: '_object * string * string -> bool
        val Pixbuffill: '_object * int -> unit
        val Pixbufsubpixbuf: '_object * int * int * int * int -> '_object
        val PixbufnewFromInline: int * string * bool -> '_object
        val PixbufnewFromXpmData: (string vector) -> '_object
        val PixbufnewFromData: string * 'gdk_colorspace_t * bool * int * int * int * int * '_object * '_object -> '_object
        val PixbufnewFromFileAtSize: string * int * int -> '_object
        val PixbufnewFromFile: string -> '_object
        val Pixbufcopy: '_object -> '_object
        val PixbufgetRowstride: '_object -> int
        val PixbufgetHeight: '_object -> int
        val PixbufgetWidth: '_object -> int
        val PixbufgetPixels: '_object -> string
        val PixbufgetBitsPerSample: '_object -> int
        val PixbufgetHasAlpha: '_object -> bool
        val PixbufgetNChannels: '_object -> int
        val PixbufgetColorspace: '_object -> 'gdk_colorspace_t
        val PixbufgetFromImage: '_object * '_object * '_object * int * int * int * int * int * int -> '_object
        val PixbufgetFromDrawable: '_object * '_object * '_object * int * int * int * int * int * int -> '_object
        val PixbufrenderPixmapAndMask: '_object * int -> '_object * '_object
        val PixbufrenderToDrawableAlpha: '_object * '_object * int * int * int * int * int * int * 'gdk_pixbufalphamode_t * int * 'gdk_rgbdither_t * int * int -> unit
        val PixbufrenderToDrawable: '_object * '_object * '_object * int * int * int * int * int * int * 'gdk_rgbdither_t * int * int -> unit
        val KeymapgetDirection: '_object -> 'pango_direction_t
        val KeymaptranslateKeyboardState: '_object * int * 'gdk_modifiertype_t * int * int * int * int * 'gdk_modifiertype_t -> bool * int * int * int * 'gdk_modifiertype_t
        val KeymapgetForDisplay: '_object -> '_object
        val KeymapgetDefault: unit -> '_object
        val KeymapgetType: unit -> '_gtype
        val Imagenew: 'gdk_imagetype_t * '_object * int * int -> '_object
        val ImagegetColormap: '_object -> '_object
        val ImagesetColormap: '_object * '_object -> unit
        val ImagegetPixel: '_object * int * int -> int
        val ImageputPixel: '_object * int * int * int -> unit
        val ImagegetType: unit -> '_gtype
        val GCnew: '_object -> '_object
        val GCsetRgbBgColor: '_object * '_object -> unit
        val GCsetRgbFgColor: '_object * '_object -> unit
        val GCgetColormap: '_object -> '_object
        val GCsetColormap: '_object * '_object -> unit
        val GCcopy: '_object * '_object -> unit
        val GCoffset: '_object * int * int -> unit
        val GCsetLineAttributes: '_object * int * 'gdk_linestyle_t * 'gdk_capstyle_t * 'gdk_joinstyle_t -> unit
        val GCsetExposures: '_object * bool -> unit
        val GCsetSubwindow: '_object * 'gdk_subwindowmode_t -> unit
        val GCsetClipRegion: '_object * '_object -> unit
        val GCsetClipRectangle: '_object * '_object -> unit
        val GCsetClipMask: '_object * '_object -> unit
        val GCsetClipOrigin: '_object * int * int -> unit
        val GCsetTsOrigin: '_object * int * int -> unit
        val GCsetStipple: '_object * '_object -> unit
        val GCsetTile: '_object * '_object -> unit
        val GCsetFill: '_object * 'gdk_fill_t -> unit
        val GCsetFont: '_object * '_object -> unit
        val GCsetBackground: '_object * '_object -> unit
        val GCsetForeground: '_object * '_object -> unit
        val GCgetType: unit -> '_gtype
        val Pixmapnew: '_object * int * int * int -> '_object
        val PixmapcolormapCreateFromXpmD: '_object * '_object * '_object * (string vector) -> '_object * '_object
        val PixmapcreateFromXpmD: '_object * '_object * (string vector) -> '_object * '_object
        val PixmapcolormapCreateFromXpm: '_object * '_object * '_object * string -> '_object * '_object
        val PixmapcreateFromXpm: '_object * '_object * string -> '_object * '_object
        val PixmapcreateFromData: '_object * string * int * int * int * '_object * '_object -> '_object
        val PixmapgetType: unit -> '_gtype
        val WindowconfigureFinished: '_object -> unit
        val WindowenableSynchronizedConfigure: '_object -> unit
        val WindowsetFocusOnMap: '_object * bool -> unit
        val WindowsetAcceptFocus: '_object * bool -> unit
        val WindowgetInternalPaintInfo: '_object * int * int -> '_object * int * int
        val WindowsetDebugUpdates: bool -> unit
        val WindowprocessUpdates: '_object * bool -> unit
        val WindowprocessAllUpdates: unit -> unit
        val WindowthawUpdates: '_object -> unit
        val WindowfreezeUpdates: '_object -> unit
        val WindowgetUpdateArea: '_object -> '_object
        val WindowinvalidateRegion: '_object * '_object * bool -> unit
        val WindowinvalidateRect: '_object * '_object * bool -> unit
        val WindowbeginMoveDrag: '_object * int * int * int * int -> unit
        val WindowbeginResizeDrag: '_object * 'gdk_windowedge_t * int * int * int * int -> unit
        val WindowregisterDnd: '_object -> unit
        val Windowunfullscreen: '_object -> unit
        val Windowfullscreen: '_object -> unit
        val Windowunmaximize: '_object -> unit
        val Windowmaximize: '_object -> unit
        val Windowunstick: '_object -> unit
        val Windowstick: '_object -> unit
        val Windowdeiconify: '_object -> unit
        val Windowiconify: '_object -> unit
        val WindowgetToplevels: unit -> '_object list
        val WindowgetDecorations: '_object * 'gdk_wmdecoration_t -> bool * 'gdk_wmdecoration_t
        val WindowsetDecorations: '_object * 'gdk_wmdecoration_t -> unit
        val WindowgetGroup: '_object -> '_object
        val WindowsetGroup: '_object * '_object -> unit
        val WindowsetIconName: '_object * string -> unit
        val WindowsetIcon: '_object * '_object * '_object * '_object -> unit
        val WindowsetIconList: '_object * ('_object list) -> unit
        val WindowsetEvents: '_object * 'gdk_eventmask_t -> unit
        val WindowgetEvents: '_object -> 'gdk_eventmask_t
        val WindowpeekChildren: '_object -> '_object list
        val WindowgetChildren: '_object -> '_object list
        val WindowgetToplevel: '_object -> '_object
        val WindowgetParent: '_object -> '_object
        val WindowgetPointer: '_object * int * int * 'gdk_modifiertype_t -> '_object * int * int * 'gdk_modifiertype_t
        val WindowgetFrameExtents: '_object * '_object -> unit
        val WindowgetRootOrigin: '_object * int * int -> int * int
        val WindowgetDeskrelativeOrigin: '_object * int * int -> bool * int * int
        val WindowgetOrigin: '_object * int * int -> int * int * int
        val WindowgetPosition: '_object * int * int -> int * int
        val WindowgetGeometry: '_object * int * int * int * int * int -> int * int * int * int * int
        val WindowsetCursor: '_object * '_object -> unit
        val WindowsetBackPixmap: '_object * '_object * bool -> unit
        val WindowsetBackground: '_object * '_object -> unit
        val WindowsetTransientFor: '_object * '_object -> unit
        val WindowsetRole: '_object * string -> unit
        val WindowsetTitle: '_object * string -> unit
        val WindowendPaint: '_object -> unit
        val WindowbeginPaintRegion: '_object * '_object -> unit
        val WindowbeginPaintRect: '_object * '_object -> unit
        val WindowsetSkipPagerHint: '_object * bool -> unit
        val WindowsetSkipTaskbarHint: '_object * bool -> unit
        val WindowsetModalHint: '_object * bool -> unit
        val WindowsetTypeHint: '_object * 'gdk_windowtypehint_t -> unit
        val WindowsetHints: '_object * int * int * int * int * int * int * int -> unit
        val WindowsetStaticGravities: '_object * bool -> bool
        val WindowgetState: '_object -> 'gdk_windowstate_t
        val WindowisViewable: '_object -> bool
        val WindowisVisible: '_object -> bool
        val WindowmergeChildShapes: '_object -> unit
        val WindowsetChildShapes: '_object -> unit
        val WindowshapeCombineMask: '_object * '_object * int * int -> unit
        val Windowscroll: '_object * int * int -> unit
        val WindowsetOverrideRedirect: '_object * bool -> unit
        val WindowsetUserData: '_object * '_object -> unit
        val Windowfocus: '_object * int -> unit
        val WindowlowerWindow: '_object -> unit
        val WindowraiseWindow: '_object -> unit
        val WindowclearAreaE: '_object * int * int * int * int -> unit
        val WindowclearArea: '_object * int * int * int * int -> unit
        val Windowclear: '_object -> unit
        val Windowreparent: '_object * '_object * int * int -> unit
        val WindowmoveResize: '_object * int * int * int * int -> unit
        val Windowresize: '_object * int * int -> unit
        val Windowmove: '_object * int * int -> unit
        val Windowwithdraw: '_object -> unit
        val Windowhide: '_object -> unit
        val Windowshow: '_object -> unit
        val WindowatPointer: int * int -> '_object * int * int
        val WindowgetWindowType: '_object -> 'gdk_windowtype_t
        val Windowdestroy: '_object -> unit
        val WindowsetKeepBelow: '_object * bool -> unit
        val WindowsetKeepAbove: '_object * bool -> unit
        val WindowobjectGetType: unit -> '_gtype
        val WindowselectionConvert: '_object * 'word32_word * 'word32_word * int -> unit
        val WindowpropertyDelete: '_object * 'word32_word -> unit
        val WindowpropertyChange: '_object * 'word32_word * 'word32_word * int * 'gdk_propmode_t * string * int -> unit
        val WindowinputSetExtensionEvents: '_object * int * 'gdk_extensionmode_t -> unit
        val WindowdragBegin: '_object * ('_object list) -> '_object
        val DrawabledrawGrayImage: '_object * '_object * int * int * int * int * 'gdk_rgbdither_t * string * int -> unit
        val DrawabledrawRgb32Image: '_object * '_object * int * int * int * int * 'gdk_rgbdither_t * string * int -> unit
        val DrawabledrawRgbImageDithalign: '_object * '_object * int * int * int * int * 'gdk_rgbdither_t * string * int * int * int -> unit
        val DrawabledrawRgbImage: '_object * '_object * int * int * int * int * 'gdk_rgbdither_t * string * int -> unit
        val DrawableimageGet: '_object * int * int * int * int -> '_object
        val DrawablegetVisibleRegion: '_object -> '_object
        val DrawablegetClipRegion: '_object -> '_object
        val DrawablegetImage: '_object * int * int * int * int -> '_object
        val DrawabledrawLayout: '_object * '_object * int * int * '_object -> unit
        val DrawabledrawLayoutLine: '_object * '_object * int * int * '_object -> unit
        val DrawabledrawGlyphs: '_object * '_object * '_object * int * int * '_object -> unit
        val DrawabledrawPixbuf: '_object * '_object * '_object * int * int * int * int * int * int * 'gdk_rgbdither_t * int * int -> unit
        val DrawabledrawLines: '_object * '_object * '_object * int -> unit
        val DrawabledrawPoints: '_object * '_object * '_object * int -> unit
        val DrawabledrawImage: '_object * '_object * '_object * int * int * int * int * int * int -> unit
        val DrawabledrawDrawable: '_object * '_object * '_object * int * int * int * int * int * int -> unit
        val DrawabledrawText: '_object * '_object * '_object * int * int * string * int -> unit
        val DrawabledrawString: '_object * '_object * '_object * int * int * string -> unit
        val DrawabledrawPolygon: '_object * '_object * bool * '_object * int -> unit
        val DrawabledrawArc: '_object * '_object * bool * int * int * int * int * int * int -> unit
        val DrawabledrawRectangle: '_object * '_object * bool * int * int * int * int -> unit
        val DrawabledrawLine: '_object * '_object * int * int * int * int -> unit
        val DrawabledrawPoint: '_object * '_object * int * int -> unit
        val Drawableunref: '_object -> unit
        val Drawablereference: '_object -> '_object
        val DrawablegetDisplay: '_object -> '_object
        val DrawablegetScreen: '_object -> '_object
        val DrawablegetDepth: '_object -> int
        val DrawablegetVisual: '_object -> '_object
        val DrawablegetColormap: '_object -> '_object
        val DrawablesetColormap: '_object * '_object -> unit
        val DrawablegetSize: '_object * int * int -> int * int
        val DrawablegetData: '_object * string -> '_object
        val DrawablesetData: '_object * string * '_object * '_object -> unit
        val DrawablegetType: unit -> '_gtype
        val DragContextnew: unit -> '_object
        val DragContextsetIconDefault: '_object -> unit
        val DragContextsetIconStock: '_object * string * int * int -> unit
        val DragContextsetIconPixbuf: '_object * '_object * int * int -> unit
        val DragContextsetIconPixmap: '_object * '_object * '_object * '_object * int * int -> unit
        val DragContextsetIconWidget: '_object * '_object * int * int -> unit
        val DragContextgetSourceWidget: '_object -> '_object
        val DragContextfinish: '_object * bool * bool * int -> unit
        val DragContextdragDropSucceeded: '_object -> bool
        val DragContextdragAbort: '_object * int -> unit
        val DragContextdragDrop: '_object * int -> unit
        val DragContextdragMotion: '_object * '_object * 'gdk_dragprotocol_t * int * int * 'gdk_dragaction_t * 'gdk_dragaction_t * int -> bool
        val DragContextdragFindWindowForScreen: '_object * '_object * '_object * int * int * 'gdk_dragprotocol_t -> '_object * 'gdk_dragprotocol_t
        val DragContextdragFindWindow: '_object * '_object * int * int * 'gdk_dragprotocol_t -> '_object * 'gdk_dragprotocol_t
        val DragContextdragGetSelection: '_object -> 'word32_word
        val DragContextdropFinish: '_object * bool * int -> unit
        val DragContextdropReply: '_object * bool * int -> unit
        val DragContextdragStatus: '_object * 'gdk_dragaction_t * int -> unit
        val DragContextunref: '_object -> unit
        val DragContextreference: '_object -> unit
        val DragContextgetType: unit -> '_gtype
        val DragContextgetFieldTargets: '_object -> '_object list
        val DragContextsetFieldTargets: '_object * ('_object list) -> unit
        val DragContextgetFieldSuggestedAction: '_object -> 'gdk_dragaction_t
        val DragContextsetFieldSuggestedAction: '_object * 'gdk_dragaction_t -> unit
        val DragContextgetFieldStartTime: '_object -> int
        val DragContextsetFieldStartTime: '_object * int -> unit
        val DragContextgetFieldSourceWindow: '_object -> '_object
        val DragContextsetFieldSourceWindow: '_object * '_object -> unit
        val DragContextgetFieldProtocol: '_object -> 'gdk_dragprotocol_t
        val DragContextsetFieldProtocol: '_object * 'gdk_dragprotocol_t -> unit
        val DragContextgetFieldIsSource: '_object -> bool
        val DragContextsetFieldIsSource: '_object * bool -> unit
        val DragContextgetFieldDestWindow: '_object -> '_object
        val DragContextsetFieldDestWindow: '_object * '_object -> unit
        val DragContextgetFieldActions: '_object -> 'gdk_dragaction_t
        val DragContextsetFieldActions: '_object * 'gdk_dragaction_t -> unit
        val DragContextgetFieldAction: '_object -> 'gdk_dragaction_t
        val DragContextsetFieldAction: '_object * 'gdk_dragaction_t -> unit
        val DisplayManagerlistDisplays: '_object -> '_object list
        val DisplayManagersetDefaultDisplay: '_object * '_object -> unit
        val DisplayManagergetDefaultDisplay: '_object -> '_object
        val DisplayManagerget: unit -> '_object
        val DisplayManagergetType: unit -> '_gtype
        val DisplayopenDisplay: string -> '_object
        val DisplaygetDefaultGroup: '_object -> '_object
        val DisplaygetMaximalCursorSize: '_object * int * int -> int * int
        val DisplaygetDefaultCursorSize: '_object -> int
        val DisplaysupportsCursorColor: '_object -> bool
        val DisplaysupportsCursorAlpha: '_object -> bool
        val DisplaysetDoubleClickDistance: '_object * int -> unit
        val Displayflush: '_object -> unit
        val DisplaystoreClipboard: '_object * '_object * int * ('word32_word vector) -> unit
        val DisplaysupportsClipboardPersistence: '_object -> bool
        val DisplayrequestSelectionNotification: '_object * 'word32_word -> bool
        val DisplaysupportsSelectionNotification: '_object -> bool
        val DisplayopenDefaultLibgtkOnly: unit -> '_object
        val DisplaygetWindowAtPointer: '_object * int * int -> '_object * int * int
        val DisplaygetCorePointer: '_object -> '_object
        val DisplaygetDefault: unit -> '_object
        val DisplaysetDoubleClickTime: '_object * int -> unit
        val DisplayputEvent: '_object * '_object -> unit
        val DisplaypeekEvent: '_object -> '_object
        val DisplaygetEvent: '_object -> '_object
        val Displayclose: '_object -> unit
        val Displaysync: '_object -> unit
        val Displaybeep: '_object -> unit
        val DisplaypointerIsGrabbed: '_object -> bool
        val DisplaykeyboardUngrab: '_object * int -> unit
        val DisplaypointerUngrab: '_object * int -> unit
        val DisplaygetDefaultScreen: '_object -> '_object
        val DisplaygetScreen: '_object * int -> '_object
        val DisplaygetNScreens: '_object -> int
        val DisplaygetName: '_object -> string
        val DisplaygetType: unit -> '_gtype
        val Devicenew: { axes : '_object, has_cursor : bool, keys : '_object, mode : 'gdk_inputmode_t, name : string, num_axes : int, num_keys : int, source : 'gdk_inputsource_t } -> '_object
        val DevicegetCorePointer: unit -> '_object
        val DevicegetAxis: '_object * real * 'gdk_axisuse_t * real -> bool * real * real
        val DevicegetState: '_object * '_object * real * 'gdk_modifiertype_t -> real * 'gdk_modifiertype_t
        val DevicesetAxisUse: '_object * int * 'gdk_axisuse_t -> unit
        val DevicesetKey: '_object * int * int * 'gdk_modifiertype_t -> unit
        val DevicesetMode: '_object * 'gdk_inputmode_t -> bool
        val DevicesetSource: '_object * 'gdk_inputsource_t -> unit
        val DevicegetType: unit -> '_gtype
        val DevicegetFieldSource: '_object -> 'gdk_inputsource_t
        val DevicesetFieldSource: '_object * 'gdk_inputsource_t -> unit
        val DevicegetFieldNumKeys: '_object -> int
        val DevicesetFieldNumKeys: '_object * int -> unit
        val DevicegetFieldNumAxes: '_object -> int
        val DevicesetFieldNumAxes: '_object * int -> unit
        val DevicegetFieldName: '_object -> string
        val DevicesetFieldName: '_object * string -> unit
        val DevicegetFieldMode: '_object -> 'gdk_inputmode_t
        val DevicesetFieldMode: '_object * 'gdk_inputmode_t -> unit
        val DevicegetFieldKeys: '_object -> '_object
        val DevicesetFieldKeys: '_object * '_object -> unit
        val DevicegetFieldHasCursor: '_object -> bool
        val DevicesetFieldHasCursor: '_object * bool -> unit
        val DevicegetFieldAxes: '_object -> '_object
        val DevicesetFieldAxes: '_object * '_object -> unit
        val Colormapnew: '_object * bool -> '_object
        val Colormapchange: '_object * '_object -> int
        val Colormapalloc: '_object * '_object -> int
        val Colormapblack: '_object * '_object -> int
        val Colormapwhite: '_object * '_object -> int
        val ColormapgetScreen: '_object -> '_object
        val ColormapgetVisual: '_object -> '_object
        val ColormapqueryColor: '_object * int * '_object -> unit
        val ColormapallocColor: '_object * '_object * bool * bool -> bool
        val ColormapgetSystem: unit -> '_object
        val ColormapgetType: unit -> '_gtype
        val PointerisGrabbed: unit -> bool
        val Pointerungrab: int -> unit
        val Pointergrab: '_object * bool * 'gdk_eventmask_t * '_object * '_object * int -> 'gdk_grabstatus_t
        val KeyvaltoUnicode: int -> int
        val KeyvalisLower: int -> bool
        val KeyvalisUpper: int -> bool
        val KeyvaltoLower: int -> int
        val KeyvaltoUpper: int -> int
        val KeyvalconvertCase: int * int * int -> int * int
        val KeyvalfromName: string -> int
        val Keyvalname: int -> string
        val Listvisuals: unit -> '_object list
        val UnicodetoKeyval: int -> int
        val DrawlayoutWithColors: '_object * '_object * int * int * '_object * '_object * '_object -> unit
        val DrawlayoutLineWithColors: '_object * '_object * int * int * '_object * '_object * '_object -> unit
        val Deviceslist: unit -> '_object list
        val Fontsetload: string -> '_object
        val FontsetloadForDisplay: '_object * string -> '_object
        val Eventspending: unit -> bool
        val RgbgetVisual: unit -> '_object
        val RgbgetCmap: unit -> '_object
        val RgbgetColormap: unit -> '_object
        val RgbsetMinColors: int -> unit
        val RgbsetInstall: bool -> unit
        val RgbsetVerbose: bool -> unit
        val Rgbditherable: unit -> bool
        val RgbgcSetBackground: '_object * int -> unit
        val RgbgcSetForeground: '_object * int -> unit
        val RgbxpixelFromRgb: int -> int
        val Threadsinit: unit -> unit
        val Threadsleave: unit -> unit
        val Threadsenter: unit -> unit
        val QueryvisualTypes: '_object * int -> int
        val Querydepths: '_object * int -> int
        val DraggetProtocolForDisplay: '_object * int * 'gdk_dragprotocol_t -> int * 'gdk_dragprotocol_t
        val DraggetProtocol: int * 'gdk_dragprotocol_t -> int * 'gdk_dragprotocol_t
        val Keyboardungrab: int -> unit
        val Keyboardgrab: '_object * bool * int -> 'gdk_grabstatus_t
        val Atomintern: string * bool -> 'word32_word
        val Settingget: string -> bool * '_gvalue
        val SetpointerHooks: '_object -> '_object
        val SetsmClientId: string -> unit
        val SetshowEvents: bool -> unit
        val SetdoubleClickTime: int -> unit
        val GetdefaultRootWindow: unit -> '_object
        val GetshowEvents: unit -> bool
        val SelectionsendNotifyForDisplay: '_object * int * 'word32_word * 'word32_word * 'word32_word * int -> unit
        val SelectionsendNotify: int * 'word32_word * 'word32_word * 'word32_word * int -> unit
        val SelectionownerGetForDisplay: '_object * 'word32_word -> '_object
        val SelectionownerSetForDisplay: '_object * '_object * 'word32_word * int * bool -> bool
        val SelectionownerGet: 'word32_word -> '_object
        val SelectionownerSet: '_object * 'word32_word * int * bool -> bool
        end
        structure NativeGtk :
        sig
        val WidgetFlagsToInt : 'gtk_widgetflags_t -> int
        val WidgetFlagsFromInt : int -> 'gtk_widgetflags_t
        val WidgetFlagsGetType : unit -> '_gtype
        val UIManagerItemTypeToInt : 'gtk_uimanageritemtype_t -> int
        val UIManagerItemTypeFromInt : int -> 'gtk_uimanageritemtype_t
        val UIManagerItemTypeGetType : unit -> '_gtype
        val TreeModelFlagsToInt : 'gtk_treemodelflags_t -> int
        val TreeModelFlagsFromInt : int -> 'gtk_treemodelflags_t
        val TreeModelFlagsGetType : unit -> '_gtype
        val TextSearchFlagsToInt : 'gtk_textsearchflags_t -> int
        val TextSearchFlagsFromInt : int -> 'gtk_textsearchflags_t
        val TextSearchFlagsGetType : unit -> '_gtype
        val TargetFlagsToInt : 'gtk_targetflags_t -> int
        val TargetFlagsFromInt : int -> 'gtk_targetflags_t
        val TargetFlagsGetType : unit -> '_gtype
        val RcFlagsToInt : 'gtk_rcflags_t -> int
        val RcFlagsFromInt : int -> 'gtk_rcflags_t
        val RcFlagsGetType : unit -> '_gtype
        val PrivateFlagsToInt : 'gtk_privateflags_t -> int
        val PrivateFlagsFromInt : int -> 'gtk_privateflags_t
        val PrivateFlagsGetType : unit -> '_gtype
        val ObjectFlagsToInt : 'gtk_objectflags_t -> int
        val ObjectFlagsFromInt : int -> 'gtk_objectflags_t
        val ObjectFlagsGetType : unit -> '_gtype
        val IconLookupFlagsToInt : 'gtk_iconlookupflags_t -> int
        val IconLookupFlagsFromInt : int -> 'gtk_iconlookupflags_t
        val IconLookupFlagsGetType : unit -> '_gtype
        val FileFilterFlagsToInt : 'gtk_filefilterflags_t -> int
        val FileFilterFlagsFromInt : int -> 'gtk_filefilterflags_t
        val FileFilterFlagsGetType : unit -> '_gtype
        val DialogFlagsToInt : 'gtk_dialogflags_t -> int
        val DialogFlagsFromInt : int -> 'gtk_dialogflags_t
        val DialogFlagsGetType : unit -> '_gtype
        val DestDefaultsToInt : 'gtk_destdefaults_t -> int
        val DestDefaultsFromInt : int -> 'gtk_destdefaults_t
        val DestDefaultsGetType : unit -> '_gtype
        val DebugFlagToInt : 'gtk_debugflag_t -> int
        val DebugFlagFromInt : int -> 'gtk_debugflag_t
        val DebugFlagGetType : unit -> '_gtype
        val CellRendererStateToInt : 'gtk_cellrendererstate_t -> int
        val CellRendererStateFromInt : int -> 'gtk_cellrendererstate_t
        val CellRendererStateGetType : unit -> '_gtype
        val CalendarDisplayOptionsToInt : 'gtk_calendardisplayoptions_t -> int
        val CalendarDisplayOptionsFromInt : int -> 'gtk_calendardisplayoptions_t
        val CalendarDisplayOptionsGetType : unit -> '_gtype
        val ButtonActionToInt : 'gtk_buttonaction_t -> int
        val ButtonActionFromInt : int -> 'gtk_buttonaction_t
        val ButtonActionGetType : unit -> '_gtype
        val AttachOptionsToInt : 'gtk_attachoptions_t -> int
        val AttachOptionsFromInt : int -> 'gtk_attachoptions_t
        val AttachOptionsGetType : unit -> '_gtype
        val ArgFlagsToInt : 'gtk_argflags_t -> int
        val ArgFlagsFromInt : int -> 'gtk_argflags_t
        val ArgFlagsGetType : unit -> '_gtype
        val AccelFlagsToInt : 'gtk_accelflags_t -> int
        val AccelFlagsFromInt : int -> 'gtk_accelflags_t
        val AccelFlagsGetType : unit -> '_gtype
        val WrapModeToInt : 'gtk_wrapmode_t -> int
        val WrapModeFromInt : int -> 'gtk_wrapmode_t
        val WrapModeGetType : unit -> '_gtype
        val WindowTypeToInt : 'gtk_windowtype_t -> int
        val WindowTypeFromInt : int -> 'gtk_windowtype_t
        val WindowTypeGetType : unit -> '_gtype
        val WindowPositionToInt : 'gtk_windowposition_t -> int
        val WindowPositionFromInt : int -> 'gtk_windowposition_t
        val WindowPositionGetType : unit -> '_gtype
        val WidgetHelpTypeToInt : 'gtk_widgethelptype_t -> int
        val WidgetHelpTypeFromInt : int -> 'gtk_widgethelptype_t
        val WidgetHelpTypeGetType : unit -> '_gtype
        val VisibilityToInt : 'gtk_visibility_t -> int
        val VisibilityFromInt : int -> 'gtk_visibility_t
        val VisibilityGetType : unit -> '_gtype
        val UpdateTypeToInt : 'gtk_updatetype_t -> int
        val UpdateTypeFromInt : int -> 'gtk_updatetype_t
        val UpdateTypeGetType : unit -> '_gtype
        val TreeViewDropPositionToInt : 'gtk_treeviewdropposition_t -> int
        val TreeViewDropPositionFromInt : int -> 'gtk_treeviewdropposition_t
        val TreeViewDropPositionGetType : unit -> '_gtype
        val TreeViewColumnSizingToInt : 'gtk_treeviewcolumnsizing_t -> int
        val TreeViewColumnSizingFromInt : int -> 'gtk_treeviewcolumnsizing_t
        val TreeViewColumnSizingGetType : unit -> '_gtype
        val ToolbarStyleToInt : 'gtk_toolbarstyle_t -> int
        val ToolbarStyleFromInt : int -> 'gtk_toolbarstyle_t
        val ToolbarStyleGetType : unit -> '_gtype
        val ToolbarSpaceStyleToInt : 'gtk_toolbarspacestyle_t -> int
        val ToolbarSpaceStyleFromInt : int -> 'gtk_toolbarspacestyle_t
        val ToolbarSpaceStyleGetType : unit -> '_gtype
        val ToolbarChildTypeToInt : 'gtk_toolbarchildtype_t -> int
        val ToolbarChildTypeFromInt : int -> 'gtk_toolbarchildtype_t
        val ToolbarChildTypeGetType : unit -> '_gtype
        val TextWindowTypeToInt : 'gtk_textwindowtype_t -> int
        val TextWindowTypeFromInt : int -> 'gtk_textwindowtype_t
        val TextWindowTypeGetType : unit -> '_gtype
        val TextDirectionToInt : 'gtk_textdirection_t -> int
        val TextDirectionFromInt : int -> 'gtk_textdirection_t
        val TextDirectionGetType : unit -> '_gtype
        val SubmenuPlacementToInt : 'gtk_submenuplacement_t -> int
        val SubmenuPlacementFromInt : int -> 'gtk_submenuplacement_t
        val SubmenuPlacementGetType : unit -> '_gtype
        val SubmenuDirectionToInt : 'gtk_submenudirection_t -> int
        val SubmenuDirectionFromInt : int -> 'gtk_submenudirection_t
        val SubmenuDirectionGetType : unit -> '_gtype
        val StateTypeToInt : 'gtk_statetype_t -> int
        val StateTypeFromInt : int -> 'gtk_statetype_t
        val StateTypeGetType : unit -> '_gtype
        val SpinTypeToInt : 'gtk_spintype_t -> int
        val SpinTypeFromInt : int -> 'gtk_spintype_t
        val SpinTypeGetType : unit -> '_gtype
        val SpinButtonUpdatePolicyToInt : 'gtk_spinbuttonupdatepolicy_t -> int
        val SpinButtonUpdatePolicyFromInt : int -> 'gtk_spinbuttonupdatepolicy_t
        val SpinButtonUpdatePolicyGetType : unit -> '_gtype
        val SortTypeToInt : 'gtk_sorttype_t -> int
        val SortTypeFromInt : int -> 'gtk_sorttype_t
        val SortTypeGetType : unit -> '_gtype
        val SizeGroupModeToInt : 'gtk_sizegroupmode_t -> int
        val SizeGroupModeFromInt : int -> 'gtk_sizegroupmode_t
        val SizeGroupModeGetType : unit -> '_gtype
        val SideTypeToInt : 'gtk_sidetype_t -> int
        val SideTypeFromInt : int -> 'gtk_sidetype_t
        val SideTypeGetType : unit -> '_gtype
        val ShadowTypeToInt : 'gtk_shadowtype_t -> int
        val ShadowTypeFromInt : int -> 'gtk_shadowtype_t
        val ShadowTypeGetType : unit -> '_gtype
        val SelectionModeToInt : 'gtk_selectionmode_t -> int
        val SelectionModeFromInt : int -> 'gtk_selectionmode_t
        val SelectionModeGetType : unit -> '_gtype
        val ScrollTypeToInt : 'gtk_scrolltype_t -> int
        val ScrollTypeFromInt : int -> 'gtk_scrolltype_t
        val ScrollTypeGetType : unit -> '_gtype
        val ScrollStepToInt : 'gtk_scrollstep_t -> int
        val ScrollStepFromInt : int -> 'gtk_scrollstep_t
        val ScrollStepGetType : unit -> '_gtype
        val ResponseTypeToInt : 'gtk_responsetype_t -> int
        val ResponseTypeFromInt : int -> 'gtk_responsetype_t
        val ResponseTypeGetType : unit -> '_gtype
        val ResizeModeToInt : 'gtk_resizemode_t -> int
        val ResizeModeFromInt : int -> 'gtk_resizemode_t
        val ResizeModeGetType : unit -> '_gtype
        val ReliefStyleToInt : 'gtk_reliefstyle_t -> int
        val ReliefStyleFromInt : int -> 'gtk_reliefstyle_t
        val ReliefStyleGetType : unit -> '_gtype
        val RcTokenTypeToInt : 'gtk_rctokentype_t -> int
        val RcTokenTypeFromInt : int -> 'gtk_rctokentype_t
        val RcTokenTypeGetType : unit -> '_gtype
        val ProgressBarStyleToInt : 'gtk_progressbarstyle_t -> int
        val ProgressBarStyleFromInt : int -> 'gtk_progressbarstyle_t
        val ProgressBarStyleGetType : unit -> '_gtype
        val ProgressBarOrientationToInt : 'gtk_progressbarorientation_t -> int
        val ProgressBarOrientationFromInt : int -> 'gtk_progressbarorientation_t
        val ProgressBarOrientationGetType : unit -> '_gtype
        val PreviewTypeToInt : 'gtk_previewtype_t -> int
        val PreviewTypeFromInt : int -> 'gtk_previewtype_t
        val PreviewTypeGetType : unit -> '_gtype
        val PositionTypeToInt : 'gtk_positiontype_t -> int
        val PositionTypeFromInt : int -> 'gtk_positiontype_t
        val PositionTypeGetType : unit -> '_gtype
        val PolicyTypeToInt : 'gtk_policytype_t -> int
        val PolicyTypeFromInt : int -> 'gtk_policytype_t
        val PolicyTypeGetType : unit -> '_gtype
        val PathTypeToInt : 'gtk_pathtype_t -> int
        val PathTypeFromInt : int -> 'gtk_pathtype_t
        val PathTypeGetType : unit -> '_gtype
        val PathPriorityTypeToInt : 'gtk_pathprioritytype_t -> int
        val PathPriorityTypeFromInt : int -> 'gtk_pathprioritytype_t
        val PathPriorityTypeGetType : unit -> '_gtype
        val PackTypeToInt : 'gtk_packtype_t -> int
        val PackTypeFromInt : int -> 'gtk_packtype_t
        val PackTypeGetType : unit -> '_gtype
        val OrientationToInt : 'gtk_orientation_t -> int
        val OrientationFromInt : int -> 'gtk_orientation_t
        val OrientationGetType : unit -> '_gtype
        val NotebookTabToInt : 'gtk_notebooktab_t -> int
        val NotebookTabFromInt : int -> 'gtk_notebooktab_t
        val NotebookTabGetType : unit -> '_gtype
        val MovementStepToInt : 'gtk_movementstep_t -> int
        val MovementStepFromInt : int -> 'gtk_movementstep_t
        val MovementStepGetType : unit -> '_gtype
        val MetricTypeToInt : 'gtk_metrictype_t -> int
        val MetricTypeFromInt : int -> 'gtk_metrictype_t
        val MetricTypeGetType : unit -> '_gtype
        val MessageTypeToInt : 'gtk_messagetype_t -> int
        val MessageTypeFromInt : int -> 'gtk_messagetype_t
        val MessageTypeGetType : unit -> '_gtype
        val MenuDirectionTypeToInt : 'gtk_menudirectiontype_t -> int
        val MenuDirectionTypeFromInt : int -> 'gtk_menudirectiontype_t
        val MenuDirectionTypeGetType : unit -> '_gtype
        val MatchTypeToInt : 'gtk_matchtype_t -> int
        val MatchTypeFromInt : int -> 'gtk_matchtype_t
        val MatchTypeGetType : unit -> '_gtype
        val JustificationToInt : 'gtk_justification_t -> int
        val JustificationFromInt : int -> 'gtk_justification_t
        val JustificationGetType : unit -> '_gtype
        val IMStatusStyleToInt : 'gtk_imstatusstyle_t -> int
        val IMStatusStyleFromInt : int -> 'gtk_imstatusstyle_t
        val IMStatusStyleGetType : unit -> '_gtype
        val IMPreeditStyleToInt : 'gtk_impreeditstyle_t -> int
        val IMPreeditStyleFromInt : int -> 'gtk_impreeditstyle_t
        val IMPreeditStyleGetType : unit -> '_gtype
        val ImageTypeToInt : 'gtk_imagetype_t -> int
        val ImageTypeFromInt : int -> 'gtk_imagetype_t
        val ImageTypeGetType : unit -> '_gtype
        val IconThemeErrorToInt : 'gtk_iconthemeerror_t -> int
        val IconThemeErrorFromInt : int -> 'gtk_iconthemeerror_t
        val IconThemeErrorGetType : unit -> '_gtype
        val IconSizeToInt : 'gtk_iconsize_t -> int
        val IconSizeFromInt : int -> 'gtk_iconsize_t
        val IconSizeGetType : unit -> '_gtype
        val FileChooserErrorToInt : 'gtk_filechoosererror_t -> int
        val FileChooserErrorFromInt : int -> 'gtk_filechoosererror_t
        val FileChooserErrorGetType : unit -> '_gtype
        val FileChooserActionToInt : 'gtk_filechooseraction_t -> int
        val FileChooserActionFromInt : int -> 'gtk_filechooseraction_t
        val FileChooserActionGetType : unit -> '_gtype
        val ExpanderStyleToInt : 'gtk_expanderstyle_t -> int
        val ExpanderStyleFromInt : int -> 'gtk_expanderstyle_t
        val ExpanderStyleGetType : unit -> '_gtype
        val DirectionTypeToInt : 'gtk_directiontype_t -> int
        val DirectionTypeFromInt : int -> 'gtk_directiontype_t
        val DirectionTypeGetType : unit -> '_gtype
        val DeleteTypeToInt : 'gtk_deletetype_t -> int
        val DeleteTypeFromInt : int -> 'gtk_deletetype_t
        val DeleteTypeGetType : unit -> '_gtype
        val CurveTypeToInt : 'gtk_curvetype_t -> int
        val CurveTypeFromInt : int -> 'gtk_curvetype_t
        val CurveTypeGetType : unit -> '_gtype
        val CornerTypeToInt : 'gtk_cornertype_t -> int
        val CornerTypeFromInt : int -> 'gtk_cornertype_t
        val CornerTypeGetType : unit -> '_gtype
        val CellTypeToInt : 'gtk_celltype_t -> int
        val CellTypeFromInt : int -> 'gtk_celltype_t
        val CellTypeGetType : unit -> '_gtype
        val CellRendererModeToInt : 'gtk_cellrenderermode_t -> int
        val CellRendererModeFromInt : int -> 'gtk_cellrenderermode_t
        val CellRendererModeGetType : unit -> '_gtype
        val ButtonsTypeToInt : 'gtk_buttonstype_t -> int
        val ButtonsTypeFromInt : int -> 'gtk_buttonstype_t
        val ButtonsTypeGetType : unit -> '_gtype
        val ButtonBoxStyleToInt : 'gtk_buttonboxstyle_t -> int
        val ButtonBoxStyleFromInt : int -> 'gtk_buttonboxstyle_t
        val ButtonBoxStyleGetType : unit -> '_gtype
        val ArrowTypeToInt : 'gtk_arrowtype_t -> int
        val ArrowTypeFromInt : int -> 'gtk_arrowtype_t
        val ArrowTypeGetType : unit -> '_gtype
        val AnchorTypeToInt : 'gtk_anchortype_t -> int
        val AnchorTypeFromInt : int -> 'gtk_anchortype_t
        val AnchorTypeGetType : unit -> '_gtype
        val TreeRowReferencenewProxy: '_object * '_object * '_object -> '_object
        val TreeRowReferencenew: '_object * '_object -> '_object
        val TreeRowReferencereordered: '_object * '_object * '_object * int -> int
        val TreeRowReferencedeleted: '_object * '_object -> unit
        val TreeRowReferenceinserted: '_object * '_object -> unit
        val TreeRowReferencefree: '_object -> unit
        val TreeRowReferencecopy: '_object -> '_object
        val TreeRowReferencevalid: '_object -> bool
        val TreeRowReferencegetPath: '_object -> '_object
        val TreeRowReferencegetType: unit -> '_gtype
        val TreeIternew: unit -> '_object
        val TreeItergetType: unit -> '_gtype
        val TreeIterfree: '_object -> unit
        val TreeItercopy: '_object -> '_object
        val TextIternew: unit -> '_object
        val TextIterorder: '_object * '_object -> unit
        val TextIterinRange: '_object * '_object * '_object -> bool
        val TextItercompare: '_object * '_object -> int
        val TextIterequal: '_object * '_object -> bool
        val TextIterbackwardSearch: '_object * string * 'gtk_textsearchflags_t * '_object * '_object * '_object -> bool
        val TextIterforwardSearch: '_object * string * 'gtk_textsearchflags_t * '_object * '_object * '_object -> bool
        val TextIterbackwardFindChar: '_object * '_object * '_object * '_object -> bool
        val TextIterforwardFindChar: '_object * '_object * '_object * '_object -> bool
        val TextIterbackwardToTagToggle: '_object * '_object -> bool
        val TextIterforwardToTagToggle: '_object * '_object -> bool
        val TextItersetVisibleLineIndex: '_object * int -> unit
        val TextItersetVisibleLineOffset: '_object * int -> unit
        val TextIterforwardToLineEnd: '_object -> bool
        val TextIterforwardToEnd: '_object -> unit
        val TextItersetLineIndex: '_object * int -> unit
        val TextItersetLineOffset: '_object * int -> unit
        val TextItersetLine: '_object * int -> unit
        val TextItersetOffset: '_object * int -> unit
        val TextIterbackwardVisibleCursorPositions: '_object * int -> bool
        val TextIterforwardVisibleCursorPositions: '_object * int -> bool
        val TextIterbackwardVisibleCursorPosition: '_object -> bool
        val TextIterforwardVisibleCursorPosition: '_object -> bool
        val TextIterbackwardCursorPositions: '_object * int -> bool
        val TextIterforwardCursorPositions: '_object * int -> bool
        val TextIterbackwardCursorPosition: '_object -> bool
        val TextIterforwardCursorPosition: '_object -> bool
        val TextIterbackwardSentenceStarts: '_object * int -> bool
        val TextIterforwardSentenceEnds: '_object * int -> bool
        val TextIterbackwardSentenceStart: '_object -> bool
        val TextIterforwardSentenceEnd: '_object -> bool
        val TextIterbackwardVisibleWordStarts: '_object * int -> bool
        val TextIterforwardVisibleWordEnds: '_object * int -> bool
        val TextIterbackwardVisibleWordStart: '_object -> bool
        val TextIterforwardVisibleWordEnd: '_object -> bool
        val TextIterbackwardWordStarts: '_object * int -> bool
        val TextIterforwardWordEnds: '_object * int -> bool
        val TextIterbackwardWordStart: '_object -> bool
        val TextIterforwardWordEnd: '_object -> bool
        val TextIterbackwardLines: '_object * int -> bool
        val TextIterforwardLines: '_object * int -> bool
        val TextIterbackwardLine: '_object -> bool
        val TextIterforwardLine: '_object -> bool
        val TextIterbackwardChars: '_object * int -> bool
        val TextIterforwardChars: '_object * int -> bool
        val TextIterbackwardChar: '_object -> bool
        val TextIterforwardChar: '_object -> bool
        val TextIterisStart: '_object -> bool
        val TextIterisEnd: '_object -> bool
        val TextItergetLanguage: '_object -> '_object
        val TextItergetAttributes: '_object * '_object -> bool
        val TextItergetBytesInLine: '_object -> int
        val TextItergetCharsInLine: '_object -> int
        val TextIterisCursorPosition: '_object -> bool
        val TextIterendsLine: '_object -> bool
        val TextIterstartsLine: '_object -> bool
        val TextIterinsideSentence: '_object -> bool
        val TextIterendsSentence: '_object -> bool
        val TextIterstartsSentence: '_object -> bool
        val TextIterinsideWord: '_object -> bool
        val TextIterendsWord: '_object -> bool
        val TextIterstartsWord: '_object -> bool
        val TextItercanInsert: '_object * bool -> bool
        val TextItereditable: '_object * bool -> bool
        val TextItergetTags: '_object -> '_object list
        val TextIterhasTag: '_object * '_object -> bool
        val TextItertogglesTag: '_object * '_object -> bool
        val TextIterendsTag: '_object * '_object -> bool
        val TextIterbeginsTag: '_object * '_object -> bool
        val TextItergetToggledTags: '_object * bool -> '_object list
        val TextItergetChildAnchor: '_object -> '_object
        val TextItergetMarks: '_object -> '_object list
        val TextItergetPixbuf: '_object -> '_object
        val TextItergetVisibleText: '_object * '_object -> string
        val TextItergetVisibleSlice: '_object * '_object -> string
        val TextItergetText: '_object * '_object -> string
        val TextItergetSlice: '_object * '_object -> string
        val TextItergetChar: '_object -> int
        val TextItergetVisibleLineIndex: '_object -> int
        val TextItergetVisibleLineOffset: '_object -> int
        val TextItergetLineIndex: '_object -> int
        val TextItergetLineOffset: '_object -> int
        val TextItergetLine: '_object -> int
        val TextItergetOffset: '_object -> int
        val TextItergetType: unit -> '_gtype
        val TextIterfree: '_object -> unit
        val TextItercopy: '_object -> '_object
        val TextItergetBuffer: '_object -> '_object
        val TextAttributesnew: unit -> '_object
        val TextAttributesgetType: unit -> '_gtype
        val TextAttributesreference: '_object -> unit
        val TextAttributesunref: '_object -> unit
        val TextAttributescopyValues: '_object * '_object -> unit
        val TextAttributescopy: '_object -> '_object
        val TextAttributesgetFieldWrapMode: '_object -> 'gtk_wrapmode_t
        val TextAttributessetFieldWrapMode: '_object * 'gtk_wrapmode_t -> unit
        val TextAttributesgetFieldTabs: '_object -> '_object
        val TextAttributessetFieldTabs: '_object * '_object -> unit
        val TextAttributesgetFieldRightMargin: '_object -> int
        val TextAttributessetFieldRightMargin: '_object * int -> unit
        val TextAttributesgetFieldRealized: '_object -> int
        val TextAttributessetFieldRealized: '_object * int -> unit
        val TextAttributesgetFieldPixelsInsideWrap: '_object -> int
        val TextAttributessetFieldPixelsInsideWrap: '_object * int -> unit
        val TextAttributesgetFieldPixelsBelowLines: '_object -> int
        val TextAttributessetFieldPixelsBelowLines: '_object * int -> unit
        val TextAttributesgetFieldPixelsAboveLines: '_object -> int
        val TextAttributessetFieldPixelsAboveLines: '_object * int -> unit
        val TextAttributesgetFieldLeftMargin: '_object -> int
        val TextAttributessetFieldLeftMargin: '_object * int -> unit
        val TextAttributesgetFieldLanguage: '_object -> '_object
        val TextAttributessetFieldLanguage: '_object * '_object -> unit
        val TextAttributesgetFieldJustification: '_object -> 'gtk_justification_t
        val TextAttributessetFieldJustification: '_object * 'gtk_justification_t -> unit
        val TextAttributesgetFieldInvisible: '_object -> int
        val TextAttributessetFieldInvisible: '_object * int -> unit
        val TextAttributesgetFieldIndent: '_object -> int
        val TextAttributessetFieldIndent: '_object * int -> unit
        val TextAttributesgetFieldFontScale: '_object -> real
        val TextAttributessetFieldFontScale: '_object * real -> unit
        val TextAttributesgetFieldFont: '_object -> '_object
        val TextAttributessetFieldFont: '_object * '_object -> unit
        val TextAttributesgetFieldEditable: '_object -> int
        val TextAttributessetFieldEditable: '_object * int -> unit
        val TextAttributesgetFieldDirection: '_object -> 'gtk_textdirection_t
        val TextAttributessetFieldDirection: '_object * 'gtk_textdirection_t -> unit
        val TextAttributesgetFieldBgFullHeight: '_object -> int
        val TextAttributessetFieldBgFullHeight: '_object * int -> unit
        val TextAttributesgetFieldAppearance: '_object -> '_object
        val TextAttributessetFieldAppearance: '_object * '_object -> unit
        val TextAppearancenew: { bg_color : '_object, bg_stipple : '_object, draw_bg : int, fg_color : '_object, fg_stipple : '_object, rise : int, strikethrough : int, underline : int } -> '_object
        val TextAppearancegetFieldUnderline: '_object -> int
        val TextAppearancesetFieldUnderline: '_object * int -> unit
        val TextAppearancegetFieldStrikethrough: '_object -> int
        val TextAppearancesetFieldStrikethrough: '_object * int -> unit
        val TextAppearancegetFieldRise: '_object -> int
        val TextAppearancesetFieldRise: '_object * int -> unit
        val TextAppearancegetFieldFgStipple: '_object -> '_object
        val TextAppearancesetFieldFgStipple: '_object * '_object -> unit
        val TextAppearancegetFieldFgColor: '_object -> '_object
        val TextAppearancesetFieldFgColor: '_object * '_object -> unit
        val TextAppearancegetFieldDrawBg: '_object -> int
        val TextAppearancesetFieldDrawBg: '_object * int -> unit
        val TextAppearancegetFieldBgStipple: '_object -> '_object
        val TextAppearancesetFieldBgStipple: '_object * '_object -> unit
        val TextAppearancegetFieldBgColor: '_object -> '_object
        val TextAppearancesetFieldBgColor: '_object * '_object -> unit
        val SelectionDatanew: { data : string, format : int, selection : 'word32_word, target : 'word32_word, ty : 'word32_word } -> '_object
        val SelectionDatatreeGetRowDragData: '_object -> bool * '_object * '_object
        val SelectionDatatreeSetRowDragData: '_object * '_object * '_object -> bool
        val SelectionDatatargetsIncludeImage: '_object * bool -> bool
        val SelectionDatagetUris: '_object -> '_object
        val SelectionDatasetUris: '_object * (string vector) -> bool
        val SelectionDatagetPixbuf: '_object -> '_object
        val SelectionDatasetPixbuf: '_object * '_object -> bool
        val SelectionDatafree: '_object -> unit
        val SelectionDatacopy: '_object -> '_object
        val SelectionDatagetType: unit -> '_gtype
        val SelectionDatatargetsIncludeText: '_object -> bool
        val SelectionDatagetTargets: '_object * '_object * int -> bool * int
        val SelectionDatagetText: '_object -> string
        val SelectionDatasetText: '_object * string * int -> bool
        val SelectionDataset: '_object * 'word32_word * int * string * int -> unit
        val SelectionDatagetFieldType: '_object -> 'word32_word
        val SelectionDatasetFieldType: '_object * 'word32_word -> unit
        val SelectionDatagetFieldTarget: '_object -> 'word32_word
        val SelectionDatasetFieldTarget: '_object * 'word32_word -> unit
        val SelectionDatagetFieldSelection: '_object -> 'word32_word
        val SelectionDatasetFieldSelection: '_object * 'word32_word -> unit
        val SelectionDatagetFieldFormat: '_object -> int
        val SelectionDatasetFieldFormat: '_object * int -> unit
        val SelectionDatagetFieldData: '_object -> string
        val SelectionDatasetFieldData: '_object * string -> unit
        val Requisitionnew: { height : int, width : int } -> '_object
        val Requisitionfree: '_object -> unit
        val Requisitioncopy: '_object -> '_object
        val RequisitiongetType: unit -> '_gtype
        val RequisitiongetFieldWidth: '_object -> int
        val RequisitionsetFieldWidth: '_object * int -> unit
        val RequisitiongetFieldHeight: '_object -> int
        val RequisitionsetFieldHeight: '_object * int -> unit
        val IconSourcenew: unit -> '_object
        val IconSourcegetSize: '_object -> 'gtk_iconsize_t
        val IconSourcegetState: '_object -> 'gtk_statetype_t
        val IconSourcegetDirection: '_object -> 'gtk_textdirection_t
        val IconSourcesetSize: '_object * 'gtk_iconsize_t -> unit
        val IconSourcesetState: '_object * 'gtk_statetype_t -> unit
        val IconSourcesetDirection: '_object * 'gtk_textdirection_t -> unit
        val IconSourcegetDirectionWildcarded: '_object -> bool
        val IconSourcegetStateWildcarded: '_object -> bool
        val IconSourcegetSizeWildcarded: '_object -> bool
        val IconSourcesetSizeWildcarded: '_object * bool -> unit
        val IconSourcesetStateWildcarded: '_object * bool -> unit
        val IconSourcesetDirectionWildcarded: '_object * bool -> unit
        val IconSourcegetPixbuf: '_object -> '_object
        val IconSourcegetIconName: '_object -> string
        val IconSourcegetFilename: '_object -> string
        val IconSourcesetPixbuf: '_object * '_object -> unit
        val IconSourcesetIconName: '_object * string -> unit
        val IconSourcesetFilename: '_object * string -> unit
        val IconSourcefree: '_object -> unit
        val IconSourcecopy: '_object -> '_object
        val IconSourcegetType: unit -> '_gtype
        val IconSetnewFromPixbuf: '_object -> '_object
        val IconSetgetSizes: '_object * '_object * int -> int
        val IconSetaddSource: '_object * '_object -> unit
        val IconSetrenderIcon: '_object * '_object * 'gtk_textdirection_t * 'gtk_statetype_t * 'gtk_iconsize_t * '_object * string -> '_object
        val IconSetcopy: '_object -> '_object
        val IconSetunref: '_object -> unit
        val IconSetreference: '_object -> '_object
        val IconSetnew: unit -> '_object
        val IconSetgetType: unit -> '_gtype
        val IconInfogetDisplayName: '_object -> string
        val IconInfogetAttachPoints: '_object * int -> bool * '_object * int
        val IconInfogetEmbeddedRect: '_object * '_object -> bool
        val IconInfosetRawCoordinates: '_object * bool -> unit
        val IconInfoloadIcon: '_object -> '_object
        val IconInfogetBuiltinPixbuf: '_object -> '_object
        val IconInfogetFilename: '_object -> string
        val IconInfogetBaseSize: '_object -> int
        val IconInfofree: '_object -> unit
        val IconInfocopy: '_object -> '_object
        val IconInfogetType: unit -> '_gtype
        val Borderfree: '_object -> unit
        val Bordercopy: '_object -> '_object
        val BordergetType: unit -> '_gtype
        val TargetEntrynew: { flags : int, info : int, target : string } -> '_object
        val TargetEntrygetFieldTarget: '_object -> string
        val TargetEntrysetFieldTarget: '_object * string -> unit
        val TargetEntrygetFieldInfo: '_object -> int
        val TargetEntrysetFieldInfo: '_object * int -> unit
        val TargetEntrygetFieldFlags: '_object -> int
        val TargetEntrysetFieldFlags: '_object * int -> unit
        val TreePathnew: unit -> '_object
        val TreePathisDescendant: '_object * '_object -> bool
        val TreePathisAncestor: '_object * '_object -> bool
        val TreePathdown: '_object -> unit
        val TreePathup: '_object -> int
        val TreePathprev: '_object -> int
        val TreePathnext: '_object -> unit
        val TreePathcompare: '_object * '_object -> int
        val TreePathcopy: '_object -> '_object
        val TreePathfree: '_object -> unit
        val TreePathgetDepth: '_object -> int
        val TreePathprependIndex: '_object * int -> unit
        val TreePathappendIndex: '_object * int -> unit
        val TreePathnewFirst: unit -> '_object
        val TreePathtoString: '_object -> string
        val TreePathnewFromIndices: int -> '_object
        val TreePathnewFromString: string -> '_object
        val BindingSetfind: string -> '_object
        val BindingSetnew: string -> '_object
        val BindingSetaddPath: '_object * 'gtk_pathtype_t * string * 'gtk_pathprioritytype_t -> unit
        val BindingSetactivate: '_object * int * 'gdk_modifiertype_t * '_object -> bool
        val BindingSetbyClass: '_object -> '_object
        val WindowGroupnew: unit -> '_object
        val WindowGroupremoveWindow: '_object * '_object -> unit
        val WindowGroupaddWindow: '_object * '_object -> unit
        val WindowGroupgetType: unit -> '_gtype
        val Windownew: 'gtk_windowtype_t -> '_object
        val WindowsetDefaultIconName: string -> unit
        val WindowgetIconName: '_object -> string
        val WindowsetIconName: '_object * string -> unit
        val WindowgetFocusOnMap: '_object -> bool
        val WindowsetFocusOnMap: '_object * bool -> unit
        val WindowaddEmbeddedXid: '_object * int -> unit
        val WindowremoveEmbeddedXid: '_object * int -> unit
        val WindowreshowWithInitialSize: '_object -> unit
        val WindowparseGeometry: '_object * string -> bool
        val WindowgetPosition: '_object * int * int -> int * int
        val Windowmove: '_object * int * int -> unit
        val WindowgetSize: '_object * int * int -> int * int
        val Windowresize: '_object * int * int -> unit
        val WindowgetDefaultSize: '_object * int * int -> int * int
        val WindowsetDefaultSize: '_object * int * int -> unit
        val WindowbeginMoveDrag: '_object * int * int * int * int -> unit
        val WindowbeginResizeDrag: '_object * 'gdk_windowedge_t * int * int * int * int -> unit
        val WindowsetKeepBelow: '_object * bool -> unit
        val WindowsetKeepAbove: '_object * bool -> unit
        val Windowunfullscreen: '_object -> unit
        val Windowfullscreen: '_object -> unit
        val Windowunmaximize: '_object -> unit
        val Windowmaximize: '_object -> unit
        val Windowunstick: '_object -> unit
        val Windowstick: '_object -> unit
        val Windowdeiconify: '_object -> unit
        val Windowiconify: '_object -> unit
        val Windowpresent: '_object -> unit
        val WindowpropagateKeyEvent: '_object * '_object -> bool
        val WindowactivateKey: '_object * '_object -> bool
        val WindowgetMnemonicModifier: '_object -> 'gdk_modifiertype_t
        val WindowsetMnemonicModifier: '_object * 'gdk_modifiertype_t -> unit
        val WindowmnemonicActivate: '_object * int * 'gdk_modifiertype_t -> bool
        val WindowremoveMnemonic: '_object * int * '_object -> unit
        val WindowaddMnemonic: '_object * int * '_object -> unit
        val WindowlistToplevels: unit -> '_object list
        val WindowgetModal: '_object -> bool
        val WindowsetModal: '_object * bool -> unit
        val WindowsetAutoStartupNotification: bool -> unit
        val WindowsetDefaultIconFromFile: string -> unit
        val WindowsetDefaultIcon: '_object -> unit
        val WindowgetDefaultIconList: unit -> '_object list
        val WindowsetDefaultIconList: ('_object list) -> unit
        val WindowgetIcon: '_object -> '_object
        val WindowsetIconFromFile: '_object * string -> unit
        val WindowsetIcon: '_object * '_object -> unit
        val WindowgetIconList: '_object -> '_object list
        val WindowsetIconList: '_object * ('_object list) -> unit
        val WindowgetDecorated: '_object -> bool
        val WindowsetDecorated: '_object * bool -> unit
        val WindowgetFrameDimensions: '_object * int * int * int * int -> int * int * int * int
        val WindowsetFrameDimensions: '_object * int * int * int * int -> unit
        val WindowgetHasFrame: '_object -> bool
        val WindowsetHasFrame: '_object * bool -> unit
        val WindowhasToplevelFocus: '_object -> bool
        val WindowisActive: '_object -> bool
        val WindowgetScreen: '_object -> '_object
        val WindowsetScreen: '_object * '_object -> unit
        val WindowgetGravity: '_object -> 'gdk_gravity_t
        val WindowsetGravity: '_object * 'gdk_gravity_t -> unit
        val WindowgetResizable: '_object -> bool
        val WindowsetResizable: '_object * bool -> unit
        val WindowgetDestroyWithParent: '_object -> bool
        val WindowsetDestroyWithParent: '_object * bool -> unit
        val WindowgetAcceptFocus: '_object -> bool
        val WindowsetAcceptFocus: '_object * bool -> unit
        val WindowgetSkipPagerHint: '_object -> bool
        val WindowsetSkipPagerHint: '_object * bool -> unit
        val WindowgetSkipTaskbarHint: '_object -> bool
        val WindowsetSkipTaskbarHint: '_object * bool -> unit
        val WindowgetTypeHint: '_object -> 'gdk_windowtypehint_t
        val WindowsetTypeHint: '_object * 'gdk_windowtypehint_t -> unit
        val WindowgetTransientFor: '_object -> '_object
        val WindowsetTransientFor: '_object * '_object -> unit
        val WindowactivateDefault: '_object -> bool
        val WindowsetDefault: '_object * '_object -> unit
        val WindowgetFocus: '_object -> '_object
        val WindowsetFocus: '_object * '_object -> unit
        val WindowactivateFocus: '_object -> bool
        val WindowsetPosition: '_object * 'gtk_windowposition_t -> unit
        val WindowremoveAccelGroup: '_object * '_object -> unit
        val WindowaddAccelGroup: '_object * '_object -> unit
        val WindowgetRole: '_object -> string
        val WindowsetRole: '_object * string -> unit
        val WindowsetWmclass: '_object * string * string -> unit
        val WindowgetTitle: '_object -> string
        val WindowsetTitle: '_object * string -> unit
        val WindowgetType: unit -> '_gtype
        val WindowtooltipsGetInfoFromTipWindow: '_object -> bool * '_object * '_object
        val WindowgetFieldWmclassName: '_object -> string
        val WindowsetFieldWmclassName: '_object * string -> unit
        val WindowgetFieldWmclassClass: '_object -> string
        val WindowsetFieldWmclassClass: '_object * string -> unit
        val WindowgetFieldWmRole: '_object -> string
        val WindowsetFieldWmRole: '_object * string -> unit
        val WindowgetFieldTypeHint: '_object -> int
        val WindowsetFieldTypeHint: '_object * int -> unit
        val WindowgetFieldType: '_object -> int
        val WindowsetFieldType: '_object * int -> unit
        val WindowgetFieldTransientParent: '_object -> '_object
        val WindowsetFieldTransientParent: '_object * '_object -> unit
        val WindowgetFieldTitle: '_object -> string
        val WindowsetFieldTitle: '_object * string -> unit
        val WindowgetFieldStickInitially: '_object -> int
        val WindowsetFieldStickInitially: '_object * int -> unit
        val WindowgetFieldPosition: '_object -> int
        val WindowsetFieldPosition: '_object * int -> unit
        val WindowgetFieldNeedDefaultSize: '_object -> int
        val WindowsetFieldNeedDefaultSize: '_object * int -> unit
        val WindowgetFieldNeedDefaultPosition: '_object -> int
        val WindowsetFieldNeedDefaultPosition: '_object * int -> unit
        val WindowgetFieldModal: '_object -> int
        val WindowsetFieldModal: '_object * int -> unit
        val WindowgetFieldMnemonicModifier: '_object -> 'gdk_modifiertype_t
        val WindowsetFieldMnemonicModifier: '_object * 'gdk_modifiertype_t -> unit
        val WindowgetFieldMaximizeInitially: '_object -> int
        val WindowsetFieldMaximizeInitially: '_object * int -> unit
        val WindowgetFieldKeysChangedHandler: '_object -> int
        val WindowsetFieldKeysChangedHandler: '_object * int -> unit
        val WindowgetFieldIconifyInitially: '_object -> int
        val WindowsetFieldIconifyInitially: '_object * int -> unit
        val WindowgetFieldHasUserRefCount: '_object -> int
        val WindowsetFieldHasUserRefCount: '_object * int -> unit
        val WindowgetFieldHasFrame: '_object -> int
        val WindowsetFieldHasFrame: '_object * int -> unit
        val WindowgetFieldHasFocus: '_object -> int
        val WindowsetFieldHasFocus: '_object * int -> unit
        val WindowgetFieldGroup: '_object -> '_object
        val WindowsetFieldGroup: '_object * '_object -> unit
        val WindowgetFieldGravity: '_object -> int
        val WindowsetFieldGravity: '_object * int -> unit
        val WindowgetFieldFrameTop: '_object -> int
        val WindowsetFieldFrameTop: '_object * int -> unit
        val WindowgetFieldFrameRight: '_object -> int
        val WindowsetFieldFrameRight: '_object * int -> unit
        val WindowgetFieldFrameLeft: '_object -> int
        val WindowsetFieldFrameLeft: '_object * int -> unit
        val WindowgetFieldFrameBottom: '_object -> int
        val WindowsetFieldFrameBottom: '_object * int -> unit
        val WindowgetFieldFrame: '_object -> '_object
        val WindowsetFieldFrame: '_object * '_object -> unit
        val WindowgetFieldFocusWidget: '_object -> '_object
        val WindowsetFieldFocusWidget: '_object * '_object -> unit
        val WindowgetFieldDestroyWithParent: '_object -> int
        val WindowsetFieldDestroyWithParent: '_object * int -> unit
        val WindowgetFieldDefaultWidget: '_object -> '_object
        val WindowsetFieldDefaultWidget: '_object * '_object -> unit
        val WindowgetFieldDecorated: '_object -> int
        val WindowsetFieldDecorated: '_object * int -> unit
        val WindowgetFieldConfigureRequestCount: '_object -> int
        val WindowsetFieldConfigureRequestCount: '_object * int -> unit
        val WindowgetFieldConfigureNotifyReceived: '_object -> int
        val WindowsetFieldConfigureNotifyReceived: '_object * int -> unit
        val WindowgetFieldAllowShrink: '_object -> int
        val WindowsetFieldAllowShrink: '_object * int -> unit
        val WindowgetFieldAllowGrow: '_object -> int
        val WindowsetFieldAllowGrow: '_object * int -> unit
        val Widgetnew: '_gtype * string -> '_object
        val WidgetremoveMnemonicLabel: '_object * '_object -> unit
        val WidgetaddMnemonicLabel: '_object * '_object -> unit
        val WidgetlistMnemonicLabels: '_object -> '_object list
        val WidgetclassPath: '_object * int * (string vector) * (string vector) -> int
        val Widgetpath: '_object * int * (string vector) * (string vector) -> int
        val WidgetresetShapes: '_object -> unit
        val WidgetshapeCombineMask: '_object * '_object * int * int -> unit
        val WidgetgetDefaultDirection: unit -> 'gtk_textdirection_t
        val WidgetsetDefaultDirection: 'gtk_textdirection_t -> unit
        val WidgetgetDirection: '_object -> 'gtk_textdirection_t
        val WidgetsetDirection: '_object * 'gtk_textdirection_t -> unit
        val WidgetgetDefaultVisual: unit -> '_object
        val WidgetgetDefaultColormap: unit -> '_object
        val WidgetsetDefaultColormap: '_object -> unit
        val WidgetgetDefaultStyle: unit -> '_object
        val WidgetstyleGet: '_object * string -> unit
        val WidgetstyleGetProperty: '_object * string -> '_gvalue
        val WidgetclassFindStyleProperty: '_object * string -> '_object
        val WidgetclassInstallStylePropertyParser: '_object * '_object * '_object -> unit
        val WidgetclassInstallStyleProperty: '_object * '_object -> unit
        val WidgetpopColormap: unit -> unit
        val WidgetpopCompositeChild: unit -> unit
        val WidgetpushCompositeChild: unit -> unit
        val WidgetpushColormap: '_object -> unit
        val WidgetresetRcStyles: '_object -> unit
        val WidgetgetCompositeName: '_object -> string
        val WidgetsetCompositeName: '_object * string -> unit
        val WidgetrenderIcon: '_object * string * 'gtk_iconsize_t * string -> '_object
        val WidgetcreatePangoLayout: '_object * string -> '_object
        val WidgetgetPangoContext: '_object -> '_object
        val WidgetcreatePangoContext: '_object -> '_object
        val WidgetmodifyFont: '_object * '_object -> unit
        val WidgetmodifyBase: '_object * 'gtk_statetype_t * '_object -> unit
        val WidgetmodifyText: '_object * 'gtk_statetype_t * '_object -> unit
        val WidgetmodifyBg: '_object * 'gtk_statetype_t * '_object -> unit
        val WidgetmodifyFg: '_object * 'gtk_statetype_t * '_object -> unit
        val WidgetgetModifierStyle: '_object -> '_object
        val WidgetmodifyStyle: '_object * '_object -> unit
        val WidgetgetStyle: '_object -> '_object
        val WidgetensureStyle: '_object -> unit
        val WidgetsetStyle: '_object * '_object -> unit
        val WidgethideOnDelete: '_object -> bool
        val WidgettranslateCoordinates: '_object * '_object * int * int * int * int -> bool * int * int
        val WidgetisAncestor: '_object * '_object -> bool
        val WidgetgetPointer: '_object * int * int -> int * int
        val WidgetgetEvents: '_object -> int
        val WidgetsetColormap: '_object * '_object -> unit
        val WidgetgetAccessible: '_object -> '_object
        val WidgetgetClipboard: '_object * 'word32_word -> '_object
        val WidgetgetSettings: '_object -> '_object
        val WidgetgetRootWindow: '_object -> '_object
        val WidgetgetDisplay: '_object -> '_object
        val WidgethasScreen: '_object -> bool
        val WidgetgetScreen: '_object -> '_object
        val WidgetgetVisual: '_object -> '_object
        val WidgetgetColormap: '_object -> '_object
        val WidgetgetAncestor: '_object * '_gtype -> '_object
        val WidgetgetToplevel: '_object -> '_object
        val WidgetgetExtensionEvents: '_object -> 'gdk_extensionmode_t
        val WidgetsetExtensionEvents: '_object * 'gdk_extensionmode_t -> unit
        val WidgetaddEvents: '_object * int -> unit
        val WidgetsetEvents: '_object * int -> unit
        val WidgetgetSizeRequest: '_object * int * int -> int * int
        val WidgetsetSizeRequest: '_object * int * int -> unit
        val WidgetchildFocus: '_object * 'gtk_directiontype_t -> bool
        val WidgetgetParentWindow: '_object -> '_object
        val WidgetgetParent: '_object -> '_object
        val WidgetgetChildVisible: '_object -> bool
        val WidgetsetChildVisible: '_object * bool -> unit
        val WidgetsetParentWindow: '_object * '_object -> unit
        val WidgetsetParent: '_object * '_object -> unit
        val WidgetsetRedrawOnAllocate: '_object * bool -> unit
        val WidgetsetDoubleBuffered: '_object * bool -> unit
        val WidgetsetAppPaintable: '_object * bool -> unit
        val WidgetsetSensitive: '_object * bool -> unit
        val WidgetsetState: '_object * 'gtk_statetype_t -> unit
        val WidgetgetName: '_object -> string
        val WidgetsetName: '_object * string -> unit
        val WidgetgrabDefault: '_object -> unit
        val WidgetgrabFocus: '_object -> unit
        val WidgetisFocus: '_object -> bool
        val WidgetthawChildNotify: '_object -> unit
        val WidgetchildNotify: '_object * string -> unit
        val WidgetfreezeChildNotify: '_object -> unit
        val WidgetregionIntersect: '_object * '_object -> '_object
        val Widgetintersect: '_object * '_object * '_object -> bool
        val Widgetreparent: '_object * '_object -> unit
        val WidgetsetScrollAdjustments: '_object * '_object * '_object -> bool
        val Widgetactivate: '_object -> bool
        val WidgetsendExpose: '_object * '_object -> int
        val Widgetevent: '_object * '_object -> bool
        val WidgetmnemonicActivate: '_object * bool -> bool
        val WidgetcanActivateAccel: '_object * int -> bool
        val WidgetlistAccelClosures: '_object -> '_object list
        val WidgetsetAccelPath: '_object * string * '_object -> unit
        val WidgetremoveAccelerator: '_object * '_object * int * 'gdk_modifiertype_t -> bool
        val WidgetaddAccelerator: '_object * string * '_object * int * 'gdk_modifiertype_t * 'gtk_accelflags_t -> unit
        val WidgetgetChildRequisition: '_object * '_object -> unit
        val WidgetsizeAllocate: '_object * '_object -> unit
        val WidgetsizeRequest: '_object * '_object -> unit
        val Widgetdraw: '_object * '_object -> unit
        val WidgetqueueResizeNoRedraw: '_object -> unit
        val WidgetqueueResize: '_object -> unit
        val WidgetqueueClearArea: '_object * int * int * int * int -> unit
        val WidgetqueueClear: '_object -> unit
        val WidgetqueueDrawArea: '_object * int * int * int * int -> unit
        val WidgetqueueDraw: '_object -> unit
        val Widgetunrealize: '_object -> unit
        val Widgetrealize: '_object -> unit
        val Widgetunmap: '_object -> unit
        val Widgetmap: '_object -> unit
        val WidgetgetNoShowAll: '_object -> bool
        val WidgetsetNoShowAll: '_object * bool -> unit
        val WidgethideAll: '_object -> unit
        val WidgetshowAll: '_object -> unit
        val Widgethide: '_object -> unit
        val WidgetshowNow: '_object -> unit
        val Widgetshow: '_object -> unit
        val Widgetunparent: '_object -> unit
        val Widgetset: '_object * string -> unit
        val Widgetdestroyed: '_object -> '_object
        val Widgetdestroy: '_object -> unit
        val Widgetunref: '_object -> unit
        val Widgetreference: '_object -> '_object
        val WidgetgetType: unit -> '_gtype
        val WidgetselectionClear: '_object * '_object -> bool
        val WidgetselectionRemoveAll: '_object -> unit
        val WidgetselectionConvert: '_object * 'word32_word * 'word32_word * int -> bool
        val WidgetselectionClearTargets: '_object * 'word32_word -> unit
        val WidgetselectionAddTargets: '_object * 'word32_word * '_object * int -> unit
        val WidgetselectionAddTarget: '_object * 'word32_word * 'word32_word * int -> unit
        val WidgetselectionOwnerSet: '_object * 'word32_word * int -> bool
        val WidgetrcGetStyle: '_object -> '_object
        val WidgetmenuGetForAttachWidget: '_object -> '_object list
        val WidgetpropagateEvent: '_object * '_object -> unit
        val WidgetgrabRemove: '_object -> unit
        val WidgetgrabAdd: '_object -> unit
        val WidgetdragSourceAddTextTargets: '_object -> unit
        val WidgetdragDestAddUriTargets: '_object -> unit
        val WidgetdragDestAddImageTargets: '_object -> unit
        val WidgetdragDestAddTextTargets: '_object -> unit
        val WidgetdragBegin: '_object * '_object * 'gdk_dragaction_t * int * '_object -> '_object
        val WidgetdragSourceSetTargetList: '_object * '_object -> unit
        val WidgetdragSourceGetTargetList: '_object -> '_object
        val WidgetdragSourceSetIconStock: '_object * string -> unit
        val WidgetdragSourceSetIconPixbuf: '_object * '_object -> unit
        val WidgetdragSourceSetIcon: '_object * '_object * '_object * '_object -> unit
        val WidgetdragSourceUnset: '_object -> unit
        val WidgetdragSourceSet: '_object * 'gdk_modifiertype_t * ('_object vector) * 'gdk_dragaction_t -> unit
        val WidgetdragDestSetTargetList: '_object * '_object -> unit
        val WidgetdragDestGetTargetList: '_object -> '_object
        val WidgetdragDestFindTarget: '_object * '_object * '_object -> 'word32_word
        val WidgetdragDestUnset: '_object -> unit
        val WidgetdragDestSetProxy: '_object * '_object * 'gdk_dragprotocol_t * bool -> unit
        val WidgetdragDestSet: '_object * 'gtk_destdefaults_t * ('_object vector) * 'gdk_dragaction_t -> unit
        val WidgetdragUnhighlight: '_object -> unit
        val WidgetdragHighlight: '_object -> unit
        val WidgetdragGetData: '_object * '_object * 'word32_word * int -> unit
        val WidgetdragCheckThreshold: '_object * int * int * int * int -> bool
        val WidgetgetFieldWindow: '_object -> '_object
        val WidgetsetFieldWindow: '_object * '_object -> unit
        val WidgetgetFieldStyle: '_object -> '_object
        val WidgetsetFieldStyle: '_object * '_object -> unit
        val WidgetgetFieldState: '_object -> int
        val WidgetsetFieldState: '_object * int -> unit
        val WidgetgetFieldSavedState: '_object -> int
        val WidgetsetFieldSavedState: '_object * int -> unit
        val WidgetgetFieldParent: '_object -> '_object
        val WidgetsetFieldParent: '_object * '_object -> unit
        val WidgetgetFieldName: '_object -> string
        val WidgetsetFieldName: '_object * string -> unit
        val WidgetgetFieldAllocation: '_object -> '_object
        val WidgetsetFieldAllocation: '_object * '_object -> unit
        val VSeparatornew: unit -> '_object
        val VSeparatorgetType: unit -> '_gtype
        val VScrollbarnew: '_object -> '_object
        val VScrollbargetType: unit -> '_gtype
        val VScalenewWithRange: real * real * real -> '_object
        val VScalenew: '_object -> '_object
        val VScalegetType: unit -> '_gtype
        val VRulernew: unit -> '_object
        val VRulergetType: unit -> '_gtype
        val VPanednew: unit -> '_object
        val VPanedgetType: unit -> '_gtype
        val Viewportnew: '_object * '_object -> '_object
        val ViewportgetShadowType: '_object -> 'gtk_shadowtype_t
        val ViewportsetShadowType: '_object * 'gtk_shadowtype_t -> unit
        val ViewportsetVadjustment: '_object * '_object -> unit
        val ViewportsetHadjustment: '_object * '_object -> unit
        val ViewportgetVadjustment: '_object -> '_object
        val ViewportgetHadjustment: '_object -> '_object
        val ViewportgetType: unit -> '_gtype
        val VButtonBoxnew: unit -> '_object
        val VButtonBoxsetLayoutDefault: 'gtk_buttonboxstyle_t -> unit
        val VButtonBoxgetLayoutDefault: unit -> 'gtk_buttonboxstyle_t
        val VButtonBoxsetSpacingDefault: int -> unit
        val VButtonBoxgetSpacingDefault: unit -> int
        val VButtonBoxgetType: unit -> '_gtype
        val VBoxnew: bool * int -> '_object
        val VBoxgetType: unit -> '_gtype
        val UIManagernew: unit -> '_object
        val UIManagernewMergeId: '_object -> int
        val UIManagerensureUpdate: '_object -> unit
        val UIManagergetUI: '_object -> string
        val UIManagerremoveUI: '_object * int -> unit
        val UIManageraddUI: '_object * int * string * string * string * 'gtk_uimanageritemtype_t * bool -> unit
        val UIManageraddUIFromFile: '_object * string -> int
        val UIManageraddUIFromString: '_object * string * '_object -> int
        val UIManagergetAction: '_object * string -> '_object
        val UIManagergetToplevels: '_object * 'gtk_uimanageritemtype_t -> '_object list
        val UIManagergetWidget: '_object * string -> '_object
        val UIManagergetAccelGroup: '_object -> '_object
        val UIManagergetActionGroups: '_object -> '_object list
        val UIManagerremoveActionGroup: '_object * '_object -> unit
        val UIManagerinsertActionGroup: '_object * '_object * int -> unit
        val UIManagergetAddTearoffs: '_object -> bool
        val UIManagersetAddTearoffs: '_object * bool -> unit
        val UIManagergetType: unit -> '_gtype
        val TreeViewColumnnewWithAttributes: string * '_object -> '_object
        val TreeViewColumnnew: unit -> '_object
        val TreeViewColumncellGetPosition: '_object * '_object * int * int -> int * int
        val TreeViewColumnfocusCell: '_object * '_object -> unit
        val TreeViewColumncellIsVisible: '_object -> bool
        val TreeViewColumncellGetSize: '_object * '_object * int * int * int * int -> int * int * int * int
        val TreeViewColumncellSetCellData: '_object * '_object * '_object * bool * bool -> unit
        val TreeViewColumngetSortOrder: '_object -> 'gtk_sorttype_t
        val TreeViewColumnsetSortOrder: '_object * 'gtk_sorttype_t -> unit
        val TreeViewColumngetSortIndicator: '_object -> bool
        val TreeViewColumnsetSortIndicator: '_object * bool -> unit
        val TreeViewColumngetSortColumnId: '_object -> int
        val TreeViewColumnsetSortColumnId: '_object * int -> unit
        val TreeViewColumngetReorderable: '_object -> bool
        val TreeViewColumnsetReorderable: '_object * bool -> unit
        val TreeViewColumngetAlignment: '_object -> real
        val TreeViewColumnsetAlignment: '_object * real -> unit
        val TreeViewColumngetWidget: '_object -> '_object
        val TreeViewColumnsetWidget: '_object * '_object -> unit
        val TreeViewColumngetClickable: '_object -> bool
        val TreeViewColumnsetClickable: '_object * bool -> unit
        val TreeViewColumngetExpand: '_object -> bool
        val TreeViewColumnsetExpand: '_object * bool -> unit
        val TreeViewColumngetTitle: '_object -> string
        val TreeViewColumnsetTitle: '_object * string -> unit
        val TreeViewColumnclicked: '_object -> unit
        val TreeViewColumngetMaxWidth: '_object -> int
        val TreeViewColumnsetMaxWidth: '_object * int -> unit
        val TreeViewColumngetMinWidth: '_object -> int
        val TreeViewColumnsetMinWidth: '_object * int -> unit
        val TreeViewColumnsetFixedWidth: '_object * int -> unit
        val TreeViewColumngetFixedWidth: '_object -> int
        val TreeViewColumngetWidth: '_object -> int
        val TreeViewColumngetSizing: '_object -> int
        val TreeViewColumnsetSizing: '_object * 'gtk_treeviewcolumnsizing_t -> unit
        val TreeViewColumngetResizable: '_object -> bool
        val TreeViewColumnsetResizable: '_object * bool -> unit
        val TreeViewColumngetVisible: '_object -> bool
        val TreeViewColumnsetVisible: '_object * bool -> unit
        val TreeViewColumngetSpacing: '_object -> int
        val TreeViewColumnsetSpacing: '_object * int -> unit
        val TreeViewColumnclearAttributes: '_object * '_object -> unit
        val TreeViewColumnsetCellDataFunc: '_object * '_object * 'core_object * '_object * '_object -> unit
        val TreeViewColumnsetAttributes: '_object * '_object -> unit
        val TreeViewColumnaddAttribute: '_object * '_object * string * int -> unit
        val TreeViewColumngetCellRenderers: '_object -> '_object list
        val TreeViewColumnclear: '_object -> unit
        val TreeViewColumnpackEnd: '_object * '_object * bool -> unit
        val TreeViewColumnpackStart: '_object * '_object * bool -> unit
        val TreeViewColumngetType: unit -> '_gtype
        val TreeViewnewWithModel: '_object -> '_object
        val TreeViewnew: unit -> '_object
        val TreeViewgetHoverExpand: '_object -> bool
        val TreeViewsetHoverExpand: '_object * bool -> unit
        val TreeViewgetHoverSelection: '_object -> bool
        val TreeViewsetHoverSelection: '_object * bool -> unit
        val TreeViewgetFixedHeightMode: '_object -> bool
        val TreeViewsetFixedHeightMode: '_object * bool -> unit
        val TreeViewsetSearchColumn: '_object * int -> unit
        val TreeViewgetSearchColumn: '_object -> int
        val TreeViewgetEnableSearch: '_object -> bool
        val TreeViewsetEnableSearch: '_object * bool -> unit
        val TreeViewcreateRowDragIcon: '_object * '_object -> '_object
        val TreeViewgetDestRowAtPos: '_object * int * int * 'gtk_treeviewdropposition_t -> bool * '_object * 'gtk_treeviewdropposition_t
        val TreeViewgetDragDestRow: '_object * 'gtk_treeviewdropposition_t -> '_object * 'gtk_treeviewdropposition_t
        val TreeViewsetDragDestRow: '_object * '_object * 'gtk_treeviewdropposition_t -> unit
        val TreeViewunsetRowsDragDest: '_object -> unit
        val TreeViewunsetRowsDragSource: '_object -> unit
        val TreeViewenableModelDragDest: '_object * ('_object vector) * 'gdk_dragaction_t -> unit
        val TreeViewenableModelDragSource: '_object * 'gdk_modifiertype_t * ('_object vector) * 'gdk_dragaction_t -> unit
        val TreeViewtreeToWidgetCoords: '_object * int * int * int * int -> int * int
        val TreeViewwidgetToTreeCoords: '_object * int * int * int * int -> int * int
        val TreeViewgetVisibleRect: '_object * '_object -> unit
        val TreeViewgetBackgroundArea: '_object * '_object * '_object * '_object -> unit
        val TreeViewgetCellArea: '_object * '_object * '_object * '_object -> unit
        val TreeViewgetPathAtPos: '_object * int * int * int * int -> bool * '_object * '_object * int * int
        val TreeViewgetBinWindow: '_object -> '_object
        val TreeViewgetCursor: '_object -> '_object * '_object
        val TreeViewsetCursorOnCell: '_object * '_object * '_object * '_object * bool -> unit
        val TreeViewsetCursor: '_object * '_object * '_object * bool -> unit
        val TreeViewgetReorderable: '_object -> bool
        val TreeViewsetReorderable: '_object * bool -> unit
        val TreeViewrowExpanded: '_object * '_object -> bool
        val TreeViewcollapseRow: '_object * '_object -> unit
        val TreeViewexpandRow: '_object * '_object * bool -> bool
        val TreeViewexpandToPath: '_object * '_object -> unit
        val TreeViewcollapseAll: '_object -> unit
        val TreeViewexpandAll: '_object -> unit
        val TreeViewrowActivated: '_object * '_object * '_object -> unit
        val TreeViewscrollToCell: '_object * '_object * '_object * bool * real * real -> unit
        val TreeViewscrollToPoint: '_object * int * int -> unit
        val TreeViewgetExpanderColumn: '_object -> '_object
        val TreeViewsetExpanderColumn: '_object * '_object -> unit
        val TreeViewmoveColumnAfter: '_object * '_object * '_object -> unit
        val TreeViewgetColumns: '_object -> '_object list
        val TreeViewgetColumn: '_object * int -> '_object
        val TreeViewinsertColumnWithAttributes: '_object * int * string * '_object -> int
        val TreeViewinsertColumn: '_object * '_object * int -> int
        val TreeViewremoveColumn: '_object * '_object -> int
        val TreeViewappendColumn: '_object * '_object -> int
        val TreeViewgetRulesHint: '_object -> bool
        val TreeViewsetRulesHint: '_object * bool -> unit
        val TreeViewsetHeadersClickable: '_object * bool -> unit
        val TreeViewcolumnsAutosize: '_object -> unit
        val TreeViewsetHeadersVisible: '_object * bool -> unit
        val TreeViewgetHeadersVisible: '_object -> bool
        val TreeViewsetVadjustment: '_object * '_object -> unit
        val TreeViewgetVadjustment: '_object -> '_object
        val TreeViewsetHadjustment: '_object * '_object -> unit
        val TreeViewgetHadjustment: '_object -> '_object
        val TreeViewgetSelection: '_object -> '_object
        val TreeViewsetModel: '_object * '_object -> unit
        val TreeViewgetModel: '_object -> '_object
        val TreeViewgetType: unit -> '_gtype
        val TreeStorenewv: ('_gtype vector) -> '_object
        val TreeStoremoveBefore: '_object * '_object * '_object -> unit
        val TreeStoremoveAfter: '_object * '_object * '_object -> unit
        val TreeStoreswap: '_object * '_object * '_object -> unit
        val TreeStorereorder: '_object * '_object * int -> int
        val TreeStoreiterIsValid: '_object * '_object -> bool
        val TreeStoreclear: '_object -> unit
        val TreeStoreiterDepth: '_object * '_object -> int
        val TreeStoreisAncestor: '_object * '_object * '_object -> bool
        val TreeStoreappend: '_object * '_object * '_object -> unit
        val TreeStoreprepend: '_object * '_object * '_object -> unit
        val TreeStoreinsertAfter: '_object * '_object * '_object * '_object -> unit
        val TreeStoreinsertBefore: '_object * '_object * '_object * '_object -> unit
        val TreeStoreinsert: '_object * '_object * '_object * int -> unit
        val TreeStoreremove: '_object * '_object -> bool
        val TreeStoreset: '_object * '_object -> unit
        val TreeStoresetValue: '_object * '_object * int * '_gvalue -> unit
        val TreeStoresetColumnTypes: '_object * ('_gtype vector) -> unit
        val TreeStoregetType: unit -> '_gtype
        val TreeSelectionunselectRange: '_object * '_object * '_object -> unit
        val TreeSelectionselectRange: '_object * '_object * '_object -> unit
        val TreeSelectionunselectAll: '_object -> unit
        val TreeSelectionselectAll: '_object -> unit
        val TreeSelectioniterIsSelected: '_object * '_object -> bool
        val TreeSelectionpathIsSelected: '_object * '_object -> bool
        val TreeSelectionunselectIter: '_object * '_object -> unit
        val TreeSelectionselectIter: '_object * '_object -> unit
        val TreeSelectionunselectPath: '_object * '_object -> unit
        val TreeSelectionselectPath: '_object * '_object -> unit
        val TreeSelectioncountSelectedRows: '_object -> int
        val TreeSelectiongetSelectedRows: '_object -> ('_object list) * '_object
        val TreeSelectiongetSelected: '_object * '_object -> bool * '_object
        val TreeSelectiongetTreeView: '_object -> '_object
        val TreeSelectiongetUserData: '_object -> '_object
        val TreeSelectiongetMode: '_object -> 'gtk_selectionmode_t
        val TreeSelectionsetMode: '_object * 'gtk_selectionmode_t -> unit
        val TreeSelectiongetType: unit -> '_gtype
        val TreeModelSortnewWithModel: '_object -> '_object
        val TreeModelSortiterIsValid: '_object * '_object -> bool
        val TreeModelSortclearCache: '_object -> unit
        val TreeModelSortresetDefaultSortFunc: '_object -> unit
        val TreeModelSortconvertIterToChildIter: '_object * '_object * '_object -> unit
        val TreeModelSortconvertPathToChildPath: '_object * '_object -> '_object
        val TreeModelSortconvertChildIterToIter: '_object * '_object * '_object -> unit
        val TreeModelSortconvertChildPathToPath: '_object * '_object -> '_object
        val TreeModelSortgetModel: '_object -> '_object
        val TreeModelSortgetType: unit -> '_gtype
        val TreeModelFilterclearCache: '_object -> unit
        val TreeModelFilterrefilter: '_object -> unit
        val TreeModelFilterconvertPathToChildPath: '_object * '_object -> '_object
        val TreeModelFilterconvertChildPathToPath: '_object * '_object -> '_object
        val TreeModelFilterconvertIterToChildIter: '_object * '_object * '_object -> unit
        val TreeModelFilterconvertChildIterToIter: '_object * '_object * '_object -> unit
        val TreeModelFiltergetModel: '_object -> '_object
        val TreeModelFiltersetVisibleColumn: '_object * int -> unit
        val TreeModelFiltersetModifyFunc: '_object * int * '_object * 'core_object * '_object * '_object -> unit
        val TreeModelFiltergetType: unit -> '_gtype
        val Tooltipsnew: unit -> '_object
        val TooltipsforceWindow: '_object -> unit
        val TooltipsdataGet: '_object -> '_object
        val TooltipssetTip: '_object * '_object * string * string -> unit
        val Tooltipsdisable: '_object -> unit
        val Tooltipsenable: '_object -> unit
        val TooltipsgetType: unit -> '_gtype
        val TooltipsgetFieldUseStickyDelay: '_object -> int
        val TooltipssetFieldUseStickyDelay: '_object * int -> unit
        val TooltipsgetFieldTipsDataList: '_object -> '_object list
        val TooltipssetFieldTipsDataList: '_object * ('_object list) -> unit
        val TooltipsgetFieldTipWindow: '_object -> '_object
        val TooltipssetFieldTipWindow: '_object * '_object -> unit
        val TooltipsgetFieldTipLabel: '_object -> '_object
        val TooltipssetFieldTipLabel: '_object * '_object -> unit
        val TooltipsgetFieldTimerTag: '_object -> int
        val TooltipssetFieldTimerTag: '_object * int -> unit
        val TooltipsgetFieldEnabled: '_object -> int
        val TooltipssetFieldEnabled: '_object * int -> unit
        val TooltipsgetFieldDelay: '_object -> int
        val TooltipssetFieldDelay: '_object * int -> unit
        val TooltipsgetFieldActiveTipsData: '_object -> '_object
        val TooltipssetFieldActiveTipsData: '_object * '_object -> unit
        val ToolItemnew: unit -> '_object
        val ToolItemrebuildMenu: '_object -> unit
        val ToolItemgetProxyMenuItem: '_object * string -> '_object
        val ToolItemsetProxyMenuItem: '_object * string * '_object -> unit
        val ToolItemretrieveProxyMenuItem: '_object -> '_object
        val ToolItemgetReliefStyle: '_object -> 'gtk_reliefstyle_t
        val ToolItemgetToolbarStyle: '_object -> 'gtk_toolbarstyle_t
        val ToolItemgetOrientation: '_object -> 'gtk_orientation_t
        val ToolItemgetIconSize: '_object -> 'gtk_iconsize_t
        val ToolItemgetIsImportant: '_object -> bool
        val ToolItemsetIsImportant: '_object * bool -> unit
        val ToolItemgetVisibleVertical: '_object -> bool
        val ToolItemsetVisibleVertical: '_object * bool -> unit
        val ToolItemgetVisibleHorizontal: '_object -> bool
        val ToolItemsetVisibleHorizontal: '_object * bool -> unit
        val ToolItemgetUseDragWindow: '_object -> bool
        val ToolItemsetUseDragWindow: '_object * bool -> unit
        val ToolItemsetTooltip: '_object * '_object * string * string -> unit
        val ToolItemgetExpand: '_object -> bool
        val ToolItemsetExpand: '_object * bool -> unit
        val ToolItemgetHomogeneous: '_object -> bool
        val ToolItemsetHomogeneous: '_object * bool -> unit
        val ToolItemgetType: unit -> '_gtype
        val ToolButtonnew: '_object * string -> '_object
        val ToolButtongetLabelWidget: '_object -> '_object
        val ToolButtonsetLabelWidget: '_object * '_object -> unit
        val ToolButtongetIconWidget: '_object -> '_object
        val ToolButtonsetIconWidget: '_object * '_object -> unit
        val ToolButtongetStockId: '_object -> string
        val ToolButtonsetStockId: '_object * string -> unit
        val ToolButtongetUseUnderline: '_object -> bool
        val ToolButtonsetUseUnderline: '_object * bool -> unit
        val ToolButtongetLabel: '_object -> string
        val ToolButtonsetLabel: '_object * string -> unit
        val ToolButtonnewFromStock: string -> '_object
        val ToolButtongetType: unit -> '_gtype
        val Toolbarnew: unit -> '_object
        val ToolbargetTooltips: '_object -> bool
        val ToolbargetIconSize: '_object -> 'gtk_iconsize_t
        val ToolbargetStyle: '_object -> 'gtk_toolbarstyle_t
        val ToolbargetOrientation: '_object -> 'gtk_orientation_t
        val ToolbarunsetStyle: '_object -> unit
        val ToolbarsetTooltips: '_object * bool -> unit
        val ToolbarsetStyle: '_object * 'gtk_toolbarstyle_t -> unit
        val ToolbarsetOrientation: '_object * 'gtk_orientation_t -> unit
        val ToolbargetReliefStyle: '_object -> 'gtk_reliefstyle_t
        val ToolbargetShowArrow: '_object -> bool
        val ToolbarsetShowArrow: '_object * bool -> unit
        val ToolbarsetDropHighlightItem: '_object * '_object * int -> unit
        val ToolbargetDropIndex: '_object * int * int -> int
        val ToolbargetNthItem: '_object * int -> '_object
        val ToolbargetNItems: '_object -> int
        val ToolbargetItemIndex: '_object * '_object -> int
        val Toolbarinsert: '_object * '_object * int -> unit
        val ToolbargetType: unit -> '_gtype
        val ToggleToolButtonnew: unit -> '_object
        val ToggleToolButtongetActive: '_object -> bool
        val ToggleToolButtonsetActive: '_object * bool -> unit
        val ToggleToolButtonnewFromStock: string -> '_object
        val ToggleToolButtongetType: unit -> '_gtype
        val ToggleButtonnewWithMnemonic: string -> '_object
        val ToggleButtonnewWithLabel: string -> '_object
        val ToggleButtonnew: unit -> '_object
        val ToggleButtongetInconsistent: '_object -> bool
        val ToggleButtonsetInconsistent: '_object * bool -> unit
        val ToggleButtontoggled: '_object -> unit
        val ToggleButtongetActive: '_object -> bool
        val ToggleButtonsetActive: '_object * bool -> unit
        val ToggleButtongetMode: '_object -> bool
        val ToggleButtonsetMode: '_object * bool -> unit
        val ToggleButtongetType: unit -> '_gtype
        val ToggleButtongetFieldDrawIndicator: '_object -> bool
        val ToggleButtonsetFieldDrawIndicator: '_object * bool -> unit
        val ToggleActionnew: string * string * string * string -> '_object
        val ToggleActiongetDrawAsRadio: '_object -> bool
        val ToggleActionsetDrawAsRadio: '_object * bool -> unit
        val ToggleActiongetActive: '_object -> bool
        val ToggleActionsetActive: '_object * bool -> unit
        val ToggleActiontoggled: '_object -> unit
        val ToggleActiongetType: unit -> '_gtype
        val TextViewnewWithBuffer: '_object -> '_object
        val TextViewnew: unit -> '_object
        val TextViewgetDefaultAttributes: '_object -> '_object
        val TextViewgetTabs: '_object -> '_object
        val TextViewsetTabs: '_object * '_object -> unit
        val TextViewgetIndent: '_object -> int
        val TextViewsetIndent: '_object * int -> unit
        val TextViewgetRightMargin: '_object -> int
        val TextViewsetRightMargin: '_object * int -> unit
        val TextViewgetLeftMargin: '_object -> int
        val TextViewsetLeftMargin: '_object * int -> unit
        val TextViewgetJustification: '_object -> 'gtk_justification_t
        val TextViewsetJustification: '_object * 'gtk_justification_t -> unit
        val TextViewgetPixelsInsideWrap: '_object -> int
        val TextViewsetPixelsInsideWrap: '_object * int -> unit
        val TextViewgetPixelsBelowLines: '_object -> int
        val TextViewsetPixelsBelowLines: '_object * int -> unit
        val TextViewgetPixelsAboveLines: '_object -> int
        val TextViewsetPixelsAboveLines: '_object * int -> unit
        val TextViewgetAcceptsTab: '_object -> bool
        val TextViewsetAcceptsTab: '_object * bool -> unit
        val TextViewgetOverwrite: '_object -> bool
        val TextViewsetOverwrite: '_object * bool -> unit
        val TextViewgetEditable: '_object -> bool
        val TextViewsetEditable: '_object * bool -> unit
        val TextViewgetWrapMode: '_object -> 'gtk_wrapmode_t
        val TextViewsetWrapMode: '_object * 'gtk_wrapmode_t -> unit
        val TextViewmoveChild: '_object * '_object * int * int -> unit
        val TextViewaddChildInWindow: '_object * '_object * 'gtk_textwindowtype_t * int * int -> unit
        val TextViewaddChildAtAnchor: '_object * '_object * '_object -> unit
        val TextViewmoveVisually: '_object * '_object * int -> bool
        val TextViewstartsDisplayLine: '_object * '_object -> bool
        val TextViewbackwardDisplayLineStart: '_object * '_object -> bool
        val TextViewforwardDisplayLineEnd: '_object * '_object -> bool
        val TextViewbackwardDisplayLine: '_object * '_object -> bool
        val TextViewforwardDisplayLine: '_object * '_object -> bool
        val TextViewgetBorderWindowSize: '_object * 'gtk_textwindowtype_t -> int
        val TextViewsetBorderWindowSize: '_object * 'gtk_textwindowtype_t * int -> unit
        val TextViewgetWindowType: '_object * '_object -> 'gtk_textwindowtype_t
        val TextViewgetWindow: '_object * 'gtk_textwindowtype_t -> '_object
        val TextViewwindowToBufferCoords: '_object * 'gtk_textwindowtype_t * int * int * int * int -> int * int
        val TextViewbufferToWindowCoords: '_object * 'gtk_textwindowtype_t * int * int * int * int -> int * int
        val TextViewgetLineAtY: '_object * '_object * int * int -> int
        val TextViewgetLineYrange: '_object * '_object * int * int -> int * int
        val TextViewgetIterAtPosition: '_object * '_object * int * int * int -> int
        val TextViewgetIterAtLocation: '_object * '_object * int * int -> unit
        val TextViewgetIterLocation: '_object * '_object * '_object -> unit
        val TextViewgetCursorVisible: '_object -> bool
        val TextViewsetCursorVisible: '_object * bool -> unit
        val TextViewgetVisibleRect: '_object * '_object -> unit
        val TextViewplaceCursorOnscreen: '_object -> bool
        val TextViewmoveMarkOnscreen: '_object * '_object -> bool
        val TextViewscrollMarkOnscreen: '_object * '_object -> unit
        val TextViewscrollToMark: '_object * '_object * real * bool * real * real -> unit
        val TextViewscrollToIter: '_object * '_object * real * bool * real * real -> bool
        val TextViewgetBuffer: '_object -> '_object
        val TextViewsetBuffer: '_object * '_object -> unit
        val TextViewgetType: unit -> '_gtype
        val TextTagTablenew: unit -> '_object
        val TextTagTablegetSize: '_object -> int
        val TextTagTableforeach: '_object * '_object * '_object -> unit
        val TextTagTablelookup: '_object * string -> '_object
        val TextTagTableremove: '_object * '_object -> unit
        val TextTagTableadd: '_object * '_object -> unit
        val TextTagTablegetType: unit -> '_gtype
        val TextTagnew: string -> '_object
        val TextTagevent: '_object * '_object * '_object * '_object -> bool
        val TextTagsetPriority: '_object * int -> unit
        val TextTaggetPriority: '_object -> int
        val TextTaggetType: unit -> '_gtype
        val TextMarkgetLeftGravity: '_object -> bool
        val TextMarkgetBuffer: '_object -> '_object
        val TextMarkgetDeleted: '_object -> bool
        val TextMarkgetName: '_object -> string
        val TextMarkgetVisible: '_object -> bool
        val TextMarksetVisible: '_object * bool -> unit
        val TextMarkgetType: unit -> '_gtype
        val TextChildAnchornew: unit -> '_object
        val TextChildAnchorgetDeleted: '_object -> bool
        val TextChildAnchorgetWidgets: '_object -> '_object list
        val TextChildAnchorgetType: unit -> '_gtype
        val TextBuffernew: '_object -> '_object
        val TextBufferconnectSpecialSignals: '_object -> unit
        val TextBufferbackspace: '_object * '_object * bool * bool -> bool
        val TextBufferendUserAction: '_object -> unit
        val TextBufferbeginUserAction: '_object -> unit
        val TextBufferdeleteSelection: '_object * bool * bool -> bool
        val TextBuffergetSelectionBounds: '_object * '_object * '_object -> bool
        val TextBufferpasteClipboard: '_object * '_object * '_object * bool -> unit
        val TextBuffercopyClipboard: '_object * '_object -> unit
        val TextBuffercutClipboard: '_object * '_object * bool -> unit
        val TextBufferremoveSelectionClipboard: '_object * '_object -> unit
        val TextBufferaddSelectionClipboard: '_object * '_object -> unit
        val TextBuffersetModified: '_object * bool -> unit
        val TextBuffergetModified: '_object -> bool
        val TextBuffergetIterAtChildAnchor: '_object * '_object * '_object -> unit
        val TextBuffergetIterAtMark: '_object * '_object * '_object -> unit
        val TextBuffergetBounds: '_object * '_object * '_object -> unit
        val TextBuffergetEndIter: '_object * '_object -> unit
        val TextBuffergetStartIter: '_object * '_object -> unit
        val TextBuffergetIterAtLine: '_object * '_object * int -> unit
        val TextBuffergetIterAtOffset: '_object * '_object * int -> unit
        val TextBuffergetIterAtLineIndex: '_object * '_object * int * int -> unit
        val TextBuffergetIterAtLineOffset: '_object * '_object * int * int -> unit
        val TextBuffercreateTag: '_object * string * string -> '_object
        val TextBufferremoveAllTags: '_object * '_object * '_object -> unit
        val TextBufferremoveTagByName: '_object * string * '_object * '_object -> unit
        val TextBufferapplyTagByName: '_object * string * '_object * '_object -> unit
        val TextBufferremoveTag: '_object * '_object * '_object * '_object -> unit
        val TextBufferapplyTag: '_object * '_object * '_object * '_object -> unit
        val TextBufferselectRange: '_object * '_object * '_object -> unit
        val TextBufferplaceCursor: '_object * '_object -> unit
        val TextBuffergetSelectionBound: '_object -> '_object
        val TextBuffergetInsert: '_object -> '_object
        val TextBufferdeleteMarkByName: '_object * string -> unit
        val TextBuffermoveMarkByName: '_object * string * '_object -> unit
        val TextBuffergetMark: '_object * string -> '_object
        val TextBufferdeleteMark: '_object * '_object -> unit
        val TextBuffermoveMark: '_object * '_object * '_object -> unit
        val TextBuffercreateMark: '_object * string * '_object * bool -> '_object
        val TextBuffercreateChildAnchor: '_object * '_object -> '_object
        val TextBufferinsertChildAnchor: '_object * '_object * '_object -> unit
        val TextBufferinsertPixbuf: '_object * '_object * '_object -> unit
        val TextBuffergetSlice: '_object * '_object * '_object * bool -> string
        val TextBuffergetText: '_object * '_object * '_object * bool -> string
        val TextBufferdeleteInteractive: '_object * '_object * '_object * bool -> bool
        val TextBufferdelete: '_object * '_object * '_object -> unit
        val TextBufferinsertWithTagsByName: '_object * '_object * string * int * string -> unit
        val TextBufferinsertWithTags: '_object * '_object * string * int * '_object -> unit
        val TextBufferinsertRangeInteractive: '_object * '_object * '_object * '_object * bool -> bool
        val TextBufferinsertRange: '_object * '_object * '_object * '_object -> unit
        val TextBufferinsertInteractiveAtCursor: '_object * string * int * bool -> bool
        val TextBufferinsertInteractive: '_object * '_object * string * int * bool -> bool
        val TextBufferinsertAtCursor: '_object * string * int -> unit
        val TextBufferinsert: '_object * '_object * string * int -> unit
        val TextBuffersetText: '_object * string * int -> unit
        val TextBuffergetTagTable: '_object -> '_object
        val TextBuffergetCharCount: '_object -> int
        val TextBuffergetLineCount: '_object -> int
        val TextBuffergetType: unit -> '_gtype
        val TextBuffergetFieldTagTable: '_object -> '_object
        val TextBuffersetFieldTagTable: '_object * '_object -> unit
        val TearoffMenuItemnew: unit -> '_object
        val TearoffMenuItemgetType: unit -> '_gtype
        val Tablenew: int * int * bool -> '_object
        val TablegetHomogeneous: '_object -> bool
        val TablesetHomogeneous: '_object * bool -> unit
        val TablegetDefaultColSpacing: '_object -> int
        val TablesetColSpacings: '_object * int -> unit
        val TablegetDefaultRowSpacing: '_object -> int
        val TablesetRowSpacings: '_object * int -> unit
        val TablegetColSpacing: '_object * int -> int
        val TablesetColSpacing: '_object * int * int -> unit
        val TablegetRowSpacing: '_object * int -> int
        val TablesetRowSpacing: '_object * int * int -> unit
        val TableattachDefaults: '_object * '_object * int * int * int * int -> unit
        val Tableattach: '_object * '_object * int * int * int * int * 'gtk_attachoptions_t * 'gtk_attachoptions_t * int * int -> unit
        val Tableresize: '_object * int * int -> unit
        val TablegetType: unit -> '_gtype
        val Stylenew: unit -> '_object
        val StylepaintResizeGrip: '_object * '_object * 'gtk_statetype_t * '_object * '_object * string * 'gdk_windowedge_t * int * int * int * int -> unit
        val StylepaintLayout: '_object * '_object * 'gtk_statetype_t * bool * '_object * '_object * string * int * int * '_object -> unit
        val StylepaintExpander: '_object * '_object * 'gtk_statetype_t * '_object * '_object * string * int * int * 'gtk_expanderstyle_t -> unit
        val StylepaintHandle: '_object * '_object * 'gtk_statetype_t * 'gtk_shadowtype_t * '_object * '_object * string * int * int * int * int * 'gtk_orientation_t -> unit
        val StylepaintSlider: '_object * '_object * 'gtk_statetype_t * 'gtk_shadowtype_t * '_object * '_object * string * int * int * int * int * 'gtk_orientation_t -> unit
        val StylepaintFocus: '_object * '_object * 'gtk_statetype_t * '_object * '_object * string * int * int * int * int -> unit
        val StylepaintExtension: '_object * '_object * 'gtk_statetype_t * 'gtk_shadowtype_t * '_object * '_object * string * int * int * int * int * 'gtk_positiontype_t -> unit
        val StylepaintBoxGap: '_object * '_object * 'gtk_statetype_t * 'gtk_shadowtype_t * '_object * '_object * string * int * int * int * int * 'gtk_positiontype_t * int * int -> unit
        val StylepaintShadowGap: '_object * '_object * 'gtk_statetype_t * 'gtk_shadowtype_t * '_object * '_object * string * int * int * int * int * 'gtk_positiontype_t * int * int -> unit
        val StylepaintTab: '_object * '_object * 'gtk_statetype_t * 'gtk_shadowtype_t * '_object * '_object * string * int * int * int * int -> unit
        val StylepaintOption: '_object * '_object * 'gtk_statetype_t * 'gtk_shadowtype_t * '_object * '_object * string * int * int * int * int -> unit
        val StylepaintCheck: '_object * '_object * 'gtk_statetype_t * 'gtk_shadowtype_t * '_object * '_object * string * int * int * int * int -> unit
        val StylepaintFlatBox: '_object * '_object * 'gtk_statetype_t * 'gtk_shadowtype_t * '_object * '_object * string * int * int * int * int -> unit
        val StylepaintBox: '_object * '_object * 'gtk_statetype_t * 'gtk_shadowtype_t * '_object * '_object * string * int * int * int * int -> unit
        val StylepaintDiamond: '_object * '_object * 'gtk_statetype_t * 'gtk_shadowtype_t * '_object * '_object * string * int * int * int * int -> unit
        val StylepaintArrow: '_object * '_object * 'gtk_statetype_t * 'gtk_shadowtype_t * '_object * '_object * string * 'gtk_arrowtype_t * bool * int * int * int * int -> unit
        val StylepaintPolygon: '_object * '_object * 'gtk_statetype_t * 'gtk_shadowtype_t * '_object * '_object * string * '_object * int * bool -> unit
        val StylepaintShadow: '_object * '_object * 'gtk_statetype_t * 'gtk_shadowtype_t * '_object * '_object * string * int * int * int * int -> unit
        val StylepaintVLine: '_object * '_object * 'gtk_statetype_t * '_object * '_object * string * int * int * int -> unit
        val StylepaintHLine: '_object * '_object * 'gtk_statetype_t * '_object * '_object * string * int * int * int -> unit
        val StyledrawCheck: '_object * '_object * 'gtk_statetype_t * 'gtk_shadowtype_t * int * int * int * int -> unit
        val StylerenderIcon: '_object * '_object * 'gtk_textdirection_t * 'gtk_statetype_t * 'gtk_iconsize_t * '_object * string -> '_object
        val StylelookupIconSet: '_object * string -> '_object
        val StyleapplyDefaultBackground: '_object * '_object * bool * 'gtk_statetype_t * '_object * int * int * int * int -> unit
        val StylesetBackground: '_object * '_object * 'gtk_statetype_t -> unit
        val Styledetach: '_object -> unit
        val Styleattach: '_object * '_object -> '_object
        val Stylecopy: '_object -> '_object
        val StylegetType: unit -> '_gtype
        val Statusbarnew: unit -> '_object
        val StatusbargetHasResizeGrip: '_object -> bool
        val StatusbarsetHasResizeGrip: '_object * bool -> unit
        val Statusbarremove: '_object * int * int -> unit
        val Statusbarpop: '_object * int -> unit
        val Statusbarpush: '_object * int * string -> int
        val StatusbargetContextId: '_object * string -> int
        val StatusbargetType: unit -> '_gtype
        val SpinButtonnewWithRange: real * real * real -> '_object
        val SpinButtonnew: '_object * real * int -> '_object
        val SpinButtonupdate: '_object -> unit
        val SpinButtongetSnapToTicks: '_object -> bool
        val SpinButtonsetSnapToTicks: '_object * bool -> unit
        val SpinButtongetWrap: '_object -> bool
        val SpinButtonsetWrap: '_object * bool -> unit
        val SpinButtonspin: '_object * 'gtk_spintype_t * real -> unit
        val SpinButtongetNumeric: '_object -> bool
        val SpinButtonsetNumeric: '_object * bool -> unit
        val SpinButtongetUpdatePolicy: '_object -> int
        val SpinButtonsetUpdatePolicy: '_object * 'gtk_spinbuttonupdatepolicy_t -> unit
        val SpinButtonsetValue: '_object * real -> unit
        val SpinButtongetValueAsInt: '_object -> int
        val SpinButtongetValue: '_object -> real
        val SpinButtongetRange: '_object * real * real -> real * real
        val SpinButtonsetRange: '_object * real * real -> unit
        val SpinButtongetIncrements: '_object * real * real -> real * real
        val SpinButtonsetIncrements: '_object * real * real -> unit
        val SpinButtongetDigits: '_object -> int
        val SpinButtonsetDigits: '_object * int -> unit
        val SpinButtongetAdjustment: '_object -> '_object
        val SpinButtonsetAdjustment: '_object * '_object -> unit
        val SpinButtonconfigure: '_object * '_object * real * int -> unit
        val SpinButtongetType: unit -> '_gtype
        val SizeGroupnew: 'gtk_sizegroupmode_t -> '_object
        val SizeGroupremoveWidget: '_object * '_object -> unit
        val SizeGroupaddWidget: '_object * '_object -> unit
        val SizeGroupgetMode: '_object -> 'gtk_sizegroupmode_t
        val SizeGroupsetMode: '_object * 'gtk_sizegroupmode_t -> unit
        val SizeGroupgetType: unit -> '_gtype
        val SettingssetDoubleProperty: '_object * string * real * string -> unit
        val SettingssetLongProperty: '_object * string * int * string -> unit
        val SettingssetStringProperty: '_object * string * string * string -> unit
        val SettingssetPropertyValue: '_object * string * '_object -> unit
        val SettingsinstallPropertyParser: '_object * '_object -> unit
        val SettingsinstallProperty: '_object -> unit
        val SettingsgetForScreen: '_object -> '_object
        val SettingsgetDefault: unit -> '_object
        val SettingsgetType: unit -> '_gtype
        val SeparatorToolItemnew: unit -> '_object
        val SeparatorToolItemsetDraw: '_object * bool -> unit
        val SeparatorToolItemgetDraw: '_object -> bool
        val SeparatorToolItemgetType: unit -> '_gtype
        val SeparatorMenuItemnew: unit -> '_object
        val SeparatorMenuItemgetType: unit -> '_gtype
        val SeparatorgetType: unit -> '_gtype
        val ScrolledWindownew: '_object * '_object -> '_object
        val ScrolledWindowaddWithViewport: '_object * '_object -> unit
        val ScrolledWindowgetShadowType: '_object -> 'gtk_shadowtype_t
        val ScrolledWindowsetShadowType: '_object * 'gtk_shadowtype_t -> unit
        val ScrolledWindowgetPlacement: '_object -> 'gtk_cornertype_t
        val ScrolledWindowsetPlacement: '_object * 'gtk_cornertype_t -> unit
        val ScrolledWindowgetPolicy: '_object * 'gtk_policytype_t * 'gtk_policytype_t -> 'gtk_policytype_t * 'gtk_policytype_t
        val ScrolledWindowsetPolicy: '_object * 'gtk_policytype_t * 'gtk_policytype_t -> unit
        val ScrolledWindowgetVadjustment: '_object -> '_object
        val ScrolledWindowgetHadjustment: '_object -> '_object
        val ScrolledWindowsetVadjustment: '_object * '_object -> unit
        val ScrolledWindowsetHadjustment: '_object * '_object -> unit
        val ScrolledWindowgetType: unit -> '_gtype
        val ScrollbargetType: unit -> '_gtype
        val ScalegetLayoutOffsets: '_object * int * int -> int * int
        val ScalegetLayout: '_object -> '_object
        val ScalegetValuePos: '_object -> 'gtk_positiontype_t
        val ScalesetValuePos: '_object * 'gtk_positiontype_t -> unit
        val ScalegetDrawValue: '_object -> bool
        val ScalesetDrawValue: '_object * bool -> unit
        val ScalegetDigits: '_object -> int
        val ScalesetDigits: '_object * int -> unit
        val ScalegetType: unit -> '_gtype
        val RulergetRange: '_object * real * real * real * real -> real * real * real * real
        val RulergetMetric: '_object -> 'gtk_metrictype_t
        val RulerdrawPos: '_object -> unit
        val RulerdrawTicks: '_object -> unit
        val RulersetRange: '_object * real * real * real * real -> unit
        val RulersetMetric: '_object * 'gtk_metrictype_t -> unit
        val RulergetType: unit -> '_gtype
        val RcStyleunref: '_object -> unit
        val RcStylereference: '_object -> unit
        val RcStylecopy: '_object -> '_object
        val RcStylegetType: unit -> '_gtype
        val RangegetValue: '_object -> real
        val RangesetValue: '_object * real -> unit
        val RangesetRange: '_object * real * real -> unit
        val RangesetIncrements: '_object * real * real -> unit
        val RangegetInverted: '_object -> bool
        val RangesetInverted: '_object * bool -> unit
        val RangegetAdjustment: '_object -> '_object
        val RangesetAdjustment: '_object * '_object -> unit
        val RangegetUpdatePolicy: '_object -> 'gtk_updatetype_t
        val RangesetUpdatePolicy: '_object * 'gtk_updatetype_t -> unit
        val RangegetType: unit -> '_gtype
        val RadioToolButtonnewWithStockFromWidget: '_object * string -> '_object
        val RadioToolButtonnewFromWidget: '_object -> '_object
        val RadioToolButtongetGroup: '_object -> '_object list
        val RadioToolButtonsetGroup: '_object * ('_object list) -> unit
        val RadioToolButtongetType: unit -> '_gtype
        val RadioMenuItemnewWithMnemonic: ('_object list) * string -> '_object
        val RadioMenuItemnewWithLabel: ('_object list) * string -> '_object
        val RadioMenuItemnew: ('_object list) -> '_object
        val RadioMenuItemsetGroup: '_object * ('_object list) -> unit
        val RadioMenuItemgetGroup: '_object -> '_object list
        val RadioMenuItemnewWithLabelFromWidget: '_object * string -> '_object
        val RadioMenuItemnewWithMnemonicFromWidget: '_object * string -> '_object
        val RadioMenuItemnewFromWidget: '_object -> '_object
        val RadioMenuItemgetType: unit -> '_gtype
        val RadioButtonnewWithMnemonicFromWidget: '_object * string -> '_object
        val RadioButtonnewWithMnemonic: ('_object list) * string -> '_object
        val RadioButtonnewWithLabelFromWidget: '_object * string -> '_object
        val RadioButtonnewWithLabel: ('_object list) * string -> '_object
        val RadioButtonnewFromWidget: '_object -> '_object
        val RadioButtonnew: ('_object list) -> '_object
        val RadioButtonsetGroup: '_object * ('_object list) -> unit
        val RadioButtongetGroup: '_object -> '_object list
        val RadioButtongetType: unit -> '_gtype
        val ProgressBarnew: unit -> '_object
        val ProgressBargetEllipsize: '_object -> 'pango_ellipsizemode_t
        val ProgressBarsetEllipsize: '_object * 'pango_ellipsizemode_t -> unit
        val ProgressBargetOrientation: '_object -> 'gtk_progressbarorientation_t
        val ProgressBargetPulseStep: '_object -> real
        val ProgressBargetFraction: '_object -> real
        val ProgressBargetText: '_object -> string
        val ProgressBarsetOrientation: '_object * 'gtk_progressbarorientation_t -> unit
        val ProgressBarsetPulseStep: '_object * real -> unit
        val ProgressBarsetFraction: '_object * real -> unit
        val ProgressBarsetText: '_object * string -> unit
        val ProgressBarpulse: '_object -> unit
        val ProgressBargetType: unit -> '_gtype
        val ProgressgetType: unit -> '_gtype
        val PreviewsetExpand: '_object * bool -> unit
        val PreviewdrawRow: '_object * string * int * int * int -> unit
        val Previewput: '_object * '_object * '_object * int * int * int * int * int * int -> unit
        val Previewsize: '_object * int * int -> unit
        val PreviewgetType: unit -> '_gtype
        val PanedcomputePosition: '_object * int * int * int -> unit
        val PanedgetChild2: '_object -> '_object
        val PanedgetChild1: '_object -> '_object
        val PanedsetPosition: '_object * int -> unit
        val PanedgetPosition: '_object -> int
        val Panedpack2: '_object * '_object * bool * bool -> unit
        val Panedpack1: '_object * '_object * bool * bool -> unit
        val Panedadd2: '_object * '_object -> unit
        val Panedadd1: '_object * '_object -> unit
        val PanedgetType: unit -> '_gtype
        val OptionMenusetHistory: '_object * int -> unit
        val OptionMenugetHistory: '_object -> int
        val OptionMenuremoveMenu: '_object -> unit
        val OptionMenusetMenu: '_object * '_object -> unit
        val OptionMenugetMenu: '_object -> '_object
        val OptionMenugetType: unit -> '_gtype
        val OldEditablechanged: '_object -> unit
        val OldEditableclaimSelection: '_object * bool * int -> unit
        val OldEditablegetType: unit -> '_gtype
        val Objectdestroy: '_object -> unit
        val Objectsink: '_object -> unit
        val Objectnew: '_gtype * string -> '_object
        val ObjectgetType: unit -> '_gtype
        val Notebooknew: unit -> '_object
        val NotebookreorderChild: '_object * '_object * int -> unit
        val NotebooksetTabLabelPacking: '_object * '_object * bool * bool * 'gtk_packtype_t -> unit
        val NotebookqueryTabLabelPacking: '_object * '_object * '_object * '_object * 'gtk_packtype_t -> 'gtk_packtype_t
        val NotebookgetMenuLabelText: '_object * '_object -> string
        val NotebooksetMenuLabelText: '_object * '_object * string -> unit
        val NotebooksetMenuLabel: '_object * '_object * '_object -> unit
        val NotebookgetMenuLabel: '_object * '_object -> '_object
        val NotebookgetTabLabelText: '_object * '_object -> string
        val NotebooksetTabLabelText: '_object * '_object * string -> unit
        val NotebooksetTabLabel: '_object * '_object * '_object -> unit
        val NotebookgetTabLabel: '_object * '_object -> '_object
        val NotebookpopupDisable: '_object -> unit
        val NotebookpopupEnable: '_object -> unit
        val NotebookgetScrollable: '_object -> bool
        val NotebooksetScrollable: '_object * bool -> unit
        val NotebookgetTabPos: '_object -> 'gtk_positiontype_t
        val NotebooksetTabPos: '_object * 'gtk_positiontype_t -> unit
        val NotebookgetShowTabs: '_object -> bool
        val NotebooksetShowTabs: '_object * bool -> unit
        val NotebookgetShowBorder: '_object -> bool
        val NotebooksetShowBorder: '_object * bool -> unit
        val NotebookprevPage: '_object -> unit
        val NotebooknextPage: '_object -> unit
        val NotebooksetCurrentPage: '_object * int -> unit
        val NotebookpageNum: '_object * '_object -> int
        val NotebookgetNPages: '_object -> int
        val NotebookgetNthPage: '_object * int -> '_object
        val NotebookgetCurrentPage: '_object -> int
        val NotebookremovePage: '_object * int -> unit
        val NotebookinsertPageMenu: '_object * '_object * '_object * '_object * int -> int
        val NotebookinsertPage: '_object * '_object * '_object * int -> int
        val NotebookprependPageMenu: '_object * '_object * '_object * '_object -> int
        val NotebookprependPage: '_object * '_object * '_object -> int
        val NotebookappendPageMenu: '_object * '_object * '_object * '_object -> int
        val NotebookappendPage: '_object * '_object * '_object -> int
        val NotebookgetType: unit -> '_gtype
        val NotebookgetFieldTabPos: '_object -> 'gtk_positiontype_t
        val NotebooksetFieldTabPos: '_object * 'gtk_positiontype_t -> unit
        val MiscgetPadding: '_object * int * int -> int * int
        val MiscsetPadding: '_object * int * int -> unit
        val MiscgetAlignment: '_object * real * real -> real * real
        val MiscsetAlignment: '_object * real * real -> unit
        val MiscgetType: unit -> '_gtype
        val MessageDialognewWithMarkup: '_object * 'gtk_dialogflags_t * 'gtk_messagetype_t * 'gtk_buttonstype_t * string -> '_object
        val MessageDialognew: '_object * 'gtk_dialogflags_t * 'gtk_messagetype_t * 'gtk_buttonstype_t * string -> '_object
        val MessageDialogformatSecondaryMarkup: '_object * string -> unit
        val MessageDialogformatSecondaryText: '_object * string -> unit
        val MessageDialogsetMarkup: '_object * string -> unit
        val MessageDialoggetType: unit -> '_gtype
        val MessageDialoggetFieldLabel: '_object -> '_object
        val MessageDialogsetFieldLabel: '_object * '_object -> unit
        val MessageDialoggetFieldImage: '_object -> '_object
        val MessageDialogsetFieldImage: '_object * '_object -> unit
        val MenuToolButtonnew: '_object * string -> '_object
        val MenuToolButtonsetArrowTooltip: '_object * '_object * string * string -> unit
        val MenuToolButtongetMenu: '_object -> '_object
        val MenuToolButtonsetMenu: '_object * '_object -> unit
        val MenuToolButtonnewFromStock: string -> '_object
        val MenuToolButtongetType: unit -> '_gtype
        val MenuShellcancel: '_object -> unit
        val MenuShellselectFirst: '_object * bool -> unit
        val MenuShellactivateItem: '_object * '_object * bool -> unit
        val MenuShelldeselect: '_object -> unit
        val MenuShellselectItem: '_object * '_object -> unit
        val MenuShelldeactivate: '_object -> unit
        val MenuShellinsert: '_object * '_object * int -> unit
        val MenuShellprepend: '_object * '_object -> unit
        val MenuShellappend: '_object * '_object -> unit
        val MenuShellgetType: unit -> '_gtype
        val MenuItemnewWithMnemonic: string -> '_object
        val MenuItemnewWithLabel: string -> '_object
        val MenuItemnew: unit -> '_object
        val MenuItemsetAccelPath: '_object * string -> unit
        val MenuItemgetRightJustified: '_object -> bool
        val MenuItemsetRightJustified: '_object * bool -> unit
        val MenuItemtoggleSizeAllocate: '_object * int -> unit
        val MenuItemtoggleSizeRequest: '_object * int -> int
        val MenuItemactivate: '_object -> unit
        val MenuItemdeselect: '_object -> unit
        val MenuItemselect: '_object -> unit
        val MenuItemremoveSubmenu: '_object -> unit
        val MenuItemgetSubmenu: '_object -> '_object
        val MenuItemsetSubmenu: '_object * '_object -> unit
        val MenuItemgetType: unit -> '_gtype
        val MenuBarnew: unit -> '_object
        val MenuBargetType: unit -> '_gtype
        val Menunew: unit -> '_object
        val MenusetMonitor: '_object * int -> unit
        val Menuattach: '_object * '_object * int * int * int * int -> unit
        val MenusetScreen: '_object * '_object -> unit
        val MenureorderChild: '_object * '_object * int -> unit
        val MenugetTitle: '_object -> string
        val MenusetTitle: '_object * string -> unit
        val MenugetTearoffState: '_object -> bool
        val MenusetTearoffState: '_object * bool -> unit
        val MenugetAttachWidget: '_object -> '_object
        val Menudetach: '_object -> unit
        val MenuattachToWidget: '_object * '_object * 'core_object -> unit
        val MenusetAccelPath: '_object * string -> unit
        val MenugetAccelGroup: '_object -> '_object
        val MenusetAccelGroup: '_object * '_object -> unit
        val MenusetActive: '_object * int -> unit
        val MenugetActive: '_object -> '_object
        val Menupopdown: '_object -> unit
        val Menureposition: '_object -> unit
        val Menupopup: '_object * '_object * '_object * 'core_object * '_object * int * int -> unit
        val MenugetType: unit -> '_gtype
        val ListStorenewv: ('_gtype vector) -> '_object
        val ListStoremoveBefore: '_object * '_object * '_object -> unit
        val ListStoremoveAfter: '_object * '_object * '_object -> unit
        val ListStoreswap: '_object * '_object * '_object -> unit
        val ListStorereorder: '_object * int -> int
        val ListStoreiterIsValid: '_object * '_object -> bool
        val ListStoreclear: '_object -> unit
        val ListStoreappend: '_object * '_object -> unit
        val ListStoreprepend: '_object * '_object -> unit
        val ListStoreinsertWithValuesv: '_object * '_object * int * int * ('_gvalue vector) -> int
        val ListStoreinsertWithValues: '_object * '_object * int -> unit
        val ListStoreinsertAfter: '_object * '_object * '_object -> unit
        val ListStoreinsertBefore: '_object * '_object * '_object -> unit
        val ListStoreinsert: '_object * '_object * int -> unit
        val ListStoreremove: '_object * '_object -> bool
        val ListStoreset: '_object * '_object -> unit
        val ListStoresetValue: '_object * '_object * int * '_gvalue -> unit
        val ListStoresetColumnTypes: '_object * ('_gtype vector) -> unit
        val ListStoregetType: unit -> '_gtype
        val Layoutnew: '_object * '_object -> '_object
        val Layoutthaw: '_object -> unit
        val Layoutfreeze: '_object -> unit
        val LayoutsetVadjustment: '_object * '_object -> unit
        val LayoutsetHadjustment: '_object * '_object -> unit
        val LayoutgetVadjustment: '_object -> '_object
        val LayoutgetHadjustment: '_object -> '_object
        val LayoutgetSize: '_object * int * int -> int * int
        val LayoutsetSize: '_object * int * int -> unit
        val Layoutmove: '_object * '_object * int * int -> unit
        val Layoutput: '_object * '_object * int * int -> unit
        val LayoutgetType: unit -> '_gtype
        val LayoutgetFieldBinWindow: '_object -> '_object
        val LayoutsetFieldBinWindow: '_object * '_object -> unit
        val LabelnewWithMnemonic: string -> '_object
        val Labelnew: string -> '_object
        val LabelgetSingleLineMode: '_object -> bool
        val LabelsetSingleLineMode: '_object * bool -> unit
        val LabelgetMaxWidthChars: '_object -> int
        val LabelsetMaxWidthChars: '_object * int -> unit
        val LabelgetWidthChars: '_object -> int
        val LabelsetWidthChars: '_object * int -> unit
        val LabelgetAngle: '_object -> int
        val LabelsetAngle: '_object * int -> unit
        val LabelgetEllipsize: '_object -> 'pango_ellipsizemode_t
        val LabelsetEllipsize: '_object * 'pango_ellipsizemode_t -> unit
        val LabelgetLayoutOffsets: '_object * int * int -> int * int
        val LabelgetLayout: '_object -> '_object
        val LabelgetSelectionBounds: '_object * int * int -> bool * int * int
        val LabelselectRegion: '_object * int * int -> unit
        val LabelgetSelectable: '_object -> bool
        val LabelsetSelectable: '_object * bool -> unit
        val LabelgetLineWrap: '_object -> bool
        val LabelsetLineWrap: '_object * bool -> unit
        val LabelsetPattern: '_object * string -> unit
        val LabelgetJustify: '_object -> 'gtk_justification_t
        val LabelsetJustify: '_object * 'gtk_justification_t -> unit
        val LabelsetTextWithMnemonic: '_object * string -> unit
        val LabelgetMnemonicWidget: '_object -> '_object
        val LabelsetMnemonicWidget: '_object * '_object -> unit
        val LabelgetMnemonicKeyval: '_object -> int
        val LabelsetMarkupWithMnemonic: '_object * string -> unit
        val LabelgetUseUnderline: '_object -> bool
        val LabelsetUseUnderline: '_object * bool -> unit
        val LabelgetUseMarkup: '_object -> bool
        val LabelsetUseMarkup: '_object * bool -> unit
        val LabelsetMarkup: '_object * string -> unit
        val LabelgetLabel: '_object -> string
        val LabelsetLabel: '_object * string -> unit
        val LabelgetAttributes: '_object -> '_object
        val LabelsetAttributes: '_object * '_object -> unit
        val LabelgetText: '_object -> string
        val LabelsetText: '_object * string -> unit
        val LabelgetType: unit -> '_gtype
        val Itemtoggle: '_object -> unit
        val Itemdeselect: '_object -> unit
        val Itemselect: '_object -> unit
        val ItemgetType: unit -> '_gtype
        val InvisiblenewForScreen: '_object -> '_object
        val Invisiblenew: unit -> '_object
        val InvisiblegetScreen: '_object -> '_object
        val InvisiblesetScreen: '_object * '_object -> unit
        val InvisiblegetType: unit -> '_gtype
        val InputDialognew: unit -> '_object
        val InputDialoggetType: unit -> '_gtype
        val IMMulticontextnew: unit -> '_object
        val IMMulticontextappendMenuitems: '_object * '_object -> unit
        val IMMulticontextgetType: unit -> '_gtype
        val IMContextSimplenew: unit -> '_object
        val IMContextSimpleaddTable: '_object * '_object * int * int -> unit
        val IMContextSimplegetType: unit -> '_gtype
        val IMContextdeleteSurrounding: '_object * int * int -> bool
        val IMContextgetSurrounding: '_object * (string vector) * int -> bool * int
        val IMContextsetSurrounding: '_object * string * int * int -> unit
        val IMContextsetUsePreedit: '_object * bool -> unit
        val IMContextsetCursorLocation: '_object * '_object -> unit
        val IMContextreset: '_object -> unit
        val IMContextfocusOut: '_object -> unit
        val IMContextfocusIn: '_object -> unit
        val IMContextfilterKeypress: '_object * '_object -> bool
        val IMContextgetPreeditString: '_object * (string vector) * '_object * int -> int
        val IMContextsetClientWindow: '_object * '_object -> unit
        val IMContextgetType: unit -> '_gtype
        val ImageMenuItemnewFromStock: string * '_object -> '_object
        val ImageMenuItemnewWithMnemonic: string -> '_object
        val ImageMenuItemnewWithLabel: string -> '_object
        val ImageMenuItemnew: unit -> '_object
        val ImageMenuItemgetImage: '_object -> '_object
        val ImageMenuItemsetImage: '_object * '_object -> unit
        val ImageMenuItemgetType: unit -> '_gtype
        val ImagenewFromStock: string * 'gtk_iconsize_t -> '_object
        val ImagenewFromPixbuf: '_object -> '_object
        val ImagenewFromFile: string -> '_object
        val ImagenewFromImage: '_object * '_object -> '_object
        val ImagenewFromPixmap: '_object * '_object -> '_object
        val Imagenew: unit -> '_object
        val ImagegetPixelSize: '_object -> int
        val ImagegetIconName: '_object * (string vector) * 'gtk_iconsize_t -> 'gtk_iconsize_t
        val ImagesetPixelSize: '_object * int -> unit
        val ImagesetFromIconName: '_object * string * 'gtk_iconsize_t -> unit
        val ImagenewFromIconName: string * 'gtk_iconsize_t -> '_object
        val ImagegetAnimation: '_object -> '_object
        val ImagegetIconSet: '_object * 'gtk_iconsize_t -> '_object * 'gtk_iconsize_t
        val ImagegetStock: '_object * (string vector) * 'gtk_iconsize_t -> 'gtk_iconsize_t
        val ImagegetPixbuf: '_object -> '_object
        val ImagegetImage: '_object -> '_object * '_object
        val ImagegetPixmap: '_object -> '_object * '_object
        val ImagegetStorageType: '_object -> 'gtk_imagetype_t
        val ImagesetFromAnimation: '_object * '_object -> unit
        val ImagesetFromIconSet: '_object * '_object * 'gtk_iconsize_t -> unit
        val ImagesetFromStock: '_object * string * 'gtk_iconsize_t -> unit
        val ImagesetFromPixbuf: '_object * '_object -> unit
        val ImagesetFromFile: '_object * string -> unit
        val ImagesetFromImage: '_object * '_object * '_object -> unit
        val ImagesetFromPixmap: '_object * '_object * '_object -> unit
        val ImagenewFromAnimation: '_object -> '_object
        val ImagenewFromIconSet: '_object * 'gtk_iconsize_t -> '_object
        val ImagegetType: unit -> '_gtype
        val IconViewnew: unit -> '_object
        val IconViewitemActivated: '_object * '_object -> unit
        val IconViewunselectAll: '_object -> unit
        val IconViewselectAll: '_object -> unit
        val IconViewgetSelectedItems: '_object -> '_object list
        val IconViewpathIsSelected: '_object * '_object -> bool
        val IconViewunselectPath: '_object * '_object -> unit
        val IconViewselectPath: '_object * '_object -> unit
        val IconViewgetSelectionMode: '_object -> 'gtk_selectionmode_t
        val IconViewsetSelectionMode: '_object * 'gtk_selectionmode_t -> unit
        val IconViewgetPathAtPos: '_object * int * int -> '_object
        val IconViewgetMargin: '_object -> int
        val IconViewsetMargin: '_object * int -> unit
        val IconViewgetColumnSpacing: '_object -> int
        val IconViewsetColumnSpacing: '_object * int -> unit
        val IconViewgetRowSpacing: '_object -> int
        val IconViewsetRowSpacing: '_object * int -> unit
        val IconViewgetSpacing: '_object -> int
        val IconViewsetSpacing: '_object * int -> unit
        val IconViewgetItemWidth: '_object -> int
        val IconViewsetItemWidth: '_object * int -> unit
        val IconViewgetColumns: '_object -> int
        val IconViewsetColumns: '_object * int -> unit
        val IconViewgetOrientation: '_object -> 'gtk_orientation_t
        val IconViewsetOrientation: '_object * 'gtk_orientation_t -> unit
        val IconViewgetPixbufColumn: '_object -> int
        val IconViewsetPixbufColumn: '_object * int -> unit
        val IconViewgetMarkupColumn: '_object -> int
        val IconViewsetMarkupColumn: '_object * int -> unit
        val IconViewgetTextColumn: '_object -> int
        val IconViewsetTextColumn: '_object * int -> unit
        val IconViewgetModel: '_object -> '_object
        val IconViewsetModel: '_object * '_object -> unit
        val IconViewnewWithModel: '_object -> '_object
        val IconViewgetType: unit -> '_gtype
        val IconThemenew: unit -> '_object
        val IconThemeaddBuiltinIcon: string * int * '_object -> unit
        val IconThemerescanIfNeeded: '_object -> bool
        val IconThemegetExampleIconName: '_object -> string
        val IconThemelistIcons: '_object * string -> '_object list
        val IconThemeloadIcon: '_object * string * int * 'gtk_iconlookupflags_t -> '_object
        val IconThemelookupIcon: '_object * string * int * 'gtk_iconlookupflags_t -> '_object
        val IconThemehasIcon: '_object * string -> bool
        val IconThemesetCustomTheme: '_object * string -> unit
        val IconThemeprependSearchPath: '_object * string -> unit
        val IconThemeappendSearchPath: '_object * string -> unit
        val IconThemesetScreen: '_object * '_object -> unit
        val IconThemegetForScreen: '_object -> '_object
        val IconThemegetDefault: unit -> '_object
        val IconThemegetType: unit -> '_gtype
        val IconFactorynew: unit -> '_object
        val IconFactorylookupDefault: string -> '_object
        val IconFactoryremoveDefault: '_object -> unit
        val IconFactoryaddDefault: '_object -> unit
        val IconFactorylookup: '_object * string -> '_object
        val IconFactoryadd: '_object * string * '_object -> unit
        val IconFactorygetType: unit -> '_gtype
        val HSeparatornew: unit -> '_object
        val HSeparatorgetType: unit -> '_gtype
        val HScrollbarnew: '_object -> '_object
        val HScrollbargetType: unit -> '_gtype
        val HScalenewWithRange: real * real * real -> '_object
        val HScalenew: '_object -> '_object
        val HScalegetType: unit -> '_gtype
        val HRulernew: unit -> '_object
        val HRulergetType: unit -> '_gtype
        val HPanednew: unit -> '_object
        val HPanedgetType: unit -> '_gtype
        val HButtonBoxnew: unit -> '_object
        val HButtonBoxgetType: unit -> '_gtype
        val HBoxnew: bool * int -> '_object
        val HBoxgetType: unit -> '_gtype
        val HandleBoxnew: unit -> '_object
        val HandleBoxgetSnapEdge: '_object -> 'gtk_positiontype_t
        val HandleBoxsetSnapEdge: '_object * 'gtk_positiontype_t -> unit
        val HandleBoxgetHandlePosition: '_object -> 'gtk_positiontype_t
        val HandleBoxsetHandlePosition: '_object * 'gtk_positiontype_t -> unit
        val HandleBoxgetShadowType: '_object -> 'gtk_shadowtype_t
        val HandleBoxsetShadowType: '_object * 'gtk_shadowtype_t -> unit
        val HandleBoxgetType: unit -> '_gtype
        val GammaCurvenew: unit -> '_object
        val GammaCurvegetType: unit -> '_gtype
        val GammaCurvegetFieldTable: '_object -> '_object
        val GammaCurvesetFieldTable: '_object * '_object -> unit
        val GammaCurvegetFieldGammaText: '_object -> '_object
        val GammaCurvesetFieldGammaText: '_object * '_object -> unit
        val GammaCurvegetFieldGammaDialog: '_object -> '_object
        val GammaCurvesetFieldGammaDialog: '_object * '_object -> unit
        val GammaCurvegetFieldGamma: '_object -> real
        val GammaCurvesetFieldGamma: '_object * real -> unit
        val GammaCurvegetFieldCurve: '_object -> '_object
        val GammaCurvesetFieldCurve: '_object * '_object -> unit
        val Framenew: string -> '_object
        val FramegetShadowType: '_object -> 'gtk_shadowtype_t
        val FramesetShadowType: '_object * 'gtk_shadowtype_t -> unit
        val FramegetLabelAlign: '_object * real * real -> real * real
        val FramesetLabelAlign: '_object * real * real -> unit
        val FramegetLabelWidget: '_object -> '_object
        val FramesetLabelWidget: '_object * '_object -> unit
        val FramegetLabel: '_object -> string
        val FramesetLabel: '_object * string -> unit
        val FramegetType: unit -> '_gtype
        val FontSelectionDialognew: string -> '_object
        val FontSelectionDialogsetPreviewText: '_object * string -> unit
        val FontSelectionDialoggetPreviewText: '_object -> string
        val FontSelectionDialogsetFontName: '_object * string -> bool
        val FontSelectionDialoggetFont: '_object -> '_object
        val FontSelectionDialoggetFontName: '_object -> string
        val FontSelectionDialoggetType: unit -> '_gtype
        val FontSelectionDialoggetFieldOkButton: '_object -> '_object
        val FontSelectionDialogsetFieldOkButton: '_object * '_object -> unit
        val FontSelectionDialoggetFieldMainVBox: '_object -> '_object
        val FontSelectionDialogsetFieldMainVBox: '_object * '_object -> unit
        val FontSelectionDialoggetFieldFontsel: '_object -> '_object
        val FontSelectionDialogsetFieldFontsel: '_object * '_object -> unit
        val FontSelectionDialoggetFieldCancelButton: '_object -> '_object
        val FontSelectionDialogsetFieldCancelButton: '_object * '_object -> unit
        val FontSelectionDialoggetFieldApplyButton: '_object -> '_object
        val FontSelectionDialogsetFieldApplyButton: '_object * '_object -> unit
        val FontSelectionDialoggetFieldActionArea: '_object -> '_object
        val FontSelectionDialogsetFieldActionArea: '_object * '_object -> unit
        val FontSelectionnew: unit -> '_object
        val FontSelectionsetPreviewText: '_object * string -> unit
        val FontSelectiongetPreviewText: '_object -> string
        val FontSelectionsetFontName: '_object * string -> bool
        val FontSelectiongetFont: '_object -> '_object
        val FontSelectiongetFontName: '_object -> string
        val FontSelectiongetType: unit -> '_gtype
        val FontButtonnew: unit -> '_object
        val FontButtonsetShowSize: '_object * bool -> unit
        val FontButtongetShowSize: '_object -> bool
        val FontButtonsetShowStyle: '_object * bool -> unit
        val FontButtongetShowStyle: '_object -> bool
        val FontButtonsetFontName: '_object * string -> bool
        val FontButtongetFontName: '_object -> string
        val FontButtonsetUseSize: '_object * bool -> unit
        val FontButtongetUseSize: '_object -> bool
        val FontButtonsetUseFont: '_object * bool -> unit
        val FontButtongetUseFont: '_object -> bool
        val FontButtonsetTitle: '_object * string -> unit
        val FontButtongetTitle: '_object -> string
        val FontButtonnewWithFont: string -> '_object
        val FontButtongetType: unit -> '_gtype
        val Fixednew: unit -> '_object
        val FixedgetHasWindow: '_object -> bool
        val FixedsetHasWindow: '_object * bool -> unit
        val Fixedmove: '_object * '_object * int * int -> unit
        val Fixedput: '_object * '_object * int * int -> unit
        val FixedgetType: unit -> '_gtype
        val FileSelectionnew: string -> '_object
        val FileSelectiongetSelectMultiple: '_object -> bool
        val FileSelectionsetSelectMultiple: '_object * bool -> unit
        val FileSelectiongetSelections: '_object -> '_object
        val FileSelectionhideFileopButtons: '_object -> unit
        val FileSelectionshowFileopButtons: '_object -> unit
        val FileSelectioncomplete: '_object * string -> unit
        val FileSelectiongetFilename: '_object -> string
        val FileSelectionsetFilename: '_object * string -> unit
        val FileSelectiongetType: unit -> '_gtype
        val FileSelectiongetFieldSelectionText: '_object -> '_object
        val FileSelectionsetFieldSelectionText: '_object * '_object -> unit
        val FileSelectiongetFieldSelectionEntry: '_object -> '_object
        val FileSelectionsetFieldSelectionEntry: '_object * '_object -> unit
        val FileSelectiongetFieldOkButton: '_object -> '_object
        val FileSelectionsetFieldOkButton: '_object * '_object -> unit
        val FileSelectiongetFieldMainVBox: '_object -> '_object
        val FileSelectionsetFieldMainVBox: '_object * '_object -> unit
        val FileSelectiongetFieldHistoryPulldown: '_object -> '_object
        val FileSelectionsetFieldHistoryPulldown: '_object * '_object -> unit
        val FileSelectiongetFieldHistoryMenu: '_object -> '_object
        val FileSelectionsetFieldHistoryMenu: '_object * '_object -> unit
        val FileSelectiongetFieldHelpButton: '_object -> '_object
        val FileSelectionsetFieldHelpButton: '_object * '_object -> unit
        val FileSelectiongetFieldFileopRenFile: '_object -> '_object
        val FileSelectionsetFieldFileopRenFile: '_object * '_object -> unit
        val FileSelectiongetFieldFileopFile: '_object -> string
        val FileSelectionsetFieldFileopFile: '_object * string -> unit
        val FileSelectiongetFieldFileopEntry: '_object -> '_object
        val FileSelectionsetFieldFileopEntry: '_object * '_object -> unit
        val FileSelectiongetFieldFileopDialog: '_object -> '_object
        val FileSelectionsetFieldFileopDialog: '_object * '_object -> unit
        val FileSelectiongetFieldFileopDelFile: '_object -> '_object
        val FileSelectionsetFieldFileopDelFile: '_object * '_object -> unit
        val FileSelectiongetFieldFileopCDir: '_object -> '_object
        val FileSelectionsetFieldFileopCDir: '_object * '_object -> unit
        val FileSelectiongetFieldFileList: '_object -> '_object
        val FileSelectionsetFieldFileList: '_object * '_object -> unit
        val FileSelectiongetFieldDirList: '_object -> '_object
        val FileSelectionsetFieldDirList: '_object * '_object -> unit
        val FileSelectiongetFieldCancelButton: '_object -> '_object
        val FileSelectionsetFieldCancelButton: '_object * '_object -> unit
        val FileSelectiongetFieldButtonArea: '_object -> '_object
        val FileSelectionsetFieldButtonArea: '_object * '_object -> unit
        val FileSelectiongetFieldActionArea: '_object -> '_object
        val FileSelectionsetFieldActionArea: '_object * '_object -> unit
        val FileFilternew: unit -> '_object
        val FileFilterfilter: '_object * '_object -> bool
        val FileFiltergetNeeded: '_object -> 'gtk_filefilterflags_t
        val FileFilteraddPixbufFormats: '_object -> unit
        val FileFilteraddPattern: '_object * string -> unit
        val FileFilteraddMimeType: '_object * string -> unit
        val FileFiltergetName: '_object -> string
        val FileFiltersetName: '_object * string -> unit
        val FileFiltergetType: unit -> '_gtype
        val FileChooserWidgetnew: 'gtk_filechooseraction_t -> '_object
        val FileChooserWidgetnewWithBackend: 'gtk_filechooseraction_t * string -> '_object
        val FileChooserWidgetgetType: unit -> '_gtype
        val FileChooserDialognew: string * '_object * 'gtk_filechooseraction_t * string -> '_object
        val FileChooserDialognewWithBackend: string * '_object * 'gtk_filechooseraction_t * string * string -> '_object
        val FileChooserDialoggetType: unit -> '_gtype
        val FileChooserButtonsetWidthChars: '_object * int -> unit
        val FileChooserButtongetWidthChars: '_object -> int
        val FileChooserButtonsetTitle: '_object * string -> unit
        val FileChooserButtongetTitle: '_object -> string
        val FileChooserButtonnewWithDialog: '_object -> '_object
        val FileChooserButtongetType: unit -> '_gtype
        val Expandernew: string -> '_object
        val ExpandergetLabelWidget: '_object -> '_object
        val ExpandersetLabelWidget: '_object * '_object -> unit
        val ExpandergetUseMarkup: '_object -> bool
        val ExpandersetUseMarkup: '_object * bool -> unit
        val ExpandergetUseUnderline: '_object -> bool
        val ExpandersetUseUnderline: '_object * bool -> unit
        val ExpandergetLabel: '_object -> string
        val ExpandersetLabel: '_object * string -> unit
        val ExpandergetSpacing: '_object -> int
        val ExpandersetSpacing: '_object * int -> unit
        val ExpandergetExpanded: '_object -> bool
        val ExpandersetExpanded: '_object * bool -> unit
        val ExpandernewWithMnemonic: string -> '_object
        val ExpandergetType: unit -> '_gtype
        val EventBoxnew: unit -> '_object
        val EventBoxsetAboveChild: '_object * bool -> unit
        val EventBoxgetAboveChild: '_object -> bool
        val EventBoxsetVisibleWindow: '_object * bool -> unit
        val EventBoxgetVisibleWindow: '_object -> bool
        val EventBoxgetType: unit -> '_gtype
        val EntryCompletionnew: unit -> '_object
        val EntryCompletiongetPopupCompletion: '_object -> bool
        val EntryCompletionsetPopupCompletion: '_object * bool -> unit
        val EntryCompletiongetInlineCompletion: '_object -> bool
        val EntryCompletionsetInlineCompletion: '_object * bool -> unit
        val EntryCompletioninsertPrefix: '_object -> unit
        val EntryCompletionsetTextColumn: '_object * int -> unit
        val EntryCompletiondeleteAction: '_object * int -> unit
        val EntryCompletioninsertActionMarkup: '_object * int * string -> unit
        val EntryCompletioninsertActionText: '_object * int * string -> unit
        val EntryCompletioncomplete: '_object -> unit
        val EntryCompletiongetMinimumKeyLength: '_object -> int
        val EntryCompletionsetMinimumKeyLength: '_object * int -> unit
        val EntryCompletiongetModel: '_object -> '_object
        val EntryCompletionsetModel: '_object * '_object -> unit
        val EntryCompletiongetEntry: '_object -> '_object
        val EntryCompletiongetType: unit -> '_gtype
        val Entrynew: unit -> '_object
        val EntrysetEditable: '_object * bool -> unit
        val EntryselectRegion: '_object * int * int -> unit
        val EntrysetPosition: '_object * int -> unit
        val EntryprependText: '_object * string -> unit
        val EntrygetCompletion: '_object -> '_object
        val EntrysetCompletion: '_object * '_object -> unit
        val EntrygetAlignment: '_object -> real
        val EntrysetAlignment: '_object * real -> unit
        val EntrygetLayoutOffsets: '_object * int * int -> int * int
        val EntrygetLayout: '_object -> '_object
        val EntrygetText: '_object -> string
        val EntrysetText: '_object * string -> unit
        val EntrygetWidthChars: '_object -> int
        val EntrysetWidthChars: '_object * int -> unit
        val EntrygetActivatesDefault: '_object -> bool
        val EntrysetActivatesDefault: '_object * bool -> unit
        val EntrygetMaxLength: '_object -> int
        val EntrysetMaxLength: '_object * int -> unit
        val EntrygetHasFrame: '_object -> bool
        val EntrysetHasFrame: '_object * bool -> unit
        val EntrygetInvisibleChar: '_object -> int
        val EntrysetInvisibleChar: '_object * int -> unit
        val EntrygetVisibility: '_object -> bool
        val EntrysetVisibility: '_object * bool -> unit
        val EntrygetType: unit -> '_gtype
        val DrawingAreanew: unit -> '_object
        val DrawingAreagetType: unit -> '_gtype
        val DialognewWithButtons: string * '_object * 'gtk_dialogflags_t * string -> '_object
        val Dialognew: unit -> '_object
        val DialogsetAlternativeButtonOrderFromArray: '_object * int * int -> int
        val DialogsetAlternativeButtonOrder: '_object * int -> unit
        val Dialogrun: '_object -> int
        val Dialogresponse: '_object * int -> unit
        val DialoggetHasSeparator: '_object -> bool
        val DialogsetHasSeparator: '_object * bool -> unit
        val DialogsetDefaultResponse: '_object * int -> unit
        val DialogsetResponseSensitive: '_object * int * bool -> unit
        val DialogaddButtons: '_object * string -> unit
        val DialogaddButton: '_object * string * int -> '_object
        val DialogaddActionWidget: '_object * '_object * int -> unit
        val DialoggetType: unit -> '_gtype
        val DialoggetFieldVBox: '_object -> '_object
        val DialogsetFieldVBox: '_object * '_object -> unit
        val DialoggetFieldActionArea: '_object -> '_object
        val DialogsetFieldActionArea: '_object * '_object -> unit
        val Curvenew: unit -> '_object
        val CurvesetCurveType: '_object * 'gtk_curvetype_t -> unit
        val CurvesetRange: '_object * real * real * real * real -> unit
        val CurvesetGamma: '_object * real -> unit
        val Curvereset: '_object -> unit
        val CurvegetType: unit -> '_gtype
        val Containernew: { border_width : int, focus_child : '_object, has_focus_chain : int, need_resize : int, reallocate_redraws : int, resize_mode : int } -> '_object
        val Containerforall: '_object * '_object * '_object -> unit
        val ContainerchildGetProperty: '_object * '_object * string -> '_gvalue
        val ContainerchildSetProperty: '_object * '_object * string * '_gvalue -> unit
        val ContainerchildGet: '_object * '_object * string -> unit
        val ContainerchildSet: '_object * '_object * string -> unit
        val ContaineraddWithProperties: '_object * '_object * string -> unit
        val ContainerclassListChildProperties: '_object * int -> '_object * int
        val ContainerclassFindChildProperty: '_object * string -> '_object
        val ContainerclassInstallChildProperty: '_object * int * '_object -> unit
        val ContainerchildType: '_object -> '_gtype
        val ContainerresizeChildren: '_object -> unit
        val ContainergetFocusHadjustment: '_object -> '_object
        val ContainersetFocusHadjustment: '_object * '_object -> unit
        val ContainergetFocusVadjustment: '_object -> '_object
        val ContainersetFocusVadjustment: '_object * '_object -> unit
        val ContainersetFocusChild: '_object * '_object -> unit
        val ContainersetReallocateRedraws: '_object * bool -> unit
        val ContainerunsetFocusChain: '_object -> unit
        val ContainergetFocusChain: '_object * '_object -> bool
        val ContainersetFocusChain: '_object * ('_object list) -> unit
        val ContainerpropagateExpose: '_object * '_object * '_object -> unit
        val ContainergetChildren: '_object -> '_object list
        val Containerforeach: '_object * '_object * '_object -> unit
        val ContainercheckResize: '_object -> unit
        val ContainergetResizeMode: '_object -> 'gtk_resizemode_t
        val ContainersetResizeMode: '_object * 'gtk_resizemode_t -> unit
        val Containerremove: '_object * '_object -> unit
        val Containeradd: '_object * '_object -> unit
        val ContainergetBorderWidth: '_object -> int
        val ContainersetBorderWidth: '_object * int -> unit
        val ContainergetType: unit -> '_gtype
        val ContainergetFieldResizeMode: '_object -> int
        val ContainersetFieldResizeMode: '_object * int -> unit
        val ContainergetFieldReallocateRedraws: '_object -> int
        val ContainersetFieldReallocateRedraws: '_object * int -> unit
        val ContainergetFieldNeedResize: '_object -> int
        val ContainersetFieldNeedResize: '_object * int -> unit
        val ContainergetFieldHasFocusChain: '_object -> int
        val ContainersetFieldHasFocusChain: '_object * int -> unit
        val ContainergetFieldFocusChild: '_object -> '_object
        val ContainersetFieldFocusChild: '_object * '_object -> unit
        val ContainergetFieldBorderWidth: '_object -> int
        val ContainersetFieldBorderWidth: '_object * int -> unit
        val ComboBoxEntrynew: unit -> '_object
        val ComboBoxEntrynewText: unit -> '_object
        val ComboBoxEntrygetTextColumn: '_object -> int
        val ComboBoxEntrysetTextColumn: '_object * int -> unit
        val ComboBoxEntrynewWithModel: '_object * int -> '_object
        val ComboBoxEntrygetType: unit -> '_gtype
        val ComboBoxnewWithModel: '_object -> '_object
        val ComboBoxnew: unit -> '_object
        val ComboBoxgetPopupAccessible: '_object -> '_object
        val ComboBoxgetActiveText: '_object -> string
        val ComboBoxsetFocusOnClick: '_object * bool -> unit
        val ComboBoxgetFocusOnClick: '_object -> bool
        val ComboBoxsetAddTearoffs: '_object * bool -> unit
        val ComboBoxgetColumnSpanColumn: '_object -> int
        val ComboBoxgetRowSpanColumn: '_object -> int
        val ComboBoxgetWrapWidth: '_object -> int
        val ComboBoxpopdown: '_object -> unit
        val ComboBoxpopup: '_object -> unit
        val ComboBoxremoveText: '_object * int -> unit
        val ComboBoxprependText: '_object * string -> unit
        val ComboBoxinsertText: '_object * int * string -> unit
        val ComboBoxappendText: '_object * string -> unit
        val ComboBoxnewText: unit -> '_object
        val ComboBoxgetModel: '_object -> '_object
        val ComboBoxsetModel: '_object * '_object -> unit
        val ComboBoxsetActiveIter: '_object * '_object -> unit
        val ComboBoxgetActiveIter: '_object * '_object -> bool
        val ComboBoxsetActive: '_object * int -> unit
        val ComboBoxgetActive: '_object -> int
        val ComboBoxsetColumnSpanColumn: '_object * int -> unit
        val ComboBoxsetRowSpanColumn: '_object * int -> unit
        val ComboBoxsetWrapWidth: '_object * int -> unit
        val ComboBoxgetType: unit -> '_gtype
        val Combonew: { entry : '_object, list : '_object } -> '_object
        val CombogetFieldList: '_object -> '_object
        val CombosetFieldList: '_object * '_object -> unit
        val CombogetFieldEntry: '_object -> '_object
        val CombosetFieldEntry: '_object * '_object -> unit
        val ColorSelectionDialognew: string -> '_object
        val ColorSelectionDialoggetType: unit -> '_gtype
        val ColorSelectionDialoggetFieldOkButton: '_object -> '_object
        val ColorSelectionDialogsetFieldOkButton: '_object * '_object -> unit
        val ColorSelectionDialoggetFieldHelpButton: '_object -> '_object
        val ColorSelectionDialogsetFieldHelpButton: '_object * '_object -> unit
        val ColorSelectionDialoggetFieldColorsel: '_object -> '_object
        val ColorSelectionDialogsetFieldColorsel: '_object * '_object -> unit
        val ColorSelectionDialoggetFieldCancelButton: '_object -> '_object
        val ColorSelectionDialogsetFieldCancelButton: '_object * '_object -> unit
        val ColorSelectionnew: unit -> '_object
        val ColorSelectionpaletteToString: ('_object vector) -> string
        val ColorSelectionpaletteFromString: string * int -> bool * '_object * int
        val ColorSelectionisAdjusting: '_object -> bool
        val ColorSelectiongetPreviousAlpha: '_object -> int
        val ColorSelectiongetPreviousColor: '_object * '_object -> unit
        val ColorSelectionsetPreviousAlpha: '_object * int -> unit
        val ColorSelectionsetPreviousColor: '_object * '_object -> unit
        val ColorSelectiongetCurrentAlpha: '_object -> int
        val ColorSelectiongetCurrentColor: '_object * '_object -> unit
        val ColorSelectionsetCurrentAlpha: '_object * int -> unit
        val ColorSelectionsetCurrentColor: '_object * '_object -> unit
        val ColorSelectionsetHasPalette: '_object * bool -> unit
        val ColorSelectiongetHasPalette: '_object -> bool
        val ColorSelectionsetHasOpacityControl: '_object * bool -> unit
        val ColorSelectiongetHasOpacityControl: '_object -> bool
        val ColorSelectiongetType: unit -> '_gtype
        val ColorButtonnewWithColor: '_object -> '_object
        val ColorButtonnew: unit -> '_object
        val ColorButtongetTitle: '_object -> string
        val ColorButtonsetTitle: '_object * string -> unit
        val ColorButtongetUseAlpha: '_object -> bool
        val ColorButtonsetUseAlpha: '_object * bool -> unit
        val ColorButtongetAlpha: '_object -> int
        val ColorButtongetColor: '_object * '_object -> unit
        val ColorButtonsetAlpha: '_object * int -> unit
        val ColorButtonsetColor: '_object * '_object -> unit
        val ColorButtongetType: unit -> '_gtype
        val ClipboardgetForDisplay: '_object * 'word32_word -> '_object
        val ClipboardwaitForTargets: '_object * '_object * int -> bool * int
        val ClipboardwaitIsTextAvailable: '_object -> bool
        val ClipboardwaitForText: '_object -> string
        val ClipboardwaitForContents: '_object * 'word32_word -> '_object
        val ClipboardsetText: '_object * string * int -> unit
        val Clipboardclear: '_object -> unit
        val ClipboardgetOwner: '_object -> '_object
        val ClipboardgetDisplay: '_object -> '_object
        val Clipboardget: 'word32_word -> '_object
        val ClipboardgetType: unit -> '_gtype
        val Clipboardstore: '_object -> unit
        val ClipboardsetCanStore: '_object * ('_object vector) -> unit
        val ClipboardwaitIsTargetAvailable: '_object * 'word32_word -> bool
        val CheckMenuItemnewWithMnemonic: string -> '_object
        val CheckMenuItemnewWithLabel: string -> '_object
        val CheckMenuItemnew: unit -> '_object
        val CheckMenuItemgetDrawAsRadio: '_object -> bool
        val CheckMenuItemsetDrawAsRadio: '_object * bool -> unit
        val CheckMenuItemgetInconsistent: '_object -> bool
        val CheckMenuItemsetInconsistent: '_object * bool -> unit
        val CheckMenuItemtoggled: '_object -> unit
        val CheckMenuItemgetActive: '_object -> bool
        val CheckMenuItemsetActive: '_object * bool -> unit
        val CheckMenuItemgetType: unit -> '_gtype
        val CheckMenuItemgetFieldActive: '_object -> bool
        val CheckMenuItemsetFieldActive: '_object * bool -> unit
        val CheckButtonnewWithMnemonic: string -> '_object
        val CheckButtonnewWithLabel: string -> '_object
        val CheckButtonnew: unit -> '_object
        val CheckButtongetType: unit -> '_gtype
        val CellViewnew: unit -> '_object
        val CellViewgetCellRenderers: '_object -> '_object list
        val CellViewsetBackgroundColor: '_object * '_object -> unit
        val CellViewgetSizeOfRow: '_object * '_object * '_object -> bool
        val CellViewgetDisplayedRow: '_object -> '_object
        val CellViewsetDisplayedRow: '_object * '_object -> unit
        val CellViewsetModel: '_object * '_object -> unit
        val CellViewnewWithPixbuf: '_object -> '_object
        val CellViewnewWithMarkup: string -> '_object
        val CellViewnewWithText: string -> '_object
        val CellViewgetType: unit -> '_gtype
        val CellRendererTogglenew: unit -> '_object
        val CellRendererTogglesetActive: '_object * bool -> unit
        val CellRendererTogglegetActive: '_object -> bool
        val CellRendererTogglesetRadio: '_object * bool -> unit
        val CellRendererTogglegetRadio: '_object -> bool
        val CellRendererTogglegetType: unit -> '_gtype
        val CellRendererTextnew: unit -> '_object
        val CellRendererTextsetFixedHeightFromFont: '_object * int -> unit
        val CellRendererTextgetType: unit -> '_gtype
        val CellRendererProgressnew: unit -> '_object
        val CellRendererProgressgetType: unit -> '_gtype
        val CellRendererPixbufnew: unit -> '_object
        val CellRendererPixbufgetType: unit -> '_gtype
        val CellRendererCombonew: unit -> '_object
        val CellRendererCombogetType: unit -> '_gtype
        val CellRendererstopEditing: '_object * bool -> unit
        val CellRenderereditingCanceled: '_object -> unit
        val CellRenderergetFixedSize: '_object * int * int -> int * int
        val CellRenderersetFixedSize: '_object * int * int -> unit
        val CellRendererstartEditing: '_object * '_object * '_object * string * '_object * '_object * 'gtk_cellrendererstate_t -> '_object
        val CellRendereractivate: '_object * '_object * '_object * string * '_object * '_object * 'gtk_cellrendererstate_t -> bool
        val CellRendererrender: '_object * '_object * '_object * '_object * '_object * '_object * 'gtk_cellrendererstate_t -> unit
        val CellRenderergetSize: '_object * '_object * '_object * int * int * int * int -> int * int * int * int
        val CellRenderergetType: unit -> '_gtype
        val Calendarnew: unit -> '_object
        val Calendarthaw: '_object -> unit
        val Calendarfreeze: '_object -> unit
        val CalendargetDate: '_object * int * int * int -> int * int * int
        val CalendardisplayOptions: '_object * 'gtk_calendardisplayoptions_t -> unit
        val CalendargetDisplayOptions: '_object -> 'gtk_calendardisplayoptions_t
        val CalendarsetDisplayOptions: '_object * 'gtk_calendardisplayoptions_t -> unit
        val CalendarclearMarks: '_object -> unit
        val CalendarunmarkDay: '_object * int -> bool
        val CalendarmarkDay: '_object * int -> bool
        val CalendarselectDay: '_object * int -> unit
        val CalendarselectMonth: '_object * int * int -> bool
        val CalendargetType: unit -> '_gtype
        val ButtonBoxsetChildSecondary: '_object * '_object * bool -> unit
        val ButtonBoxgetChildSecondary: '_object * '_object -> bool
        val ButtonBoxsetLayout: '_object * 'gtk_buttonboxstyle_t -> unit
        val ButtonBoxgetLayout: '_object -> 'gtk_buttonboxstyle_t
        val ButtonBoxgetType: unit -> '_gtype
        val ButtonnewWithMnemonic: string -> '_object
        val ButtonnewFromStock: string -> '_object
        val ButtonnewWithLabel: string -> '_object
        val Buttonnew: unit -> '_object
        val ButtongetImage: '_object -> '_object
        val ButtonsetImage: '_object * '_object -> unit
        val ButtongetAlignment: '_object * real * real -> real * real
        val ButtonsetAlignment: '_object * real * real -> unit
        val ButtongetFocusOnClick: '_object -> bool
        val ButtonsetFocusOnClick: '_object * bool -> unit
        val ButtongetUseStock: '_object -> bool
        val ButtonsetUseStock: '_object * bool -> unit
        val ButtongetUseUnderline: '_object -> bool
        val ButtonsetUseUnderline: '_object * bool -> unit
        val ButtongetLabel: '_object -> string
        val ButtonsetLabel: '_object * string -> unit
        val ButtongetRelief: '_object -> 'gtk_reliefstyle_t
        val ButtonsetRelief: '_object * 'gtk_reliefstyle_t -> unit
        val Buttonleave: '_object -> unit
        val Buttonenter: '_object -> unit
        val Buttonclicked: '_object -> unit
        val Buttonreleased: '_object -> unit
        val Buttonpressed: '_object -> unit
        val ButtongetType: unit -> '_gtype
        val BoxsetChildPacking: '_object * '_object * bool * bool * int * 'gtk_packtype_t -> unit
        val BoxqueryChildPacking: '_object * '_object * '_object * '_object * int * 'gtk_packtype_t -> int * 'gtk_packtype_t
        val BoxreorderChild: '_object * '_object * int -> unit
        val BoxgetSpacing: '_object -> int
        val BoxsetSpacing: '_object * int -> unit
        val BoxgetHomogeneous: '_object -> bool
        val BoxsetHomogeneous: '_object * bool -> unit
        val BoxpackEndDefaults: '_object * '_object -> unit
        val BoxpackStartDefaults: '_object * '_object -> unit
        val BoxpackEnd: '_object * '_object * bool * bool * int -> unit
        val BoxpackStart: '_object * '_object * bool * bool * int -> unit
        val BoxgetType: unit -> '_gtype
        val Binnew: { child : '_object } -> '_object
        val BingetChild: '_object -> '_object
        val BingetType: unit -> '_gtype
        val BingetFieldChild: '_object -> '_object
        val BinsetFieldChild: '_object * '_object -> unit
        val AspectFramenew: string * real * real * real * bool -> '_object
        val AspectFrameset: '_object * real * real * real * bool -> unit
        val AspectFramegetType: unit -> '_gtype
        val Arrownew: 'gtk_arrowtype_t * 'gtk_shadowtype_t -> '_object
        val Arrowset: '_object * 'gtk_arrowtype_t * 'gtk_shadowtype_t -> unit
        val ArrowgetType: unit -> '_gtype
        val Alignmentnew: real * real * real * real -> '_object
        val AlignmentgetPadding: '_object * int * int * int * int -> int * int * int * int
        val AlignmentsetPadding: '_object * int * int * int * int -> unit
        val Alignmentset: '_object * real * real * real * real -> unit
        val AlignmentgetType: unit -> '_gtype
        val Adjustmentnew: real * real * real * real * real * real -> '_object
        val AdjustmentsetValue: '_object * real -> unit
        val AdjustmentgetValue: '_object -> real
        val AdjustmentclampPage: '_object * real * real -> unit
        val AdjustmentvalueChanged: '_object -> unit
        val Adjustmentchanged: '_object -> unit
        val AdjustmentgetType: unit -> '_gtype
        val AdjustmentgetFieldValue: '_object -> real
        val AdjustmentsetFieldValue: '_object * real -> unit
        val AdjustmentgetFieldUpper: '_object -> real
        val AdjustmentsetFieldUpper: '_object * real -> unit
        val AdjustmentgetFieldStepIncrement: '_object -> real
        val AdjustmentsetFieldStepIncrement: '_object * real -> unit
        val AdjustmentgetFieldPageSize: '_object -> real
        val AdjustmentsetFieldPageSize: '_object * real -> unit
        val AdjustmentgetFieldPageIncrement: '_object -> real
        val AdjustmentsetFieldPageIncrement: '_object * real -> unit
        val AdjustmentgetFieldLower: '_object -> real
        val AdjustmentsetFieldLower: '_object * real -> unit
        val ActionGroupnew: string -> '_object
        val ActionGrouptranslateString: '_object * string -> string
        val ActionGroupsetTranslationDomain: '_object * string -> unit
        val ActionGroupremoveAction: '_object * '_object -> unit
        val ActionGroupaddActionWithAccel: '_object * '_object * string -> unit
        val ActionGroupaddAction: '_object * '_object -> unit
        val ActionGrouplistActions: '_object -> '_object list
        val ActionGroupgetAction: '_object * string -> '_object
        val ActionGroupsetVisible: '_object * bool -> unit
        val ActionGroupgetVisible: '_object -> bool
        val ActionGroupsetSensitive: '_object * bool -> unit
        val ActionGroupgetSensitive: '_object -> bool
        val ActionGroupgetName: '_object -> string
        val ActionGroupgetType: unit -> '_gtype
        val Actionnew: string * string * string * string -> '_object
        val ActionsetVisible: '_object * bool -> unit
        val ActionsetSensitive: '_object * bool -> unit
        val ActionsetAccelGroup: '_object * '_object -> unit
        val ActionsetAccelPath: '_object * string -> unit
        val ActionunblockActivateFrom: '_object * '_object -> unit
        val ActionblockActivateFrom: '_object * '_object -> unit
        val ActiongetAccelPath: '_object -> string
        val ActiondisconnectAccelerator: '_object -> unit
        val ActionconnectAccelerator: '_object -> unit
        val ActiongetProxies: '_object -> '_object list
        val ActiondisconnectProxy: '_object * '_object -> unit
        val ActionconnectProxy: '_object * '_object -> unit
        val ActioncreateToolItem: '_object -> '_object
        val ActioncreateMenuItem: '_object -> '_object
        val ActioncreateIcon: '_object * 'gtk_iconsize_t -> '_object
        val Actionactivate: '_object -> unit
        val ActiongetVisible: '_object -> bool
        val ActionisVisible: '_object -> bool
        val ActiongetSensitive: '_object -> bool
        val ActionisSensitive: '_object -> bool
        val ActiongetName: '_object -> string
        val ActiongetType: unit -> '_gtype
        val AccessibleconnectWidgetDestroyed: '_object -> unit
        val AccessiblegetType: unit -> '_gtype
        val AccelLabelnew: string -> '_object
        val AccelLabelrefetch: '_object -> bool
        val AccelLabelsetAccelClosure: '_object * '_object -> unit
        val AccelLabelsetAccelWidget: '_object * '_object -> unit
        val AccelLabelgetAccelWidth: '_object -> int
        val AccelLabelgetAccelWidget: '_object -> '_object
        val AccelLabelgetType: unit -> '_gtype
        val AccelGroupnew: unit -> '_object
        val AccelGroupquery: '_object * int * 'gdk_modifiertype_t * int -> '_object * int
        val AccelGroupfromAccelClosure: '_object -> '_object
        val AccelGroupactivate: '_object * 'word32_word * '_object * int * 'gdk_modifiertype_t -> bool
        val AccelGroupdisconnectKey: '_object * int * 'gdk_modifiertype_t -> bool
        val AccelGroupdisconnect: '_object * '_object -> bool
        val AccelGroupconnectByPath: '_object * string * '_object -> unit
        val AccelGroupconnect: '_object * int * 'gdk_modifiertype_t * 'gtk_accelflags_t * '_object -> unit
        val AccelGroupunlock: '_object -> unit
        val AccelGrouplock: '_object -> unit
        val AccelGroupgetType: unit -> '_gtype
        val AboutDialognew: unit -> '_object
        val AboutDialogsetLogoIconName: '_object * string -> unit
        val AboutDialoggetLogoIconName: '_object -> string
        val AboutDialogsetLogo: '_object * '_object -> unit
        val AboutDialoggetLogo: '_object -> '_object
        val AboutDialogsetTranslatorCredits: '_object * string -> unit
        val AboutDialoggetTranslatorCredits: '_object -> string
        val AboutDialogsetArtists: '_object * (string vector) -> unit
        val AboutDialoggetArtists: '_object -> '_object
        val AboutDialogsetDocumenters: '_object * (string vector) -> unit
        val AboutDialoggetDocumenters: '_object -> '_object
        val AboutDialogsetAuthors: '_object * (string vector) -> unit
        val AboutDialoggetAuthors: '_object -> '_object
        val AboutDialogsetWebsiteLabel: '_object * string -> unit
        val AboutDialoggetWebsiteLabel: '_object -> string
        val AboutDialogsetWebsite: '_object * string -> unit
        val AboutDialoggetWebsite: '_object -> string
        val AboutDialogsetLicense: '_object * string -> unit
        val AboutDialoggetLicense: '_object -> string
        val AboutDialogsetComments: '_object * string -> unit
        val AboutDialoggetComments: '_object -> string
        val AboutDialogsetCopyright: '_object * string -> unit
        val AboutDialoggetCopyright: '_object -> string
        val AboutDialogsetVersion: '_object * string -> unit
        val AboutDialoggetVersion: '_object -> string
        val AboutDialogsetName: '_object * string -> unit
        val AboutDialoggetName: '_object -> string
        val AboutDialoggetType: unit -> '_gtype
        val TreeSortablehasDefaultSortFunc: '_object -> bool
        val TreeSortablesetSortColumnId: '_object * int * 'gtk_sorttype_t -> unit
        val TreeSortablegetSortColumnId: '_object * int * 'gtk_sorttype_t -> bool * int * 'gtk_sorttype_t
        val TreeSortablesortColumnChanged: '_object -> unit
        val TreeSortablegetType: unit -> '_gtype
        val TreeModelfilterNew: '_object * '_object -> '_object
        val TreeModelrowsReordered: '_object * '_object * '_object * int -> int
        val TreeModelrowDeleted: '_object * '_object -> unit
        val TreeModelrowHasChildToggled: '_object * '_object * '_object -> unit
        val TreeModelrowInserted: '_object * '_object * '_object -> unit
        val TreeModelrowChanged: '_object * '_object * '_object -> unit
        val TreeModelget: '_object * '_object -> unit
        val TreeModelunrefNode: '_object * '_object -> unit
        val TreeModelrefNode: '_object * '_object -> unit
        val TreeModeliterParent: '_object * '_object * '_object -> bool
        val TreeModeliterNthChild: '_object * '_object * '_object * int -> bool
        val TreeModeliterNChildren: '_object * '_object -> int
        val TreeModeliterHasChild: '_object * '_object -> bool
        val TreeModeliterChildren: '_object * '_object * '_object -> bool
        val TreeModeliterNext: '_object * '_object -> bool
        val TreeModelgetValue: '_object * '_object * int -> '_gvalue
        val TreeModelgetPath: '_object * '_object -> '_object
        val TreeModelgetIterFirst: '_object * '_object -> bool
        val TreeModelgetIterRoot: '_object * '_object -> bool
        val TreeModelgetStringFromIter: '_object * '_object -> string
        val TreeModelgetIterFromString: '_object * '_object * string -> bool
        val TreeModelgetIter: '_object * '_object * '_object -> bool
        val TreeModelgetColumnType: '_object * int -> '_gtype
        val TreeModelgetNColumns: '_object -> int
        val TreeModelgetFlags: '_object -> 'gtk_treemodelflags_t
        val TreeModelgetType: unit -> '_gtype
        val TreeDragSourcedragDataGet: '_object * '_object * '_object -> bool
        val TreeDragSourcedragDataDelete: '_object * '_object -> bool
        val TreeDragSourcerowDraggable: '_object * '_object -> bool
        val TreeDragSourcegetType: unit -> '_gtype
        val TreeDragDestrowDropPossible: '_object * '_object * '_object -> bool
        val TreeDragDestdragDataReceived: '_object * '_object * '_object -> bool
        val TreeDragDestgetType: unit -> '_gtype
        val FileChoosergetShowHidden: '_object -> bool
        val FileChoosersetShowHidden: '_object * bool -> unit
        val FileChooserlistShortcutFolderUris: '_object -> '_object list
        val FileChooserremoveShortcutFolderUri: '_object * string -> bool
        val FileChooseraddShortcutFolderUri: '_object * string -> bool
        val FileChooserlistShortcutFolders: '_object -> '_object list
        val FileChooserremoveShortcutFolder: '_object * string -> bool
        val FileChooseraddShortcutFolder: '_object * string -> bool
        val FileChoosergetFilter: '_object -> '_object
        val FileChoosersetFilter: '_object * '_object -> unit
        val FileChooserlistFilters: '_object -> '_object list
        val FileChooserremoveFilter: '_object * '_object -> unit
        val FileChooseraddFilter: '_object * '_object -> unit
        val FileChoosergetExtraWidget: '_object -> '_object
        val FileChoosersetExtraWidget: '_object * '_object -> unit
        val FileChoosergetPreviewUri: '_object -> string
        val FileChoosergetPreviewFilename: '_object -> string
        val FileChoosergetUsePreviewLabel: '_object -> bool
        val FileChoosersetUsePreviewLabel: '_object * bool -> unit
        val FileChoosergetPreviewWidgetActive: '_object -> bool
        val FileChoosersetPreviewWidgetActive: '_object * bool -> unit
        val FileChoosergetPreviewWidget: '_object -> '_object
        val FileChoosersetPreviewWidget: '_object * '_object -> unit
        val FileChoosergetCurrentFolderUri: '_object -> string
        val FileChoosersetCurrentFolderUri: '_object * string -> bool
        val FileChoosergetUris: '_object -> '_object list
        val FileChooserunselectUri: '_object * string -> unit
        val FileChooserselectUri: '_object * string -> bool
        val FileChoosersetUri: '_object * string -> bool
        val FileChoosergetUri: '_object -> string
        val FileChoosergetCurrentFolder: '_object -> string
        val FileChoosersetCurrentFolder: '_object * string -> bool
        val FileChoosergetFilenames: '_object -> '_object list
        val FileChooserunselectAll: '_object -> unit
        val FileChooserselectAll: '_object -> unit
        val FileChooserunselectFilename: '_object * string -> unit
        val FileChooserselectFilename: '_object * string -> bool
        val FileChoosersetFilename: '_object * string -> bool
        val FileChoosergetFilename: '_object -> string
        val FileChoosersetCurrentName: '_object * string -> unit
        val FileChoosergetSelectMultiple: '_object -> bool
        val FileChoosersetSelectMultiple: '_object * bool -> unit
        val FileChoosergetLocalOnly: '_object -> bool
        val FileChoosersetLocalOnly: '_object * bool -> unit
        val FileChoosergetAction: '_object -> 'gtk_filechooseraction_t
        val FileChoosersetAction: '_object * 'gtk_filechooseraction_t -> unit
        val FileChoosergetType: unit -> '_gtype
        val EditablegetEditable: '_object -> bool
        val EditablesetEditable: '_object * bool -> unit
        val EditablegetPosition: '_object -> int
        val EditablesetPosition: '_object * int -> unit
        val EditabledeleteSelection: '_object -> unit
        val EditablepasteClipboard: '_object -> unit
        val EditablecopyClipboard: '_object -> unit
        val EditablecutClipboard: '_object -> unit
        val EditablegetChars: '_object * int * int -> string
        val EditabledeleteText: '_object * int * int -> unit
        val EditableinsertText: '_object * string * int * int -> int
        val EditablegetSelectionBounds: '_object * int * int -> bool * int * int
        val EditableselectRegion: '_object * int * int -> unit
        val EditablegetType: unit -> '_gtype
        val CellLayoutreorder: '_object * '_object * int -> unit
        val CellLayoutclearAttributes: '_object * '_object -> unit
        val CellLayoutaddAttribute: '_object * '_object * string * int -> unit
        val CellLayoutsetAttributes: '_object * '_object -> unit
        val CellLayoutclear: '_object -> unit
        val CellLayoutpackEnd: '_object * '_object * bool -> unit
        val CellLayoutpackStart: '_object * '_object * bool -> unit
        val CellLayoutgetType: unit -> '_gtype
        val CellEditableremoveWidget: '_object -> unit
        val CellEditableeditingDone: '_object -> unit
        val CellEditablestartEditing: '_object * '_object -> unit
        val CellEditablegetType: unit -> '_gtype
        val QuitremoveByData: '_object -> unit
        val Quitremove: int -> unit
        val QuitaddFull: int * '_object * '_object * '_object * '_object -> int
        val Quitadd: int * '_object * '_object -> int
        val QuitaddDestroy: int * '_object -> unit
        val AccelmapGet: unit -> '_object
        val AccelmapGetType: unit -> '_gtype
        val AccelmapForeachUnfiltered: '_object * '_object -> unit
        val AccelmapAddFilter: string -> unit
        val AccelmapUnlockPath: string -> unit
        val AccelmapLockPath: string -> unit
        val AccelmapSaveFd: int -> unit
        val AccelmapLoadScanner: '_object -> unit
        val AccelmapLoadFd: int -> unit
        val AccelmapForeach: '_object * '_object -> unit
        val AccelmapSave: string -> unit
        val AccelmapLoad: string -> unit
        val AccelmapChangeEntry: string * int * 'gdk_modifiertype_t * bool -> bool
        val AccelmapLookupEntry: string * '_object -> bool
        val AccelmapAddEntry: string * int * 'gdk_modifiertype_t -> unit
        val AccelgroupsFromObject: '_object -> '_object list
        val AccelgroupsActivate: '_object * int * 'gdk_modifiertype_t -> bool
        val Initadd: '_object * '_object -> unit
        val Initcheck: int * '_object -> bool * int
        val Checkversion: int * int * int -> string
        val KeysnooperRemove: int -> unit
        val DrawinsertionCursor: '_object * '_object * '_object * '_object * bool * 'gtk_textdirection_t * bool -> unit
        val Inputremove: int -> unit
        val Timeoutremove: int -> unit
        val MainiterationDo: bool -> bool
        val Mainiteration: unit -> bool
        val Mainquit: unit -> unit
        val Mainlevel: unit -> int
        val MaindoEvent: '_object -> unit
        val IdleremoveByData: '_object -> unit
        val Idleremove: int -> unit
        val Eventspending: unit -> int
        val GCrelease: '_object -> unit
        val GCget: int * '_object * '_object * 'gdk_gcvaluesmask_t -> '_object
        val BindingsactivateEvent: '_object * '_object -> bool
        val Bindingsactivate: '_object * int * 'gdk_modifiertype_t -> bool
        val BindingparseBinding: '_object -> int
        val BindingentryAddSignall: '_object * int * 'gdk_modifiertype_t * string * ('_object list) -> unit
        val BindingentryRemove: '_object * int * 'gdk_modifiertype_t -> unit
        val BindingentryAddSignal: '_object * int * 'gdk_modifiertype_t * string * int -> unit
        val BindingentryClear: '_object * int * 'gdk_modifiertype_t -> unit
        val GrabgetCurrent: unit -> '_object
        val RcpropertyParseBorder: '_object * '_object -> bool * '_gvalue
        val RcpropertyParseRequisition: '_object * '_object -> bool * '_gvalue
        val RcpropertyParseFlags: '_object * '_object -> bool * '_gvalue
        val RcpropertyParseEnum: '_object * '_object -> bool * '_gvalue
        val RcpropertyParseColor: '_object * '_object -> bool * '_gvalue
        val RcparsePriority: '_object * 'gtk_pathprioritytype_t -> int * 'gtk_pathprioritytype_t
        val RcparseState: '_object * 'gtk_statetype_t -> int * 'gtk_statetype_t
        val RcparseColor: '_object * '_object -> int
        val RcgetIMModuleFile: unit -> string
        val RcgetIMModulePath: unit -> string
        val RcgetModuleDir: unit -> string
        val RcgetThemeDir: unit -> string
        val RcfindModuleInPath: string -> string
        val RcreparseAll: unit -> bool
        val RcparseString: string -> unit
        val Rcparse: string -> unit
        val RcfindPixmapInPath: '_object * '_object * string -> string
        val RcresetStyles: '_object -> unit
        val RcreparseAllForSettings: '_object * bool -> bool
        val RcgetStyleByPaths: '_object * string * string * '_gtype -> '_object
        val RcgetDefaultFiles: unit -> '_object
        val RcsetDefaultFiles: (string vector) -> unit
        val RcaddDefaultFile: string -> unit
        val ShowaboutDialog: '_object * string -> unit
        val Setlocale: unit -> string
        val Disablesetlocale: unit -> unit
        val TargetlistAddUriTargets: '_object * int -> unit
        val TargetlistAddImageTargets: '_object * int * bool -> unit
        val TargetlistAddTextTargets: '_object * int -> unit
        val AcceleratorgetLabel: int * 'gdk_modifiertype_t -> string
        val AcceleratorgetDefaultModMask: unit -> int
        val AcceleratorsetDefaultModMask: 'gdk_modifiertype_t -> unit
        val Acceleratorname: int * 'gdk_modifiertype_t -> string
        val Acceleratorparse: string * int * 'gdk_modifiertype_t -> int * 'gdk_modifiertype_t
        val Acceleratorvalid: int * 'gdk_modifiertype_t -> bool
        val GeteventWidget: '_object -> '_object
        val GetcurrentEventState: 'gdk_modifiertype_t -> bool * 'gdk_modifiertype_t
        val GetcurrentEventTime: unit -> int
        val GetcurrentEvent: unit -> '_object
        val GetdefaultLanguage: unit -> '_object
        val SelectionownerSetForDisplay: '_object * '_object * 'word32_word * int -> bool
        end
        structure NativeCanvas :
        sig
        val Pointsnew: int -> '_object
        val Pointsset: '_object * int * real -> unit
        val CanvasPathDefnew: unit -> '_object
        val WidgetgetType: unit -> '_gtype
        val TextgetType: unit -> '_gtype
        val PolygongetType: unit -> '_gtype
        val EllipsegetType: unit -> '_gtype
        val RectgetType: unit -> '_gtype
        val RichTextgetType: unit -> '_gtype
        val PixbufgetType: unit -> '_gtype
        val LinegetType: unit -> '_gtype
        val Groupnew: { item_list : '_object list } -> '_object
        val GroupgetType: unit -> '_gtype
        val Groupadd: '_object * '_gtype * string -> '_object
        val GroupnewItem: '_object * '_gtype -> '_object
        val GroupgetFieldItemList: '_object -> '_object list
        val GroupsetFieldItemList: '_object * ('_object list) -> unit
        val ItemgetBounds: '_object * real * real * real * real -> real * real * real * real
        val ItemgrabFocus: '_object -> unit
        val Itemreparent: '_object * '_object -> unit
        val Itemi2cAffine: '_object * (real vector) -> unit
        val Itemi2wAffine: '_object * (real vector) -> unit
        val Itemi2w: '_object * real * real -> real * real
        val Itemw2i: '_object * real * real -> real * real
        val Itemhide: '_object -> unit
        val Itemshow: '_object -> unit
        val ItemlowerToBottom: '_object -> unit
        val ItemraiseToTop: '_object -> unit
        val ItemlowerWindow: '_object * int -> unit
        val ItemraiseWindow: '_object * int -> unit
        val ItemaffineAbsolute: '_object * (real vector) -> unit
        val ItemaffineRelative: '_object * (real vector) -> unit
        val Itemmove: '_object * real * real -> unit
        val Itemset: '_object * string -> unit
        val ItemgetType: unit -> '_gtype
        val GnomenewAa: unit -> '_object
        val Gnomenew: unit -> '_object
        val GnomegetDither: '_object -> 'gdk_rgbdither_t
        val GnomesetDither: '_object * 'gdk_rgbdither_t -> unit
        val GnomegetColorPixel: '_object * int -> int
        val GnomegetColor: '_object * string * '_object -> int
        val GnomeworldToWindow: '_object * real * real * real * real -> real * real
        val GnomewindowToWorld: '_object * real * real * real * real -> real * real
        val Gnomec2w: '_object * int * int * real * real -> real * real
        val Gnomew2cD: '_object * real * real * real * real -> real * real
        val Gnomew2c: '_object * real * real * int * int -> int * int
        val Gnomew2cAffine: '_object * (real vector) -> unit
        val GnomegetItemAt: '_object * real * real -> '_object
        val GnomeupdateNow: '_object -> unit
        val GnomegetScrollOffsets: '_object * int * int -> int * int
        val GnomescrollTo: '_object * int * int -> unit
        val GnomegetScrollRegion: '_object * real * real * real * real -> real * real * real * real
        val GnomesetScrollRegion: '_object * real * real * real * real -> unit
        val GnomesetCenterScrollRegion: '_object * bool -> unit
        val GnomesetPixelsPerUnit: '_object * real -> unit
        val Gnomeroot: '_object -> '_object
        val GnomegetType: unit -> '_gtype
        end
    end
end
