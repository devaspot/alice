import structure Reflect from "x-alice:/lib/system/Reflect"
import structure GrTypes from "gui/GrTypes"
import structure AbsTree from "AbsTree"

local 
  type tree = GrTypes.tree
in
signature MONITORS =
sig

  val purge : unit -> unit

  (* The tree MUST be a container. *)
  val addReference  : Reflect.value * tree -> int
  val monitor       : (AbsTree.tree -> tree -> unit) -> unit -> unit

  (* The tree MUST be a container. *)
  val addFuture     : Reflect.value * tree -> int
  val updateFuture  : (AbsTree.tree -> tree -> unit) -> int -> unit

  val destroy       : tree -> unit

  (* Show / Hide identifiers. *)
  val identifiers   : (int -> tree -> unit) * (tree -> unit) -> unit

end
end
