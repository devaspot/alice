(*
 * Author:
 *   Andreas Rossberg <rossberg@ps.uni-sb.de>
 *
 * Copyright:
 *   Andreas Rossberg, 2004
 *
 * Last change:
 *   $Date: 2004-12-09 12:10:40 $ by $Author: rossberg $
 *   $Revision: 1.1 $
 *)

import structure __pervasive                    from "Pervasive"
import __primitive type exn and unit and string from "ToplevelTypes"
import __primitive signature EXN                from "EXN-sig"

structure Exn : EXN =
struct
    type exn    = exn
    type t      = exn
    __primitive type packet = "Exn.packet"
    type trace
    type packet' = exn * trace

    __primitive val name : exn -> string = "Exn.name"
    val message = name

    __primitive val seal :   packet' -> packet = "Unsafe.cast"
    __primitive val unseal : packet -> packet' = "Unsafe.cast"

    fun fromPacket p = #1 (unseal p)
    fun update (p, e) = seal (e, #2 (unseal p))

    __primitive val catch' :   (packet -> 'a) * (unit -> 'a) -> 'a = "Exn.catch"
    __primitive val dumpTrace : packet -> unit = "Exn.dumpTrace"
    __primitive val reraise :   packet -> 'a   = "Exn.reraise"

    fun catch f g = catch' (f,g)
end
