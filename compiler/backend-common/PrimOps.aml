(*
 * Author:
 *   Leif Kornstaedt <kornstae@ps.uni-sb.de>
 *
 * Copyright:
 *   Leif Kornstaedt, 2000-2002
 *
 * Last change:
 *   $Date: 2006-07-26 09:21:19 $ by $Author: rossberg $
 *   $Revision: 1.49 $
 *)

import structure StringMap from "../infrastructure/StringMap"
import structure Arity     from "Arity"
import signature PRIM_OPS  from "PRIM_OPS-sig"

structure PrimOps :> PRIM_OPS =
    struct
	exception UnknownPrim

	open Arity

	val map =
	    let
		val map = StringMap.map ()
		fun ins (name, arityOpt) =
		    StringMap.insertDisjoint (map, name, arityOpt)
	    in
		ins ("op=", SOME (Tuple 2));
		ins ("op<>", SOME (Tuple 2));
		ins ("Array.array", SOME (Tuple 2));
		ins ("Array.extract", SOME (Tuple 3));
		ins ("Array.fromList", SOME Unary);
		ins ("Array.fromVector", SOME Unary);
		ins ("Array.length", SOME Unary);
		ins ("Array.maxLen", NONE);
		ins ("Array.sub", SOME (Tuple 2));
		ins ("Array.tabulate", SOME (Tuple 2));
		ins ("Array.toList", SOME Unary);
		ins ("Array.update", SOME (Tuple 3));
		ins ("Byte.bytesToString", SOME Unary);
		ins ("Byte.stringToBytes", SOME Unary);
		ins ("Char.<", SOME (Tuple 2));
		ins ("Char.>", SOME (Tuple 2));
		ins ("Char.<=", SOME (Tuple 2));
		ins ("Char.>=", SOME (Tuple 2));
		ins ("Char.ord", SOME Unary);
		ins ("Char.chr", SOME Unary);
		ins ("Char.isAlpha", SOME Unary);
		ins ("Char.isAlphaNum", SOME Unary);
		ins ("Char.isCntrl", SOME Unary);
		ins ("Char.isDigit", SOME Unary);
		ins ("Char.isGraph", SOME Unary);
		ins ("Char.isHexDigit", SOME Unary);
		ins ("Char.isLower", SOME Unary);
		ins ("Char.isPrint", SOME Unary);
		ins ("Char.isPunct", SOME Unary);
		ins ("Char.isSpace", SOME Unary);
		ins ("Char.isUpper", SOME Unary);
		ins ("Char.toLower", SOME Unary);
		ins ("Char.toUpper", SOME Unary);
		ins ("CharArray.array", SOME (Tuple 2));
		ins ("CharArray.extract", SOME (Tuple 3));
		ins ("CharArray.fromList", SOME Unary);
		ins ("CharArray.fromVector", SOME Unary);
		ins ("CharArray.length", SOME Unary);
		ins ("CharArray.maxLen", NONE);
		ins ("CharArray.sub", SOME (Tuple 2));
		ins ("CharArray.tabulate", SOME (Tuple 2));
		ins ("CharArray.toList", SOME Unary);
		ins ("CharArray.update", SOME (Tuple 3));
		ins ("CharVector.concat", SOME Unary);
		ins ("CharVector.extract", SOME (Tuple 3));
		ins ("CharVector.fromList", SOME Unary);
		ins ("CharVector.maxLen", NONE);
		ins ("CharVector.length", SOME Unary);
		ins ("CharVector.sub", SOME (Tuple 2));
		ins ("CharVector.tabulate", SOME (Tuple 2));
		ins ("CharVector.toList", SOME Unary);
		ins ("Exn.catch", SOME (Tuple 2));
		ins ("Exn.dumpTrace", SOME (Tuple 2));
		ins ("Exn.name", SOME Unary);
		ins ("Exn.reraise", SOME (Tuple 2));
		ins ("Future.Cyclic", NONE);
		ins ("Future.alarm'", SOME Unary);
		ins ("Future.await", SOME Unary);
		ins ("Future.awaitEither'", SOME (Tuple 2));
		ins ("Future.byneed", SOME Unary);
		ins ("Future.concur", SOME Unary);
		ins ("Future.isByneed", SOME Unary);
		ins ("Future.status", SOME Unary);
		ins ("General.Assert", NONE);
		ins ("General.Bind", NONE);
		ins ("General.Chr", NONE);
		ins ("General.Div", NONE);
		ins ("General.Domain", NONE);
		ins ("General.Fail", NONE);
		ins ("General.Match", NONE);
		ins ("General.Overflow", NONE);
		ins ("General.Size", NONE);
		ins ("General.Span", NONE);
		ins ("General.Subscript", NONE);
		ins ("General.Unordered", NONE);
		ins ("GlobalStamp.new", SOME (Tuple 0));
		ins ("GlobalStamp.fromString", SOME Unary);
		ins ("GlobalStamp.toString", SOME Unary);
		ins ("GlobalStamp.compare", SOME (Tuple 2));
		ins ("GlobalStamp.hash", SOME Unary);
		ins ("Hole.Hole", NONE);
		ins ("Hole.fail", SOME (Tuple 2));
		ins ("Hole.fill", SOME (Tuple 2));
		ins ("Hole.future", SOME Unary);
		ins ("Hole.hole", SOME (Tuple 0));
		ins ("Hole.isFailed", SOME Unary);
		ins ("Hole.isHole", SOME Unary);
		ins ("IEEEReal.getRoundingMode", NONE);
		ins ("IEEEReal.setRoundingMode", SOME Unary);
		ins ("Int.~", SOME Unary);
		ins ("Int.+", SOME (Tuple 2));
		ins ("Int.-", SOME (Tuple 2));
		ins ("Int.*", SOME (Tuple 2));
		ins ("Int.<", SOME (Tuple 2));
		ins ("Int.>", SOME (Tuple 2));
		ins ("Int.<=", SOME (Tuple 2));
		ins ("Int.>=", SOME (Tuple 2));
		ins ("Int.abs", SOME Unary);
		ins ("Int.compare", SOME (Tuple 2));
		ins ("Int.div", SOME (Tuple 2));
		ins ("Int.maxInt", NONE);
		ins ("Int.minInt", NONE);
		ins ("Int.mod", SOME (Tuple 2));
		ins ("Int.precision", NONE);
		ins ("Int.quot", SOME (Tuple 2));
		ins ("Int.rem", SOME (Tuple 2));
		ins ("IntInf.fromInt", SOME Unary);
		ins ("IntInf.toInt", SOME Unary);
		ins ("IntInf.~", SOME Unary);
		ins ("IntInf.+", SOME (Tuple 2));
		ins ("IntInf.-", SOME (Tuple 2));
		ins ("IntInf.*", SOME (Tuple 2));
		ins ("IntInf.<", SOME (Tuple 2));
		ins ("IntInf.>", SOME (Tuple 2));
		ins ("IntInf.<=", SOME (Tuple 2));
		ins ("IntInf.>=", SOME (Tuple 2));
		ins ("IntInf.abs", SOME Unary);
		ins ("IntInf.compare", SOME (Tuple 2));
		ins ("IntInf.div", SOME (Tuple 2));
		ins ("IntInf.mod", SOME (Tuple 2));
		ins ("IntInf.quot", SOME (Tuple 2));
		ins ("IntInf.rem", SOME (Tuple 2));
		ins ("IntInf.divMod", SOME (Tuple 2));
		ins ("IntInf.quotRem", SOME (Tuple 2));
		ins ("IntInf.pow", SOME (Tuple 2));
		ins ("IntInf.log2", SOME Unary);
		ins ("IntInf.orb", SOME (Tuple 2));
		ins ("IntInf.xorb", SOME (Tuple 2));
		ins ("IntInf.andb", SOME (Tuple 2));
		ins ("IntInf.notb", SOME Unary);
		ins ("IntInf.<<", SOME (Tuple 2));
		ins ("IntInf.~>>", SOME (Tuple 2));
		ins ("List.Empty", NONE);
		ins ("Math.acos", SOME Unary);
		ins ("Math.acosh", SOME Unary);
		ins ("Math.asin", SOME Unary);
		ins ("Math.asinh", SOME Unary);
		ins ("Math.atan", SOME Unary);
		ins ("Math.atanh", SOME Unary);
		ins ("Math.atan2", SOME (Tuple 2));
		ins ("Math.cos", SOME Unary);
		ins ("Math.cosh", SOME Unary);
		ins ("Math.e", NONE);
		ins ("Math.exp", SOME Unary);
		ins ("Math.ln", SOME Unary);
		ins ("Math.pi", NONE);
		ins ("Math.pow", SOME (Tuple 2));
		ins ("Math.sin", SOME Unary);
		ins ("Math.sinh", SOME Unary);
		ins ("Math.sqrt", SOME Unary);
		ins ("Math.tan", SOME Unary);
		ins ("Math.tanh", SOME Unary);
		ins ("Option.Option", NONE);
		ins ("Promise.Promise", NONE);
		ins ("Promise.future", SOME Unary);
		ins ("Promise.isFulfilled", SOME Unary);
		ins ("Promise.fail", SOME (Tuple 2));
		ins ("Promise.fulfill", SOME (Tuple 2));
		ins ("Promise.promise", SOME (Tuple 0));
		ins ("Real.~", SOME Unary);
		ins ("Real.+", SOME (Tuple 2));
		ins ("Real.-", SOME (Tuple 2));
		ins ("Real.*", SOME (Tuple 2));
		ins ("Real./", SOME (Tuple 2));
		ins ("Real.<", SOME (Tuple 2));
		ins ("Real.>", SOME (Tuple 2));
		ins ("Real.<=", SOME (Tuple 2));
		ins ("Real.>=", SOME (Tuple 2));
		ins ("Real.ceil", SOME Unary);
		ins ("Real.largeCeil", SOME Unary);
		ins ("Real.compare", SOME (Tuple 2));
		ins ("Real.floor", SOME Unary);
		ins ("Real.largeFloor", SOME Unary);
		ins ("Real.fromInt", SOME Unary);
		ins ("Real.fromLargeInt", SOME Unary);
		ins ("Real.precision", NONE);
		ins ("Real.realCeil", SOME Unary);
		ins ("Real.realFloor", SOME Unary);
		ins ("Real.realRound", SOME Unary);
		ins ("Real.realTrunc", SOME Unary);
		ins ("Real.rem", SOME (Tuple 2));
		ins ("Real.round", SOME Unary);
		ins ("Real.largeRound", SOME Unary);
		ins ("Real.toString", SOME Unary);
		ins ("Real.trunc", SOME Unary);
		ins ("Real.largeTrunc", SOME Unary);
		ins ("Ref.:=", SOME (Tuple 2));
		ins ("Ref.exchange", SOME (Tuple 2));
		ins ("Remote.dynamicCall", SOME (Tuple 2));
		ins ("String.^", SOME (Tuple 2));
		ins ("String.<", SOME (Tuple 2));
		ins ("String.>", SOME (Tuple 2));
		ins ("String.<=", SOME (Tuple 2));
		ins ("String.>=", SOME (Tuple 2));
		ins ("String.compare", SOME (Tuple 2));
		ins ("String.hash", SOME Unary);
		ins ("String.str", SOME Unary);
		ins ("Thread.Terminate", NONE);
		ins ("Thread.Terminated", NONE);
		ins ("Thread.current", SOME (Tuple 0));
		ins ("Thread.isSuspended", SOME Unary);
		ins ("Thread.raiseIn", SOME (Tuple 2));
		ins ("Thread.resume", SOME Unary);
		ins ("Thread.state", SOME Unary);
		ins ("Thread.suspend", SOME Unary);
		ins ("Thread.yield", SOME Unary);
		ins ("UniqueString.unique", SOME Unary);
		ins ("UniqueString.string", SOME Unary);
		ins ("UniqueString.hash", SOME Unary);
		ins ("Unsafe.Array.sub", SOME (Tuple 2));
		ins ("Unsafe.Array.update", SOME (Tuple 3));
		ins ("Unsafe.String.sub", SOME (Tuple 2));
		ins ("Unsafe.Vector.sub", SOME (Tuple 2));
		ins ("Unsafe.cast", SOME Unary);
		ins ("UnsafeMap.IllegalKey", NONE);
		ins ("UnsafeMap.condGet", SOME (Tuple 3));
		ins ("UnsafeMap.clear", SOME Unary);
		ins ("UnsafeMap.get", SOME (Tuple 2));
		ins ("UnsafeMap.getSize", SOME Unary);
		ins ("UnsafeMap.isMember", SOME (Tuple 2));
		ins ("UnsafeMap.new", SOME Unary);
		ins ("UnsafeMap.put", SOME (Tuple 3));
		ins ("UnsafeMap.remove", SOME (Tuple 2));
		ins ("UnsafeMap.toList", SOME Unary);
		ins ("UnsafeMap.toVector", SOME Unary);
		ins ("Vector.concat", SOME Unary);
		ins ("Vector.extract", SOME (Tuple 3));
		ins ("Vector.fromList", SOME Unary);
		ins ("Vector.maxLen", NONE);
		ins ("Vector.length", SOME Unary);
		ins ("Vector.sub", SOME (Tuple 2));
		ins ("Vector.tabulate", SOME (Tuple 2));
		ins ("Vector.toList", SOME Unary);
		ins ("Word8.+", SOME (Tuple 2));
		ins ("Word8.-", SOME (Tuple 2));
		ins ("Word8.*", SOME (Tuple 2));
		ins ("Word8.<<", SOME (Tuple 2));
		ins ("Word8.>>", SOME (Tuple 2));
		ins ("Word8.~>>", SOME (Tuple 2));
		ins ("Word8.<", SOME (Tuple 2));
		ins ("Word8.>", SOME (Tuple 2));
		ins ("Word8.<=", SOME (Tuple 2));
		ins ("Word8.>=", SOME (Tuple 2));
		ins ("Word8.andb", SOME (Tuple 2));
		ins ("Word8.div", SOME (Tuple 2));
		ins ("Word8.fromInt", SOME Unary);
		ins ("Word8.fromLargeInt", SOME Unary);
		ins ("Word8.fromLarge", SOME Unary);
		ins ("Word8.fromLargeX", SOME Unary);
		ins ("Word8.mod", SOME (Tuple 2));
		ins ("Word8.notb", SOME Unary);
		ins ("Word8.orb", SOME (Tuple 2));
		ins ("Word8.toInt", SOME Unary);
		ins ("Word8.toIntX", SOME Unary);
		ins ("Word8.toLargeInt", SOME Unary);
		ins ("Word8.toLargeIntX", SOME Unary);
		ins ("Word8.toLarge", SOME Unary);
		ins ("Word8.toLargeX", SOME Unary);
		ins ("Word8.wordSize", NONE);
		ins ("Word8.xorb", SOME (Tuple 2));
		ins ("Word8Array.array", SOME (Tuple 2));
		ins ("Word8Array.extract", SOME (Tuple 3));
		ins ("Word8Array.fromList", SOME Unary);
		ins ("Word8Array.fromVector", SOME Unary);
		ins ("Word8Array.length", SOME Unary);
		ins ("Word8Array.maxLen", NONE);
		ins ("Word8Array.sub", SOME (Tuple 2));
		ins ("Word8Array.tabulate", SOME (Tuple 2));
		ins ("Word8Array.toList", SOME Unary);
		ins ("Word8Array.update", SOME (Tuple 3));
		ins ("Word8Vector.concat", SOME Unary);
		ins ("Word8Vector.extract", SOME (Tuple 3));
		ins ("Word8Vector.fromList", SOME Unary);
		ins ("Word8Vector.maxLen", NONE);
		ins ("Word8Vector.length", SOME Unary);
		ins ("Word8Vector.sub", SOME (Tuple 2));
		ins ("Word8Vector.tabulate", SOME (Tuple 2));
		ins ("Word8Vector.toList", SOME Unary);
		ins ("Word31.+", SOME (Tuple 2));
		ins ("Word31.-", SOME (Tuple 2));
		ins ("Word31.*", SOME (Tuple 2));
		ins ("Word31.<<", SOME (Tuple 2));
		ins ("Word31.>>", SOME (Tuple 2));
		ins ("Word31.~>>", SOME (Tuple 2));
		ins ("Word31.<", SOME (Tuple 2));
		ins ("Word31.>", SOME (Tuple 2));
		ins ("Word31.<=", SOME (Tuple 2));
		ins ("Word31.>=", SOME (Tuple 2));
		ins ("Word31.andb", SOME (Tuple 2));
		ins ("Word31.div", SOME (Tuple 2));
		ins ("Word31.fromInt", SOME Unary);
		ins ("Word31.fromLargeInt", SOME Unary);
		ins ("Word31.fromLarge", SOME Unary);
		ins ("Word31.fromLargeX", SOME Unary);
		ins ("Word31.mod", SOME (Tuple 2));
		ins ("Word31.notb", SOME Unary);
		ins ("Word31.orb", SOME (Tuple 2));
		ins ("Word31.toInt", SOME Unary);
		ins ("Word31.toIntX", SOME Unary);
		ins ("Word31.toLargeInt", SOME Unary);
		ins ("Word31.toLargeIntX", SOME Unary);
		ins ("Word31.toLarge", SOME Unary);
		ins ("Word31.toLargeX", SOME Unary);
		ins ("Word31.wordSize", NONE);
		ins ("Word31.xorb", SOME (Tuple 2));
		ins ("Word32.+", SOME (Tuple 2));
		ins ("Word32.-", SOME (Tuple 2));
		ins ("Word32.*", SOME (Tuple 2));
		ins ("Word32.<<", SOME (Tuple 2));
		ins ("Word32.>>", SOME (Tuple 2));
		ins ("Word32.~>>", SOME (Tuple 2));
		ins ("Word32.<", SOME (Tuple 2));
		ins ("Word32.>", SOME (Tuple 2));
		ins ("Word32.<=", SOME (Tuple 2));
		ins ("Word32.>=", SOME (Tuple 2));
		ins ("Word32.andb", SOME (Tuple 2));
		ins ("Word32.div", SOME (Tuple 2));
		ins ("Word32.fromInt", SOME Unary);
		ins ("Word32.fromLargeInt", SOME Unary);
		ins ("Word32.fromLarge", SOME Unary);
		ins ("Word32.fromLargeX", SOME Unary);
		ins ("Word32.mod", SOME (Tuple 2));
		ins ("Word32.notb", SOME Unary);
		ins ("Word32.orb", SOME (Tuple 2));
		ins ("Word32.toInt", SOME Unary);
		ins ("Word32.toIntX", SOME Unary);
		ins ("Word32.toLargeInt", SOME Unary);
		ins ("Word32.toLargeIntX", SOME Unary);
		ins ("Word32.toLarge", SOME Unary);
		ins ("Word32.toLargeX", SOME Unary);
		ins ("Word32.wordSize", NONE);
		ins ("Word32.xorb", SOME (Tuple 2));
		map
	    end

	fun getArity name =
	    StringMap.lookupExistent (map, name)
	    handle StringMap.Unknown _ => raise UnknownPrim
    end
